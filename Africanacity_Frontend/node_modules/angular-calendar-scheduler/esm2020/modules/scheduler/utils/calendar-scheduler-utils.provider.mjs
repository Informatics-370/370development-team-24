import { Inject, Injectable } from '@angular/core';
import { getSchedulerViewHourGrid, getSchedulerViewDays, getSchedulerView } from './calendar-scheduler-utils';
import { MOMENT } from 'angular-calendar';
import * as i0 from "@angular/core";
import * as i1 from "angular-calendar";
export class CalendarSchedulerUtils {
    constructor(dateAdapter, moment) {
        this.dateAdapter = dateAdapter;
        this.moment = moment;
    }
    getSchedulerViewHourGrid(args) {
        return getSchedulerViewHourGrid(this.dateAdapter, args);
    }
    getSchedulerViewDays(args) {
        return getSchedulerViewDays(this.dateAdapter, args);
    }
    getSchedulerView(args) {
        return getSchedulerView(this.dateAdapter, this.moment, args);
    }
}
CalendarSchedulerUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.0", ngImport: i0, type: CalendarSchedulerUtils, deps: [{ token: i1.DateAdapter }, { token: MOMENT }], target: i0.ɵɵFactoryTarget.Injectable });
CalendarSchedulerUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.0", ngImport: i0, type: CalendarSchedulerUtils });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.0", ngImport: i0, type: CalendarSchedulerUtils, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.DateAdapter }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MOMENT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItc2NoZWR1bGVyLXV0aWxzLnByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGliL21vZHVsZXMvc2NoZWR1bGVyL3V0aWxzL2NhbGVuZGFyLXNjaGVkdWxlci11dGlscy5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQ0gsd0JBQXdCLEVBRXhCLG9CQUFvQixFQUVwQixnQkFBZ0IsRUFFbkIsTUFBTSw0QkFBNEIsQ0FBQztBQUdwQyxPQUFPLEVBQWUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7OztBQUd2RCxNQUFNLE9BQU8sc0JBQXNCO0lBQy9CLFlBQW9CLFdBQXdCLEVBQTRCLE1BQVc7UUFBL0QsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFBNEIsV0FBTSxHQUFOLE1BQU0sQ0FBSztJQUFJLENBQUM7SUFFeEYsd0JBQXdCLENBQUMsSUFBa0M7UUFDdkQsT0FBTyx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxvQkFBb0IsQ0FBQyxJQUE4QjtRQUMvQyxPQUFPLG9CQUFvQixDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELGdCQUFnQixDQUFDLElBQTBCO1FBQ3ZDLE9BQU8sZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2pFLENBQUM7O21IQWJRLHNCQUFzQiw2Q0FDdUIsTUFBTTt1SEFEbkQsc0JBQXNCOzJGQUF0QixzQkFBc0I7a0JBRGxDLFVBQVU7OzBCQUV3QyxNQUFNOzJCQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICAgIGdldFNjaGVkdWxlclZpZXdIb3VyR3JpZCxcclxuICAgIEdldFNjaGVkdWxlclZpZXdIb3VyR3JpZEFyZ3MsXHJcbiAgICBnZXRTY2hlZHVsZXJWaWV3RGF5cyxcclxuICAgIEdldFNjaGVkdWxlclZpZXdEYXlzQXJncyxcclxuICAgIGdldFNjaGVkdWxlclZpZXcsXHJcbiAgICBHZXRTY2hlZHVsZXJWaWV3QXJnc1xyXG59IGZyb20gJy4vY2FsZW5kYXItc2NoZWR1bGVyLXV0aWxzJztcclxuaW1wb3J0IHsgV2Vla1ZpZXdIb3VyIH0gZnJvbSAnY2FsZW5kYXItdXRpbHMnO1xyXG5pbXBvcnQgeyBTY2hlZHVsZXJWaWV3LCBTY2hlZHVsZXJWaWV3RGF5IH0gZnJvbSAnLi4vbW9kZWxzJztcclxuaW1wb3J0IHsgRGF0ZUFkYXB0ZXIsIE1PTUVOVCB9IGZyb20gJ2FuZ3VsYXItY2FsZW5kYXInO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ2FsZW5kYXJTY2hlZHVsZXJVdGlscyB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRhdGVBZGFwdGVyOiBEYXRlQWRhcHRlciwgQEluamVjdChNT01FTlQpIHByb3RlY3RlZCBtb21lbnQ6IGFueSkgeyB9XHJcblxyXG4gICAgZ2V0U2NoZWR1bGVyVmlld0hvdXJHcmlkKGFyZ3M6IEdldFNjaGVkdWxlclZpZXdIb3VyR3JpZEFyZ3MpOiBXZWVrVmlld0hvdXJbXSB7XHJcbiAgICAgICAgcmV0dXJuIGdldFNjaGVkdWxlclZpZXdIb3VyR3JpZCh0aGlzLmRhdGVBZGFwdGVyLCBhcmdzKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRTY2hlZHVsZXJWaWV3RGF5cyhhcmdzOiBHZXRTY2hlZHVsZXJWaWV3RGF5c0FyZ3MpOiBTY2hlZHVsZXJWaWV3RGF5W10ge1xyXG4gICAgICAgIHJldHVybiBnZXRTY2hlZHVsZXJWaWV3RGF5cyh0aGlzLmRhdGVBZGFwdGVyLCBhcmdzKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRTY2hlZHVsZXJWaWV3KGFyZ3M6IEdldFNjaGVkdWxlclZpZXdBcmdzKTogU2NoZWR1bGVyVmlldyB7XHJcbiAgICAgICAgcmV0dXJuIGdldFNjaGVkdWxlclZpZXcodGhpcy5kYXRlQWRhcHRlciwgdGhpcy5tb21lbnQsIGFyZ3MpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==