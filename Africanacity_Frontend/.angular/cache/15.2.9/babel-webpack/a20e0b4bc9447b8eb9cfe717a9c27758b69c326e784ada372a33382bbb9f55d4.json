{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../../../shared/employee';\nimport { NotificationDialogComponent } from '../notification-dialog/notification-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/employee.service\";\nimport * as i2 from \"src/app/service/email.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"../../../navbar/navbar.component\";\nconst _c0 = [\"toastContainer\"];\nfunction AddEmployeeComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\nfunction AddEmployeeComponent_mat_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", name_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", name_r2, \" \");\n  }\n}\nexport class AddEmployeeComponent {\n  constructor(employeeservice, emailservice, router, dialog, snackBar) {\n    this.employeeservice = employeeservice;\n    this.router = router;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.employeeForm = new FormGroup({\n      surname: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required]),\n      email_Address: new FormControl('', [Validators.required]),\n      physical_Address: new FormControl('', [Validators.required]),\n      phoneNumber: new FormControl('', [Validators.required])\n    });\n    this.Roles = ['Driver', 'Administrator', 'Waiter'];\n  }\n  //EmailVerification\n  checkEmail() {\n    this.employeeservice.checkEmail(this.email).subscribe(response => {\n      this.message = response.message;\n    }, error => {\n      console.error('Error checking email:', error);\n    });\n  }\n  // Display Notifcations\n  openDialog() {\n    const dialogRef = this.dialog.open(NotificationDialogComponent, {\n      width: '250px',\n      data: 'Add new Employee?'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'Yes') {\n        this.onSubmit();\n      }\n    });\n  }\n  ngOnInit() {}\n  cancel() {\n    this.router.navigate(['/home']);\n  }\n  onSubmit() {\n    let employee = new Employee();\n    employee.surname = this.employeeForm.value.surname;\n    employee.firstName = this.employeeForm.value.firstName;\n    employee.email_Address = this.employeeForm.value.email_Address;\n    employee.physical_Address = this.employeeForm.value.physical_Address;\n    employee.phoneNumber = this.employeeForm.value.phoneNumber;\n    this.employeeservice.AddEmployee(employee).subscribe(result => {\n      this.router.navigate(['/view-employees']);\n    });\n    this.employeeservice.AddEmployee(employee).subscribe(res => {\n      if (res.statusCode == 200) {\n        this.router.navigate(['/']);\n      } else {}\n    });\n    this.showSuccessMessage('Enter valid phone number!');\n  }\n  showSuccessMessage(message) {\n    const snackBarRef = this.snackBar.open(message, 'Ok', {\n      duration: 5000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n    snackBarRef.afterDismissed().subscribe(() => {\n      this.toastContainer.clear();\n    });\n  }\n}\nAddEmployeeComponent.ɵfac = function AddEmployeeComponent_Factory(t) {\n  return new (t || AddEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.EmailService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n};\nAddEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEmployeeComponent,\n  selectors: [[\"app-add-employee\"]],\n  viewQuery: function AddEmployeeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toastContainer = _t.first);\n    }\n  },\n  decls: 54,\n  vars: 9,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-2\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"surname\", 1, \"col-md-1\", 2, \"font-weight\", \"bold\"], [1, \"col-md-8\"], [\"placeholder\", \"Enter Surname\", \"name\", \"surname\", \"formControlName\", \"surname\", 1, \"form-control\", 3, \"required\"], [\"for\", \"firstName\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"placeholder\", \"Enter First Name\", \"name\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"email_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"placeholder\", \"xxxxx@gmail.com\", \"name\", \"email_Address\", \"formControlName\", \"email_Address\", 1, \"form-control\", 3, \"required\"], [\"class\", \"message\", 4, \"ngIf\"], [\"for\", \"physical_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"physical_Address\", \"placeholder\", \"Enter Address\", \"name\", \"physical_Address\", \"formControlName\", \"physical_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"phoneNumber\", 1, \"col-sm-2\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"placeholder\", \"Enter 10-digit number\", \"name\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-2\", 2, \"font-weight\", \"bold\"], [\"type\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"message\"], [3, \"value\"]],\n  template: function AddEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\", 4);\n      i0.ɵɵtext(6, \"Add Employee \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function AddEmployeeComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Surname:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"span\")(18, \"label\", 11);\n      i0.ɵɵtext(19, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 12);\n      i0.ɵɵelement(21, \"input\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"label\", 14);\n      i0.ɵɵtext(24, \"Email Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 12);\n      i0.ɵɵelement(26, \"input\", 15);\n      i0.ɵɵtemplate(27, AddEmployeeComponent_div_27_Template, 2, 1, \"div\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 7)(29, \"label\", 17);\n      i0.ɵɵtext(30, \"Physical Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 12);\n      i0.ɵɵelement(32, \"input\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 7)(34, \"label\", 19);\n      i0.ɵɵtext(35, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 12);\n      i0.ɵɵelement(37, \"input\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 7)(39, \"label\", 21);\n      i0.ɵɵtext(40, \"Employee Role:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 12)(42, \"div\", 22)(43, \"mat-form-field\")(44, \"mat-label\");\n      i0.ɵɵtext(45, \"Select a name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"mat-select\");\n      i0.ɵɵtemplate(47, AddEmployeeComponent_mat_option_47_Template, 2, 2, \"mat-option\", 23);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(48, \"div\", 7)(49, \"div\", 24)(50, \"button\", 25);\n      i0.ɵɵtext(51, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"button\", 26);\n      i0.ɵɵlistener(\"click\", function AddEmployeeComponent_Template_button_click_52_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(53, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Roles);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.employeeForm.valid);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.FormGroupDirective, i7.FormControlName, i8.MatOption, i9.MatFormField, i9.MatLabel, i10.MatSelect, i11.NavbarComponent],\n  styles: [\".form-group[_ngcontent-%COMP%] {\\r\\n    .label{\\r\\n        font-size: 100px;\\r\\n    }\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1lbXBsb3llZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7UUFDSSxnQkFBZ0I7SUFDcEI7QUFDSiIsImZpbGUiOiJhZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWdyb3VwIHtcclxuICAgIC5sYWJlbHtcclxuICAgICAgICBmb250LXNpemU6IDEwMHB4O1xyXG4gICAgfVxyXG59Il19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vRW1wbG95ZWVzL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO1FBQ0ksZ0JBQWdCO0lBQ3BCO0FBQ0o7QUFDQSxvWEFBb1giLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1ncm91cCB7XHJcbiAgICAubGFiZWx7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMDBweDtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\", \".message[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  background-color: lightgray;\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1lbXBsb3llZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsYUFBYTtFQUNiLDJCQUEyQjtFQUMzQixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoiYWRkLWVtcGxveWVlLmNvbXBvbmVudC50cyIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1lc3NhZ2Uge1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG4iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vRW1wbG95ZWVzL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLGFBQWE7RUFDYiwyQkFBMkI7RUFDM0IsZ0JBQWdCO0FBQ2xCOztBQUVBLDRaQUE0WiIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1lc3NhZ2Uge1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["ViewContainerRef","FormControl","FormGroup","Validators","Employee","NotificationDialogComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","message","ɵɵproperty","name_r2","AddEmployeeComponent","constructor","employeeservice","emailservice","router","dialog","snackBar","employeeForm","surname","required","firstName","email_Address","physical_Address","phoneNumber","Roles","checkEmail","email","subscribe","response","error","console","openDialog","dialogRef","open","width","data","afterClosed","result","onSubmit","ngOnInit","cancel","navigate","employee","value","AddEmployee","res","statusCode","showSuccessMessage","snackBarRef","duration","horizontalPosition","verticalPosition","afterDismissed","toastContainer","clear","ɵɵdirectiveInject","i1","EmployeeService","i2","EmailService","i3","Router","i4","MatDialog","i5","MatSnackBar","selectors","viewQuery","AddEmployeeComponent_Query","rf","ctx","ɵɵelement","ɵɵlistener","AddEmployeeComponent_Template_form_ngSubmit_10_listener","ɵɵtemplate","AddEmployeeComponent_div_27_Template","AddEmployeeComponent_mat_option_47_Template","AddEmployeeComponent_Template_button_click_52_listener","valid"],"sources":["C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\add-employee\\add-employee.component.ts","C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\add-employee\\add-employee.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeService } from '../../../service/employee.service';\r\nimport { Employee } from '../../../shared/employee';\r\nimport { EmailService } from 'src/app/service/email.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { NotificationDialogComponent } from '../notification-dialog/notification-dialog.component';\r\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-employee',\r\n  templateUrl: './add-employee.component.html',\r\n  styleUrls: ['./add-employee.component.css'],\r\n//   template: `\r\n//   <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\" required>\r\n//   <button (click)=\"checkEmail()\">Check Email</button>\r\n\r\n//   <div *ngIf=\"message\" class=\"message\">\r\n//     {{ message }}\r\n//   </div>\r\n// `,\r\nstyles: [`\r\n.message {\r\n  padding: 10px;\r\n  background-color: lightgray;\r\n  margin-top: 10px;\r\n}\r\n`]\r\n\r\n})\r\nexport class AddEmployeeComponent implements OnInit {\r\n  @ViewChild('toastContainer', { read: ViewContainerRef })\r\n  toastContainer!: ViewContainerRef;\r\n  email!: string;\r\n  message!: string;\r\n\r\n   constructor(private employeeservice: EmployeeService, emailservice: EmailService,  private router: Router, private dialog: MatDialog, private snackBar: MatSnackBar) { }\r\n\r\n     employeeForm: FormGroup = new FormGroup({\r\n       surname: new FormControl('',[Validators.required]),\r\n       firstName: new FormControl('',[Validators.required]),\r\n       email_Address: new FormControl('',[Validators.required]),\r\n       physical_Address: new FormControl('',[Validators.required]),\r\n       phoneNumber: new FormControl('',[Validators.required])\r\n    \r\n     })\r\n  //EmailVerification\r\n\r\n  checkEmail() {\r\n    this.employeeservice.checkEmail(this.email).subscribe(\r\n      (response) => {\r\n        this.message = response.message;\r\n      },\r\n      (error) => {\r\n        console.error('Error checking email:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n     Roles: string[] = ['Driver', 'Administrator', 'Waiter'];\r\n\r\n     // Display Notifcations\r\n\r\n     openDialog():void{\r\n      const dialogRef = this.dialog.open(NotificationDialogComponent,{\r\n        width: '250px',\r\n        data: 'Add new Employee?'\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if(result == 'Yes'){\r\n          this.onSubmit();\r\n        }\r\n      })\r\n    }\r\n    \r\n\r\n    ngOnInit(): void {\r\n    \r\n    }\r\n\r\n    cancel(){\r\n      this.router.navigate(['/home'])\r\n    }\r\n  \r\n       onSubmit(){\r\n\r\n        let employee = new Employee();\r\n        employee.surname = this.employeeForm.value.surname;\r\n        employee.firstName = this.employeeForm.value.firstName;\r\n        employee.email_Address = this.employeeForm.value.email_Address;\r\n        employee.physical_Address = this.employeeForm.value.physical_Address;\r\n        employee.phoneNumber = this.employeeForm.value.phoneNumber;\r\n            this.employeeservice.AddEmployee(employee).subscribe(result => {\r\n                  this.router.navigate(['/view-employees'])\r\n            })\r\n    \r\n     this.employeeservice.AddEmployee(employee).subscribe((res:any) => {\r\n\r\n      if(res.statusCode == 200)\r\n      {\r\n        this.router.navigate(['/'])\r\n      }\r\n      else\r\n      {\r\n      \r\n      }\r\n     });\r\n     this.showSuccessMessage('Enter valid phone number!');\r\n         }\r\n\r\n         showSuccessMessage(message: string): void {\r\n          const snackBarRef: MatSnackBarRef<any> = this.snackBar.open(message, 'Ok', {\r\n            duration: 5000, // Duration in milliseconds\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'bottom'\r\n          });\r\n        \r\n            snackBarRef.afterDismissed().subscribe(() => {\r\n            this.toastContainer.clear();\r\n          });\r\n}\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n      <div class=\"col-md-2\">\r\n          <app-navbar></app-navbar>\r\n      </div>\r\n  <div class=\"col-md-10 order-md-2\">\r\n<h4 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px;\">Add Employee </h4>\r\n<hr>\r\n<div class=\"container\">\r\n<div class=\"row\">  \r\n<form [formGroup]=\"employeeForm\" class=\"form-horizontal\"  (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n        <label class=\" col-md-1\" style=\"font-weight: bold;\" for=\"surname\">Surname:</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\" placeholder=\"Enter Surname\" [required]=\"true\" name=\"surname\" formControlName=\"surname\">\r\n        </div>\r\n    </div>\r\n\r\n  \r\n    <div class=\"form-group\">\r\n      <span>\r\n        <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"firstName\">First Name:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input class=\"form-control\"  placeholder=\"Enter First Name\" [required]=\"true\" name=\"firstName\" formControlName=\"firstName\">\r\n        </div>\r\n      </span>\r\n    </div>\r\n   \r\n\r\n    <div class=\"form-group\">\r\n      <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"email_Address\">Email Address:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" placeholder=\"xxxxx@gmail.com\" [required]=\"true\" name=\"email_Address\" formControlName=\"email_Address\">\r\n        <!--button (click)=\"checkEmail()\">Check Email</button-->\r\n\r\n        <div *ngIf=\"message\" class=\"message\">\r\n          {{ message }}\r\n        </div>\r\n      </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"physical_Address\">Physical Address:</label>\r\n    <div class=\"col-sm-6\">\r\n      <input class=\"form-control\" type=\"text\" id=\"physical_Address\" placeholder=\"Enter Address\" name=\"physical_Address\" [required]=\"true\" formControlName=\"physical_Address\">\r\n    </div>\r\n</div>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"col-sm-2\" style=\"font-weight: bold;\" for=\"phoneNumber\">Phone Number:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input class=\"form-control\" type=\"text\"  placeholder=\"Enter 10-digit number\" [required]=\"true\" name=\"phoneNumber\" formControlName=\"phoneNumber\">\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label class=\"col-sm-2\" style=\"font-weight: bold;\">Employee Role:</label>\r\n      <div class=\"col-sm-6\">\r\n        <div class=\"form-control\" type=\"\">\r\n          <mat-form-field>\r\n            <mat-label>Select a name</mat-label>\r\n            <mat-select>\r\n              <mat-option *ngFor=\"let name of Roles\" [value]=\"name\">\r\n                {{ name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n  </div>\r\n\r\n    <div class=\"form-group\">\r\n      <div class=\"col-sm-offset-1 col-sm-6\">\r\n        <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!employeeForm.valid\" class=\"btn btn-sm btn-success\">Add</button>\r\n        <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  </div>\r\n</div> \r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}