{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/data.Service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nexport let UpdatePasswordComponent = /*#__PURE__*/(() => {\n  class UpdatePasswordComponent {\n    constructor(router, dataService, fb, snackBar) {\n      this.router = router;\n      this.dataService = dataService;\n      this.fb = fb;\n      this.snackBar = snackBar;\n      this.updatePasswordFormGroup = this.fb.group({\n        CurrentPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n        NewPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n        ConfirmPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]]\n      });\n    }\n    ngOnInit() {}\n    ChangePassword() {\n      if (this.updatePasswordFormGroup.valid) {\n        this.dataService.RegisterUser(this.updatePasswordFormGroup.value).subscribe(() => {\n          this.updatePasswordFormGroup.reset();\n          this.router.navigate(['login']).then(navigated => {\n            if (navigated) {\n              this.snackBar.open(`Password successfully updated`, 'X', {\n                duration: 5000\n              });\n            }\n          });\n        }, response => {\n          if (response.status === 403) {\n            this.snackBar.open(response.error, 'X', {\n              duration: 5000\n            });\n          }\n          if (response.status === 500) {\n            this.snackBar.open(response.error, 'X', {\n              duration: 5000\n            });\n          }\n        });\n      }\n    }\n  }\n  UpdatePasswordComponent.ɵfac = function UpdatePasswordComponent_Factory(t) {\n    return new (t || UpdatePasswordComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n  UpdatePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdatePasswordComponent,\n    selectors: [[\"app-update-password\"]],\n    decls: 26,\n    vars: 1,\n    consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"login-wrapper\", \"container\"], [1, \"box\"], [\"mat-card-avatar\", \"\", \"src\", \"../../assets/Nav_image/Africanacity.png\", \"alt\", \"\", \"width\", \"40\", \"height\", \"40\", 1, \"d-inline-block\", \"align-text-top\"], [1, \"form\", 3, \"formGroup\"], [\"floatLabel\", \"always\", 1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Enter your password\", \"formControlName\", \"PhoneNumber\"], [1, \"full-width\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Enter between 8 to 16 characters\", \"formControlName\", \"Password\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Enter between 8 to 16 characters\", \"formControlName\", \"ConfirmPassword\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn-block\", 2, \"margin-right\", \"1em\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"routerLink\", \"../login\", 1, \"btn-block\"]],\n    template: function UpdatePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\");\n        i0.ɵɵelement(3, \"img\", 2);\n        i0.ɵɵelementStart(4, \"mat-card-title\");\n        i0.ɵɵtext(5, \"Change Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"form\", 3)(7, \"mat-card-content\")(8, \"mat-form-field\", 4)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Current Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"mat-form-field\", 6)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"New Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"mat-form-field\", 6)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function UpdatePasswordComponent_Template_button_click_22_listener() {\n          return ctx.ChangePassword();\n        });\n        i0.ɵɵtext(23, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 10);\n        i0.ɵɵtext(25, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.updatePasswordFormGroup);\n      }\n    },\n    dependencies: [i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.MatCard, i7.MatCardAvatar, i7.MatCardContent, i7.MatCardHeader, i7.MatCardTitle, i8.MatButton],\n    styles: [\".example-container[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%] + .mat-form-field[_ngcontent-%COMP%]{margin-left:8px}.example-right-align[_ngcontent-%COMP%]{text-align:right}input.example-right-align[_ngcontent-%COMP%]::-webkit-outer-spin-button, input.example-right-align[_ngcontent-%COMP%]::-webkit-inner-spin-button{display:none}.card[_ngcontent-%COMP%]{height:250px;margin-top:10%;margin-bottom:auto;width:400px;background-color:#b2179bcc!important}.container[_ngcontent-%COMP%]{height:100%;align-content:center;margin-top:1%;width:100%}.icon-size[_ngcontent-%COMP%]{font-size:50px;height:30%;width:30%}\"]\n  });\n  return UpdatePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}