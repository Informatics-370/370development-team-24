{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MenuTypes } from 'src/app/shared/menu-types';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/data.Service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/snack-bar\";\nconst _c0 = [\"toastContainer\"];\nconst _c1 = function (a1) {\n  return {\n    \"form-control\": true,\n    \"is-invalid\": a1\n  };\n};\nconst _c2 = function () {\n  return [\"/menu-types\"];\n};\nexport class AddMenuTypeComponent {\n  constructor(dataService, route, router, fb, dialog, snackBar) {\n    this.dataService = dataService;\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.menu_typeId = 0;\n    //creating a form\n    this.addMenuTypeForm = this.fb.group({\n      menu_typeId: [0, [Validators.required]],\n      name: ['', [Validators.required]]\n    });\n  }\n  //confirmation dialog method\n  openDialog() {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      width: '250px',\n      data: 'Add New Menu Type?'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'Yes') {\n        this.addNewMenuType();\n      }\n    });\n  }\n  /*openDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {\r\n   this.dialog.open(CreateConfirmationDialog, {\r\n     width: '25%',\r\n     enterAnimationDuration,\r\n     exitAnimationDuration,\r\n   });\r\n  }*/\n  ngOnInit() {}\n  //code to add a new mmenu type\n  addNewMenuType() {\n    let menuType = new MenuTypes();\n    menuType.name = this.addMenuTypeForm.value.name;\n    this.dataService.AddMenuType(menuType).subscribe(add => {\n      this.router.navigate(['/menu-types']);\n    });\n    this.showSuccessMessage('Menu Type added successfully!');\n  }\n  //success message\n  showSuccessMessage(message) {\n    const snackBarRef = this.snackBar.open(message, 'Ok', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n    snackBarRef.afterDismissed().subscribe(() => {\n      this.toastContainer.clear();\n    });\n  }\n}\nAddMenuTypeComponent.ɵfac = function AddMenuTypeComponent_Factory(t) {\n  return new (t || AddMenuTypeComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n};\nAddMenuTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddMenuTypeComponent,\n  selectors: [[\"app-add-menu-type\"]],\n  viewQuery: function AddMenuTypeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toastContainer = _t.first);\n    }\n  },\n  decls: 26,\n  vars: 11,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container-md\"], [\"autocomplete\", \"off\", 3, \"formGroup\"], [\"for\", \"name\", 1, \"form-label\", 2, \"font-weight\", \"bold\"], [1, \"input-group\", \"has-validation\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Name\", 3, \"ngClass\"], [\"name\", \"\"], [1, \"invalid-feedback\"], [\"role\", \"group\", \"aria-label\", \"Basic example\", 1, \"btn-group\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 3, \"routerLink\"], [1, \"toast-container\"]],\n  template: function AddMenuTypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h1\", 4);\n      i0.ɵɵtext(6, \"Add Menu Types\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵelement(12, \"input\", 9, 10);\n      i0.ɵɵelementStart(14, \"div\", 11);\n      i0.ɵɵtext(15, \" This field is required. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 12)(17, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function AddMenuTypeComponent_Template_button_click_17_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\")(20, \"br\");\n      i0.ɵɵelementStart(21, \"button\", 14);\n      i0.ɵɵtext(22, \"Cancel \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(23);\n      i0.ɵɵpipe(24, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"div\", 15);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.addMenuTypeForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c1, ((tmp_1_0 = ctx.addMenuTypeForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.addMenuTypeForm.get(\"name\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.addMenuTypeForm.get(\"name\")) == null ? null : tmp_1_0.touched))));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", ctx.addMenuTypeForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.menu_typeId == 0 || ctx.menu_typeId == null ? \"Add\" : \"Update\", \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c2));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(24, 6, ctx.addMenuTypeForm.value), \" \");\n    }\n  },\n  styles: [\".toast-container[_ngcontent-%COMP%]{\\r\\n    position: fixed;\\r\\n    bottom: 20px;\\r\\n    left: 50%;\\r\\n    transform: translateX(-50%);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vbWVudS10eXBlcy9hZGQtbWVudS10eXBlL2FkZC1tZW51LXR5cGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osU0FBUztJQUNULDJCQUEyQjtBQUMvQiIsInNvdXJjZXNDb250ZW50IjpbIi50b2FzdC1jb250YWluZXJ7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IDIwcHg7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["ViewContainerRef","Validators","MenuTypes","ConfirmationDialogComponent","AddMenuTypeComponent","constructor","dataService","route","router","fb","dialog","snackBar","addMenuTypeForm","group","menu_typeId","required","name","openDialog","dialogRef","open","width","data","afterClosed","subscribe","result","addNewMenuType","ngOnInit","menuType","value","AddMenuType","add","navigate","showSuccessMessage","message","snackBarRef","duration","horizontalPosition","verticalPosition","afterDismissed","toastContainer","clear","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\menu-types\\add-menu-type\\add-menu-type.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\menu-types\\add-menu-type\\add-menu-type.component.html"],"sourcesContent":["import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { DataService } from 'src/app/service/data.Service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuTypes } from 'src/app/shared/menu-types';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\r\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-add-menu-type',\r\n  templateUrl: './add-menu-type.component.html',\r\n  styleUrls: ['./add-menu-type.component.css']\r\n})\r\n\r\nexport class AddMenuTypeComponent {\r\n  menu_typeId: number = 0;\r\n  addMenuTypeForm: FormGroup;\r\n  @ViewChild('toastContainer', { read: ViewContainerRef })\r\n  toastContainer!: ViewContainerRef;\r\n \r\n\r\n\r\n  constructor(private dataService:DataService,\r\n    private route : ActivatedRoute,\r\n     private router : Router,\r\n      private fb: FormBuilder,\r\n      private dialog: MatDialog,\r\n      private snackBar: MatSnackBar,\r\n      \r\n      ) {\r\n\r\n\r\n//creating a form\r\n   this.addMenuTypeForm = this.fb.group({\r\n     menu_typeId: [0, [Validators.required]],\r\n     name: ['', [Validators.required]] \r\n   })\r\n }\r\n\r\n\r\n//confirmation dialog method\r\n openDialog():void{\r\n  const dialogRef = this.dialog.open(ConfirmationDialogComponent,{\r\n    width: '250px',\r\n    data: 'Add New Menu Type?'\r\n  });\r\n\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if(result == 'Yes'){\r\n      this.addNewMenuType();\r\n      \r\n    }\r\n  })\r\n\r\n }\r\n\r\n\r\n /*openDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {\r\n  this.dialog.open(CreateConfirmationDialog, {\r\n    width: '25%',\r\n    enterAnimationDuration,\r\n    exitAnimationDuration,\r\n  });\r\n}*/\r\n \r\n ngOnInit(): void {}\r\n\r\n //code to add a new mmenu type\r\n addNewMenuType(){\r\n  let menuType = new MenuTypes();\r\n  menuType.name = this.addMenuTypeForm.value.name;\r\n\r\n  this.dataService.AddMenuType(menuType).subscribe((add:any) =>{\r\n    this.router.navigate(['/menu-types'])\r\n    \r\n  });\r\n  this.showSuccessMessage('Menu Type added successfully!');\r\n}\r\n\r\n//success message\r\nshowSuccessMessage(message: string): void {\r\n  const snackBarRef: MatSnackBarRef<any> = this.snackBar.open(message, 'Ok', {\r\n    duration: 3000, // Duration in milliseconds\r\n    horizontalPosition: 'center',\r\n    verticalPosition: 'bottom'\r\n  });\r\n\r\n    snackBarRef.afterDismissed().subscribe(() => {\r\n    this.toastContainer.clear();\r\n  });\r\n\r\n \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <app-navbar></app-navbar>\r\n        </div>\r\n    <div class=\"col-md-10 order-md-1\">\r\n<h1 style=\"text-align: center;font-family: 'Times New Roman', Times, serif;font-size: 50px;\">Add Menu Types</h1>\r\n<div class=\"container-md\">\r\n    <form [formGroup]=\"addMenuTypeForm\" autocomplete=\"off\">\r\n        \r\n            <label for=\"name\" style=\"font-weight: bold;\" class=\"form-label\">Name</label>\r\n            <div class=\"input-group has-validation\">\r\n                <input type=\"text\" #name [ngClass]=\"{'form-control': true, 'is-invalid': addMenuTypeForm.get('name')?.invalid &&\r\n                (addMenuTypeForm.get('name')?.dirty || addMenuTypeForm.get('name')?.touched)}\" id=\"name\" name=\"name\"\r\n                    formControlName=\"name\" placeholder=\"Name\">\r\n                <div class=\"invalid-feedback\">\r\n                    This field is required.\r\n                </div>\r\n            </div>\r\n      \r\n            <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                <button (click)=\"openDialog()\" [disabled]=\"addMenuTypeForm.invalid\" class=\"btn btn-primary\" type=\"button\">\r\n                    {{menu_typeId==0 || menu_typeId==null ?'Add':'Update'}}</button><br><br>\r\n                    <!--button mat-raised-button (click)=\"openDialog('0ms','0ms')\" [disabled]=\"addMenuTypeForm.invalid\" class=\"btn btn-primary\" type=\"button\">\r\n                        {{menu_typeId==0 || menu_typeId==null ?'Save':'Update'}}</button><br><br-->\r\n                <button class=\"btn btn-warning\" type=\"button\"  [routerLink]=\"['/menu-types']\">Cancel </button>\r\n            </div>\r\n        \r\n\r\n       \r\n            {{addMenuTypeForm.value |json}}\r\n       \r\n    </form>\r\n    <!--app-confirmation-dialog></app-confirmation-dialog-->\r\n    <div class=\"toast-container\"></div>\r\n</div>\r\n    </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}