{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BookingEvent } from 'src/app/shared/bookingevent';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/data.Service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../navbar/navbar.component\";\nexport let EditEventComponent = /*#__PURE__*/(() => {\n  class EditEventComponent {\n    constructor(dataService, router, activated, snackBar) {\n      this.dataService = dataService;\n      this.router = router;\n      this.activated = activated;\n      this.snackBar = snackBar;\n      this.editEvents = new BookingEvent();\n      this.updateEventsForm = new FormGroup({\n        event_Name: new FormControl('', [Validators.required]),\n        description: new FormControl('', [Validators.required])\n      });\n    }\n    ngOnInit() {\n      this.activated.params.subscribe(params => {\n        this.dataService.GetEvent(params['id']).subscribe(result => {\n          this.editEvents = result;\n          this.updateEventsForm.controls['event_Name'].setValue(this.editEvents.event_Name);\n          this.updateEventsForm.controls['description'].setValue(this.editEvents.description);\n        });\n      });\n    }\n    cancel() {\n      this.router.navigate(['/view-events']);\n    }\n    updateEvent() {\n      let event = new BookingEvent();\n      event.event_Name = this.updateEventsForm.value.event_name;\n      event.description = this.updateEventsForm.value.description;\n      this.dataService.EditEvent(this.editEvents.eventId, event).subscribe(response => {\n        if (response.statusCode === 200) {\n          this.router.navigate(['./view-events']);\n          window.location.reload();\n          this.showSuccessMessage('Event Details updated successfully!');\n        } else {\n          // Handle error if needed\n        }\n      }, error => {\n        // Handle error if needed\n      });\n    }\n    showSuccessMessage(message) {\n      const snackBarRef = this.snackBar.open(message, 'Ok', {\n        duration: 3000,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n  }\n  EditEventComponent.ɵfac = function EditEventComponent_Factory(t) {\n    return new (t || EditEventComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n  EditEventComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditEventComponent,\n    selectors: [[\"app-edit-event\"]],\n    decls: 28,\n    vars: 4,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"event_name\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"id\", \"event_name\", \"placeholder\", \"Enter event title\", \"formControlName\", \"event_name\", 1, \"form-control\", 3, \"required\"], [\"for\", \"description\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"description\", \"placeholder\", \"Enter description\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n    template: function EditEventComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"app-navbar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\", 4);\n        i0.ɵɵtext(6, \"Update Event\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function EditEventComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.updateEvent();\n        });\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Event Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 9);\n        i0.ɵɵelement(20, \"textarea\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\", 7)(23, \"div\", 13)(24, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function EditEventComponent_Template_button_click_24_listener() {\n          return ctx.updateEvent;\n        });\n        i0.ɵɵtext(25, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function EditEventComponent_Template_button_click_26_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(27, \"Discard\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateEventsForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.updateEventsForm.valid);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i5.NavbarComponent]\n  });\n  return EditEventComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}