{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../../shared/employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../../navbar/navbar.component\";\nexport class EditEmployeeComponent {\n  constructor(employeeservice, router, activated) {\n    this.employeeservice = employeeservice;\n    this.router = router;\n    this.activated = activated;\n    this.editEmployee = new Employee();\n    this.updateEmployeeForm = new FormGroup({\n      surname: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required]),\n      email_Address: new FormControl('', [Validators.required]),\n      physical_Address: new FormControl('', [Validators.required]),\n      phoneNumber: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.activated.params.subscribe(params => {\n      this.employeeservice.getEmployee(params['id']).subscribe(res => {\n        this.editEmployee = res;\n        this.updateEmployeeForm.controls['surname'].setValue(this.editEmployee.surname);\n        this.updateEmployeeForm.controls['firstName'].setValue(this.editEmployee.firstName);\n        this.updateEmployeeForm.controls['email_Address'].setValue(this.editEmployee.email_Address);\n        this.updateEmployeeForm.controls['physical_Address'].setValue(this.editEmployee.phoneNumber);\n        this.updateEmployeeForm.controls['phoneNumber'].setValue(this.editEmployee.phoneNumber);\n      });\n    });\n  }\n  cancel() {\n    this.router.navigate(['/view-employees']);\n  }\n  updateEmployee() {\n    let employee = new Employee();\n    employee.surname = this.updateEmployeeForm.value.surname;\n    employee.firstName = this.updateEmployeeForm.value.firstName;\n    employee.email_Address = this.updateEmployeeForm.value.email_Address;\n    employee.physical_Address = this.updateEmployeeForm.value.physical_Address;\n    employee.phoneNumber = this.updateEmployeeForm.value.phoneNumber;\n    this.employeeservice.EditEmployee(this.editEmployee.employeeId, employee).subscribe(response => {\n      if (response.statusCode == 200) {\n        this.router.navigate(['/view-employees']);\n      } else {\n        alert(response.message);\n      }\n    });\n  }\n}\nEditEmployeeComponent.ɵfac = function EditEmployeeComponent_Factory(t) {\n  return new (t || EditEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditEmployeeComponent,\n  selectors: [[\"app-edit-employee\"]],\n  decls: 42,\n  vars: 7,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"surname\", 1, \"col-sm-1\"], [1, \"col-sm-6\"], [\"id\", \"surname\", \"placeholder\", \"Enter Surname\", \"formControlName\", \"surname\", 1, \"form-control\", 3, \"required\"], [\"for\", \"firstName\", 1, \"col-sm-1\"], [\"id\", \"firstName\", \"placeholder\", \"Enter First Name\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"email_Address\", 1, \"col-sm-1\"], [\"type\", \"text\", \"id\", \"email_Address\", \"placeholder\", \"Enter Address\", \"formControlName\", \"email_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"physical_Address\", 1, \"col-sm-1\"], [\"type\", \"text\", \"id\", \"physical_Address\", \"placeholder\", \"Enter Address\", \"formControlName\", \"physical_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"phoneNumber\", 1, \"col-sm-1\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"placeholder\", \"Enter 10-digit number\", \"formControlName\", \"phoneNumber\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n  template: function EditEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\");\n      i0.ɵɵtext(6, \"Edit Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 1)(10, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function EditEmployeeComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.updateEmployee();\n      });\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Surname:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"FirstName:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 8);\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Email Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 8);\n      i0.ɵɵelement(25, \"textarea\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 6)(27, \"label\", 14);\n      i0.ɵɵtext(28, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 8);\n      i0.ɵɵelement(30, \"textarea\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 6)(32, \"label\", 16);\n      i0.ɵɵtext(33, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 8);\n      i0.ɵɵelement(35, \"textarea\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 6)(37, \"div\", 18)(38, \"button\", 19);\n      i0.ɵɵtext(39, \"Confirm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function EditEmployeeComponent_Template_button_click_40_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(41, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateEmployeeForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.updateEmployeeForm.valid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i4.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Employee","EditEmployeeComponent","constructor","employeeservice","router","activated","surname","required","firstName","email_Address","physical_Address","phoneNumber","ngOnInit","params","subscribe","getEmployee","res","editEmployee","updateEmployeeForm","controls","setValue","cancel","navigate","updateEmployee","employee","value","EditEmployee","employeeId","response","statusCode","alert","message","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\view-employees\\edit-employee\\edit-employee.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\view-employees\\edit-employee\\edit-employee.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../../shared/employee';\n\n@Component({\n  selector: 'app-edit-employee',\n  templateUrl: './edit-employee.component.html',\n  styleUrls: ['./edit-employee.component.css']\n})\nexport class EditEmployeeComponent {\n  constructor(\n    private employeeservice:EmployeeService, \n    private router : Router , \n    private activated:ActivatedRoute) { }\n\n  editEmployee: Employee = new Employee();\n\n  updateEmployeeForm: FormGroup = new FormGroup({\n    surname: new FormControl('',[Validators.required]),\n    firstName: new FormControl('',[Validators.required]),\n    email_Address: new FormControl('',[Validators.required]),\n    physical_Address: new FormControl('',[Validators.required]),\n    phoneNumber: new FormControl('',[Validators.required])\n  })\n  \n\n  ngOnInit(): void {\n\n    this.activated.params.subscribe(params => { \n      this.employeeservice.getEmployee(params['id']).subscribe(res => { \n      this.editEmployee = res as Employee;\n\n      this.updateEmployeeForm.controls['surname'].setValue(this.editEmployee.surname);\n      this.updateEmployeeForm.controls['firstName'].setValue(this.editEmployee.firstName);\n      this.updateEmployeeForm.controls['email_Address'].setValue(this.editEmployee.email_Address);\n      this.updateEmployeeForm.controls['physical_Address'].setValue(this.editEmployee.phoneNumber);\n      this.updateEmployeeForm.controls['phoneNumber'].setValue(this.editEmployee.phoneNumber);\n      })\n \n     })\n  }\n\n  cancel(){\n    this.router.navigate(['/view-employees'])\n  }\n\n  updateEmployee()\n  {\n    let employee = new Employee();\n    employee.surname = this.updateEmployeeForm.value.surname;\n    employee.firstName = this.updateEmployeeForm.value.firstName;\n    employee.email_Address = this.updateEmployeeForm.value.email_Address;\n    employee.physical_Address = this.updateEmployeeForm.value.physical_Address;\n    employee.phoneNumber = this.updateEmployeeForm.value.phoneNumber;\n\n\n   this.employeeservice.EditEmployee(this.editEmployee.employeeId,employee).subscribe((response:any) => {\n\n    if(response.statusCode == 200)\n    {\n      this.router.navigate(['/view-employees'])\n    }\n    else\n    {\n      alert(response.message);\n    }\n   });\n\n  }\n}\n\n\n\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n      <div class=\"col-md-2\">\n          <app-navbar></app-navbar>\n      </div>\n  <div class=\"col-md-10 order-md-1\">\n<h4>Edit Employee</h4>\n<hr>\n<div class=\"container\">\n<div class=\"row\">  \n<form [formGroup]=\"updateEmployeeForm\" class=\"form-horizontal\"  (ngSubmit)=\"updateEmployee()\">\n    <div class=\"form-group\">\n        <label class=\" col-sm-1\" for=\"surname\">Surname:</label>\n        <div class=\"col-sm-6\">\n          <input class=\"form-control\" id=\"surname\" placeholder=\"Enter Surname\" [required]=\"true\" formControlName=\"surname\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-1\" for=\"firstName\">FirstName:</label>\n        <div class=\"col-sm-6\">\n          <input class=\"form-control\" id=\"firstName\" placeholder=\"Enter First Name\" [required]=\"true\" formControlName=\"firstName\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"col-sm-1\" for=\"email_Address\">Email Address:</label>\n      <div class=\"col-sm-6\">\n        <textarea class=\"form-control\" type=\"text\" id=\"email_Address\" placeholder=\"Enter Address\" [required]=\"true\" formControlName=\"email_Address\"></textarea>\n      </div>\n  </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-1\" for=\"physical_Address\">Address:</label>\n        <div class=\"col-sm-6\">\n          <textarea class=\"form-control\" type=\"text\" id=\"physical_Address\" placeholder=\"Enter Address\" [required]=\"true\" formControlName=\"physical_Address\"></textarea>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-1\" for=\"phoneNumber\">Email:</label>\n        <div class=\"col-sm-6\">\n          <textarea class=\"form-control\" type=\"text\" id=\"phoneNumber\" placeholder=\"Enter 10-digit number\" [required]=\"true\" formControlName=\"phoneNumber\"></textarea>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-sm-offset-1 col-sm-6\">\n        <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!updateEmployeeForm.valid\" class=\"btn btn-sm btn-success\">Confirm</button>\n        <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\n      </div>\n    </div>\n  </form>\n  </div>\n</div> \n  </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}