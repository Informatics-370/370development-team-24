{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/inventory.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../../navbar/navbar.component\";\nfunction StocktakeComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 10)(7, \"div\", 11)(8, \"i\", 12);\n    i0.ɵɵlistener(\"click\", function StocktakeComponent_tr_17_Template_i_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const inventoryitem_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.incrementQuantity(inventoryitem_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\")(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const inventoryitem_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(inventoryitem_r1.inventory_ItemId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(inventoryitem_r1.itemName);\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassProp(\"low-quantity\", inventoryitem_r1.quantity < ctx_r0.predefinedLevel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(inventoryitem_r1.quantity);\n  }\n}\nexport class StocktakeComponent {\n  constructor(route, inventoryservice, snackBar, httpClient) {\n    this.route = route;\n    this.inventoryservice = inventoryservice;\n    this.snackBar = snackBar;\n    this.httpClient = httpClient;\n    this.inventoryItems = [];\n    this.selectedType = null;\n    this.predefinedLevel = 5;\n  }\n  deleteItem() {\n    const confirmationSnackBar = this.snackBar.open('Are you sure you want to delete this supplier?', 'Delete, Cancel', {\n      duration: 5000 // Display duration in milliseconds\n    });\n    //  cancel(){\n    //    this.router.navigate(['/home'])\n    //  }\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.typeId = +params['typeId'];\n      if (this.typeId) {\n        this.GetInventoryItemsByType(this.typeId);\n      }\n    });\n  }\n  GetInventoryItemsByType(typeId) {\n    this.inventoryservice.GetInventoryItemsByType(typeId).subscribe(items => {\n      this.inventoryItems = items;\n    }, error => {\n      console.error('Failed to fetch inventory items:', error);\n    });\n  }\n  incrementQuantity(inventoryItems, inventoryItem) {\n    inventoryItem.stockQuantity++;\n    this.updateQuantityOnServer(inventoryItem);\n  }\n  updateQuantityOnServer(inventoryItem) {\n    this.inventoryservice.UpdateInventoryItem(inventoryItem.inventory_ItemId, inventoryItem).subscribe(() => {\n      console.log('Inventory item updated successfully.'); // Success message or additional logic if needed\n      this.updateInventoryItemInArray(inventoryItem); // Update the item in the array\n    }, error => {\n      console.error('Failed to update inventory item:', error);\n    });\n  }\n  updateInventoryItemInArray(updatedItem) {\n    const index = this.inventoryItems.findIndex(item => item.inventory_ItemId === updatedItem.inventory_ItemId);\n    if (index !== -1) {\n      this.inventoryItems[index] = {\n        ...updatedItem\n      }; // Replace the item in the array\n    }\n  }\n\n  addToChecklist(item) {\n    this.inventoryservice.addToChecklist(item);\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value.toLowerCase();\n    this.inventoryItems = this.inventoryItems.filter(inventoryitem => {\n      const column2Value = inventoryitem.itemName.toLowerCase() || inventoryitem.itemName.toUpperCase();\n      const column3Value = inventoryitem.description.toLowerCase();\n      return column2Value.includes(filterValue) || column3Value.includes(filterValue);\n    });\n  }\n}\nStocktakeComponent.ɵfac = function StocktakeComponent_Factory(t) {\n  return new (t || StocktakeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.InventoryService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\nStocktakeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StocktakeComponent,\n  selectors: [[\"app-stocktake\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\", \"font-weight\", \"bolder\"], [\"type\", \"text\", \"placeholder\", \"Search Columns\", 1, \"form-control\", 3, \"input\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-container\", \"outlined-table\"], [1, \"tableColor\"], [\"scope\", \"col\"], [\"scope\", \"col\", 2, \"text-align\", \"center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"quantity-container\"], [1, \"quantity-controls\"], [1, \"fa\", \"fa-plus\", 3, \"click\"]],\n  template: function StocktakeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"h3\", 3);\n      i0.ɵɵtext(5, \"Inventory Item Listing \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"label\");\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"input\", function StocktakeComponent_Template_input_input_7_listener($event) {\n        return ctx.applyFilter($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"table\", 5)(9, \"thead\", 6)(10, \"th\", 7);\n      i0.ɵɵtext(11, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 7);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 8);\n      i0.ɵɵtext(15, \"Quantity\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, StocktakeComponent_tr_17_Template, 12, 5, \"tr\", 9);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.inventoryItems);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.NavbarComponent],\n  styles: [\".heading[_ngcontent-%COMP%]{\\r\\n    \\r\\n    height: 50px;\\r\\n    text-align: center;\\r\\n    padding-top: 7px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\n\\r\\n.edit-form[_ngcontent-%COMP%]{\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.label[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 5px;\\r\\n    padding-bottom: 5px;\\r\\n} */\\r\\n\\r\\ntable[_ngcontent-%COMP%]{\\r\\n    padding-top: 60px;\\r\\n}\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n    \\r\\n    background-color: rgba(250, 246, 246, 0.966);\\r\\n    border-radius: 8px;\\r\\n    border-color: black;\\r\\n}\\r\\n.input-group[_ngcontent-%COMP%]{\\r\\n    width: 400px;\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-child(odd) > td[_ngcontent-%COMP%], .table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-child(odd) > th[_ngcontent-%COMP%] {\\r\\n  background-color: lightgray;\\r\\n  color: rgb(0, 0, 0);\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]{\\r\\n    border-radius: 50px;\\r\\n    border-color: black;\\r\\n}\\r\\n.table-striped[_ngcontent-%COMP%]{\\r\\n    padding-top: 200px;\\r\\n}\\r\\n.tableColor[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(165, 113, 207);\\r\\n}\\r\\n.outlined-table[_ngcontent-%COMP%]{\\r\\n    border: 1px solid #000; \\r\\n    border-collapse: collapse;\\r\\n\\r\\n}\\r\\n.input-group[_ngcontent-%COMP%]{\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.outlined-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .outlined-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\r\\n  border: 1px solid rgb(165, 113, 207);; \\r\\n  padding: 10px; \\r\\n}\\r\\n.table-container[_ngcontent-%COMP%]{\\r\\n    margin-top: 60px\\r\\n}\\r\\n.table-hover[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\r\\n    background-color: grey;\\r\\n  }\\r\\n  .list-group[_ngcontent-%COMP%]{\\r\\n    padding-top: 20px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vSW52ZW50b3J5IE1hbmFnZW1lbnQvSW52ZW50b3J5IEl0ZW1zL3N0b2NrdGFrZS9zdG9ja3Rha2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1DQUFtQztJQUNuQyxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQiw0Q0FBNEM7QUFDaEQ7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCLEVBQUU7OztJQUdFLGlCQUFpQjtBQUNyQjtBQUNBOztJQUVJLDRDQUE0QztJQUM1QyxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxZQUFZOztBQUVoQjs7O0FBR0E7O0VBRUUsMkJBQTJCO0VBQzNCLG1CQUFtQjtBQUNyQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxvQ0FBb0M7QUFDeEM7QUFDQTtJQUNJLHNCQUFzQjtJQUN0Qix5QkFBeUI7O0FBRTdCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7O0VBRUUsb0NBQW9DO0VBQ3BDLGFBQWE7QUFDZjtBQUNBO0lBQ0k7QUFDSjtBQUNBO0lBQ0ksc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxpQkFBaUI7RUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGluZ3tcclxuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IGRhcmttYWdlbnRhOyAqL1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDdweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG59XHJcblxyXG4uZWRpdC1mb3Jte1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmxhYmVse1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcclxufSAqL1xyXG5cclxudGFibGV7XHJcbiAgICBwYWRkaW5nLXRvcDogNjBweDtcclxufVxyXG4uZm9ybS1jb250cm9sIHtcclxuICAgIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTAsIDI0NiwgMjQ2LCAwLjk2Nik7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG59XHJcbi5pbnB1dC1ncm91cHtcclxuICAgIHdpZHRoOiA0MDBweDtcclxuICAgIFxyXG59XHJcblxyXG5cclxuLnRhYmxlLXN0cmlwZWQ+dGJvZHk+dHI6bnRoLWNoaWxkKG9kZCk+dGQsXHJcbi50YWJsZS1zdHJpcGVkPnRib2R5PnRyOm50aC1jaGlsZChvZGQpPnRoIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XHJcbiAgY29sb3I6IHJnYigwLCAwLCAwKTtcclxufVxyXG5idXR0b257XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxufVxyXG4udGFibGUtc3RyaXBlZHtcclxuICAgIHBhZGRpbmctdG9wOiAyMDBweDtcclxufVxyXG4udGFibGVDb2xvcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxNjUsIDExMywgMjA3KTtcclxufVxyXG4ub3V0bGluZWQtdGFibGV7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwOyBcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcblxyXG59XHJcbi5pbnB1dC1ncm91cHtcclxuICAgIG1hcmdpbi10b3A6IDI1cHg7XHJcbn1cclxuXHJcbi5vdXRsaW5lZC10YWJsZSB0aCxcclxuLm91dGxpbmVkLXRhYmxlIHRkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMTY1LCAxMTMsIDIwNyk7OyBcclxuICBwYWRkaW5nOiAxMHB4OyBcclxufVxyXG4udGFibGUtY29udGFpbmVye1xyXG4gICAgbWFyZ2luLXRvcDogNjBweFxyXG59XHJcbi50YWJsZS1ob3ZlciB0cjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xyXG4gIH1cclxuICAubGlzdC1ncm91cHtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","StocktakeComponent","constructor","route","inventoryservice","snackBar","httpClient","deleteItem","confirmationSnackBar","open","duration","ngOnInit","params","subscribe","typeId","GetInventoryItemsByType","items","inventoryItems","error","console","incrementQuantity","inventoryItem","stockQuantity","updateQuantityOnServer","UpdateInventoryItem","inventory_ItemId","log","updateInventoryItemInArray","updatedItem","index","findIndex","item","addToChecklist","applyFilter","event","filterValue","target","value","toLowerCase","filter","inventoryitem","column2Value","itemName","toUpperCase","column3Value","description","includes","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\stocktake\\stocktake.component.html","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\stocktake\\stocktake.component.ts"],"sourcesContent":["<div class=\"row\">\n  <div class=\"col-md-2\">\n      <app-navbar></app-navbar>\n  </div>\n<div class=\"col-md-10 order-md-1\">\n<h3 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px; font-weight: bolder;\">Inventory Item Listing </h3>\n<label></label>\n<input type=\"text\" class=\"form-control\" (input)=\"applyFilter($event)\" placeholder=\"Search Columns\">\n\n<table class=\"table table-striped table-hover table-container outlined-table\">\n<thead class=\"tableColor\">\n\n        <th scope=\"col\">ID</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\" style=\"text-align: center;\">Quantity</th>\n\n</thead>\n<tbody>\n  <tr *ngFor=\"let inventoryitem of inventoryItems\">\n        <td>{{inventoryitem.inventory_ItemId}}</td>\n        <td>{{inventoryitem.itemName}}</td>\n        <td>\n          <div class=\"quantity-container\">\n            <div class=\"quantity-controls\">\n              <i class=\"fa fa-plus\" (click)=\"incrementQuantity(inventoryitem)\"></i>\n              <span [class.low-quantity]=\"inventoryitem.quantity < predefinedLevel\">\n              <span>{{inventoryitem.quantity}}</span>\n              </span>\n              \n            </div>\n          </div>\n        </td>\n    </tr>\n</tbody>\n</table>\n\n\n\n</div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport { InventoryType } from 'src/app/shared/inventorytype';\nimport { StockTake } from 'src/app/shared/stocktake';\n\n@Component({\n  selector: 'app-stocktake',\n  templateUrl: './stocktake.component.html',\n  styleUrls: ['./stocktake.component.css']\n})\nexport class StocktakeComponent {\n  typeId?: number;\n  inventoryItems: InventoryItem[] = [];\n  selectedType: InventoryType | null = null;\n  inventoryitem?: number;\n  predefinedLevel: number = 5;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private inventoryservice: InventoryService,\n    private snackBar: MatSnackBar,\n    private httpClient: HttpClient\n  ) {}\n\n  deleteItem(): void {\n    const confirmationSnackBar = this.snackBar.open('Are you sure you want to delete this supplier?', 'Delete, Cancel',{\n      duration: 5000, // Display duration in milliseconds\n\n    });\n\n    \n    //  cancel(){\n    //    this.router.navigate(['/home'])\n    //  }\n  \n\n  }\n\n\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.typeId = +params['typeId'];\n      if (this.typeId) {\n        this.GetInventoryItemsByType(this.typeId);\n      }\n    });\n  }\n\n  GetInventoryItemsByType(typeId: number): void {\n    this.inventoryservice.GetInventoryItemsByType(typeId).subscribe(\n      (items) => {\n        this.inventoryItems = items;\n      },\n      (error) => {\n        console.error('Failed to fetch inventory items:', error);\n      }\n    );\n  }\n  \n\n  \n  incrementQuantity(inventoryItems: StockTake, inventoryItem: InventoryItem) {\n    inventoryItem.stockQuantity++;\n    this.updateQuantityOnServer(inventoryItem);\n  }  \n  \n  updateQuantityOnServer(inventoryItem: InventoryItem) {\n    this.inventoryservice.UpdateInventoryItem(inventoryItem.inventory_ItemId, inventoryItem).subscribe(\n      () => {\n        console.log('Inventory item updated successfully.'); // Success message or additional logic if needed\n        this.updateInventoryItemInArray(inventoryItem); // Update the item in the array\n      },\n      (error: any) => {\n        console.error('Failed to update inventory item:', error);\n      }\n    );\n  }\n\n  updateInventoryItemInArray(updatedItem: InventoryItem) {\n    const index = this.inventoryItems.findIndex((item) => item.inventory_ItemId === updatedItem.inventory_ItemId);\n    if (index !== -1) {\n      this.inventoryItems[index] = { ...updatedItem }; // Replace the item in the array\n    }\n  }\n\n  addToChecklist(item: InventoryItem) {\n    this.inventoryservice.addToChecklist(item);\n  }\n  \n  \n  \n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value.toLowerCase();\n  \n    this.inventoryItems = this.inventoryItems.filter(inventoryitem => {\n      const column2Value = inventoryitem.itemName.toLowerCase() || inventoryitem.itemName.toUpperCase();\n      const column3Value = inventoryitem.description.toLowerCase();\n  \n      return column2Value.includes(filterValue) || column3Value.includes(filterValue);\n    });\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}