{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = 'http://localhost:49991/api/';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        ContentType: 'application/json'\n      })\n    };\n  }\n  // Register user\n  RegisterUser(registerUser) {\n    return this.httpClient.post(`${this.apiUrl}Authentication/Register`, registerUser, this.httpOptions);\n  }\n  //Login user\n  LoginUser(loginUser) {\n    let user = new UserCredentials();\n    return this.httpClient.post(`${this.apiUrl}Authentication/Login`, loginUser, this.httpOptions);\n  }\n  //Change user password\n  ChangePassword(loginUser) {\n    let user = new UserCredentials();\n    return this.httpClient.post(`${this.apiUrl}Authentication/Forgotpassword`, loginUser, this.httpOptions);\n  }\n  // Generate otp \n  ValidateOtp(user) {\n    return this.httpClient.post(`${this.apiUrl}Authentication/Otp`, user, this.httpOptions);\n  }\n  //Code Related to employee role\n  GetEmployeeRole(employee_RoleId) {\n    return this.httpClient.get(`${this.apiUrl}EmployeeRole/GetEmployeeRole` + \"/\" + employee_RoleId).pipe(map(result => result));\n  }\n  GetAllEmployeeRoles() {\n    return this.httpClient.get(`${this.apiUrl}EmployeeRole/GetAllEmployeeRoles`).pipe(map(results => results));\n  }\n  AddEmployeeRole(employeeRole) {\n    return this.httpClient.post(`${this.apiUrl}EmployeeRole/AddEmployeeRole`, employeeRole, this.httpOptions);\n  }\n  DeleteEmployeeRole(employee_RoleId) {\n    return this.httpClient.delete(`${this.apiUrl}EmployeeRole/DeleteEmployeeRole` + \"/\" + employee_RoleId, this.httpOptions);\n  }\n  EditEmployeeRole(employee_RoleId, employeeRole) {\n    return this.httpClient.put(`${this.apiUrl}EmployeeRole/EditEmployeeRole/${employee_RoleId}`, employeeRole, this.httpOptions);\n  }\n  /***************Menu Types************/\n  //Create menu type\n  AddMenuType(menuType) {\n    return this.httpClient.post(`${this.apiUrl}MenuType/AddMenuType`, menuType);\n  }\n  GetAllMenuTypes() {\n    return this.httpClient.get(`${this.apiUrl}MenuType/GetAllMenuTypes`).pipe(map(result => result));\n  }\n  //Edit menu type\n  GetMenuTypeById(menu_TypeId) {\n    return this.httpClient.get(`${this.apiUrl}MenuType/GetMenuType/${menu_TypeId}`);\n  }\n  //Update function\n  EditMenuType(Menu_TypeId, menuType) {\n    //send put request to update a single course\n    // return this.httpClient.put(this.apiUrl + 'MenuType/EditMenuType/' + menu_TypeId,menuType);\n    return this.httpClient.put(`${this.apiUrl}MenuType/EditMenuType/${Menu_TypeId}`, menuType, this.httpOptions);\n    console.log();\n  }\n  //Delete Menu type\n  deleteMenuType(menu_TypeId) {\n    return this.httpClient.delete(`${this.apiUrl}MenuType/DeleteMenuType` + \"/\" + menu_TypeId, this.httpOptions);\n  }\n  /********************************MENU ITEM******************************/\n  //GET MENU ITEMS\n  GetAllMenuItems() {\n    return this.httpClient.get(`${this.apiUrl}MenuItems/GetAllMenuItems`).pipe(map(result => result));\n  }\n  //fetch menu item food\n  GetMenuItemById(menu_ItemId) {\n    return this.httpClient.get(`${this.apiUrl}MenuItems/GetMenuItem/${menu_ItemId}`);\n  }\n  /*Delete Menu type*/\n  deleteMenuItem(menu_ItemId) {\n    return this.httpClient.delete(`${this.apiUrl}MenuItems/DeleteMenuItem` + \"/\" + menu_ItemId, this.httpOptions);\n  }\n  /******************FOOD TYPE**************/\n  // GetAllFoodTypes(): Observable<any>{\n  //   return this.httpClient.get(`${this.apiUrl}FoodType/GetAllFoodTypes`)\n  //   .pipe(map(result => result));\n  // }\n  // fetch food type name\n  // GetFoodTypeById(foodTypeId: Number): Observable<any>{\n  //   return this.httpClient.get(`${this.apiUrl}foodTypeController/GetFoodType/${foodTypeId}`);\n  // }\n  /********** MENU CATEGORY***************/\n  // GetAllMenuItemCategories(): Observable<any>{\n  //   return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetAllMenuItemCategories`)\n  //   .pipe(map(result => result));\n  // }\n  // fetch food type name\n  // GetMenuItemCategoryById(menuItemCategory_Id: Number): Observable<any>{\n  //   return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetMenuItemCategory/${menuItemCategory_Id}`);\n  // }\n  // food type\n  GetAllFoodTypes() {\n    return this.httpClient.get(`${this.apiUrl}foodTypeController/GetAllFoodTypes`).pipe(map(result => result));\n  }\n  GetFoodType(foodTypeId) {\n    return this.httpClient.get(`${this.apiUrl}foodTypeController/GetFoodType` + \"/\" + foodTypeId).pipe(map(result => result));\n  }\n  AddFoodType(foodType) {\n    return this.httpClient.post(`${this.apiUrl}foodTypeController/AddFoodType`, foodType, this.httpOptions);\n  }\n  EditFoodType(foodTypeId, foodType) {\n    return this.httpClient.put(`${this.apiUrl}foodTypeController/EditFoodType/${foodTypeId}`, foodType, this.httpOptions);\n  }\n  DeleteFoodType(foodTypeId) {\n    return this.httpClient.delete(`${this.apiUrl}foodTypeController/DeleteFoodType` + \"/\" + foodTypeId, this.httpOptions);\n  }\n  // menu item category\n  GetAllMenuItemCategories() {\n    return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetAllMenuItemCategories`).pipe(map(result => result));\n  }\n  GetMenuItemCategory(menu_CategoryId) {\n    return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetMenuItemCategory/${menu_CategoryId}`);\n    //return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetMenuItemCategory` + \"/\" + Menu_CategoryId) //.pipe(map(result => result))\n  }\n\n  AddMenuItemCategory(menuItemCategory) {\n    return this.httpClient.post(`${this.apiUrl}MenuItem_Category/AddMenuItemCategory`, menuItemCategory, this.httpOptions);\n  }\n  EditMenuItemCategory(menu_CategoryId, menuItemCategory) {\n    return this.httpClient.put(`${this.apiUrl}MenuItem_Category/EditMenuItemCategory/${menu_CategoryId}`, menuItemCategory, this.httpOptions);\n  }\n  DeleteMenuItemCategory(menu_CategoryId) {\n    //return this.httpClient.delete<string>(`${this.apiUrl}MenuItem_Category/DeleteMenuItemCategory` + \"/\" + Menu_CategoryId, this.httpOptions)\n    return this.httpClient.delete(`${this.apiUrl}MenuItem_Category/DeleteMenuItemCategory` + \"/\" + menu_CategoryId, this.httpOptions);\n  }\n  /******************************SCHEDULE**********************/\n  //Get All Schedules\n  ScheduleDisplay() {\n    return this.httpClient.get(`${this.apiUrl}Schedule/ScheduleDisplay`).pipe(map(results => results));\n  }\n  GetSchedule(scheduleId) {\n    return this.httpClient.get(`${this.apiUrl}Schedule/GetSchedule/${scheduleId}`).pipe(map(result => result));\n  }\n  AddSchedule(schedule) {\n    return this.httpClient.post(`${this.apiUrl}Schedule/AddSchedule`, schedule, this.httpOptions);\n  }\n  EditSchedule(scheduleId, schedule) {\n    return this.httpClient.put(`${this.apiUrl}ScheduleController/EditSchedule/${scheduleId}`, schedule, this.httpOptions);\n  }\n  DeleteSchedule(scheduleId) {\n    return this.httpClient.delete(`${this.apiUrl}ScheduleController/DeleteSchedule` + \"/\" + scheduleId, this.httpOptions);\n  }\n  /************************************EVENTS******************************/\n  GetAllEvents() {\n    return this.httpClient.get(`${this.apiUrl}Event/GetAllEvents`).pipe(map(results => results));\n  }\n  GetEvent(eventId) {\n    return this.httpClient.get(`${this.apiUrl}Event/GetEvent` + \"/\" + eventId).pipe(map(result => result));\n  }\n  AddNewEvent(bookingevent) {\n    return this.httpClient.post(`${this.apiUrl}Event/AddNewEvent`, bookingevent, this.httpOptions);\n  }\n  EditEvent(eventId, bookingevent) {\n    return this.httpClient.put(`${this.apiUrl}Event/EditEvent/${eventId}`, bookingevent, this.httpOptions);\n  }\n  DeleteEvent(eventId) {\n    return this.httpClient.delete(`${this.apiUrl}EventController/DeleteEvent` + \"/\" + eventId, this.httpOptions);\n  }\n  /*******************ENTERTAINMENT TYPE********************/\n  GetEntertainmentTypes() {\n    return this.httpClient.get(`${this.apiUrl}EntertainmentType/GetEntertainmentTypes`).pipe(map(results => results));\n  }\n  GetEntertainmentType(entertainment_TypeId) {\n    return this.httpClient.get(`${this.apiUrl}EntertainmentType/GetEntertainmentType` + \"/\" + entertainment_TypeId).pipe(map(result => result));\n  }\n  AddEntertainmentType(entertainmentType) {\n    return this.httpClient.post(`${this.apiUrl}EntertainmentType/AddEntertainment`, entertainmentType, this.httpOptions);\n  }\n  EditEntertainment(entertainment_TypeId, entertainmentType) {\n    return this.httpClient.put(`${this.apiUrl}EntertainmentTypeController/EditEntertainmentType/${entertainment_TypeId}`, entertainmentType, this.httpOptions);\n  }\n  DeleteEntertainmentType(entertainment_TypeId) {\n    return this.httpClient.delete(`${this.apiUrl}EntertainmentTypeController/DeleteEntertainmentType` + \"/\" + entertainment_TypeId, this.httpOptions);\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});\nclass UserCredentials {\n  constructor() {\n    this.EmailAddress = 'Addyouremailaddresshere';\n    this.Password = 'Addyourpasswordhere';\n  }\n}","map":{"version":3,"mappings":"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","names":["HttpHeaders","map","DataService","constructor","httpClient","headers","ContentType","RegisterUser","registerUser","post","apiUrl","httpOptions","LoginUser","loginUser","user","UserCredentials","ChangePassword","ValidateOtp","GetEmployeeRole","employee_RoleId","get","pipe","result","GetAllEmployeeRoles","results","AddEmployeeRole","employeeRole","DeleteEmployeeRole","delete","EditEmployeeRole","put","AddMenuType","menuType","GetAllMenuTypes","GetMenuTypeById","menu_TypeId","EditMenuType","Menu_TypeId","console","log","deleteMenuType","GetAllMenuItems","GetMenuItemById","menu_ItemId","deleteMenuItem","GetAllFoodTypes","GetFoodType","foodTypeId","AddFoodType","foodType","EditFoodType","DeleteFoodType","GetAllMenuItemCategories","GetMenuItemCategory","menu_CategoryId","AddMenuItemCategory","menuItemCategory","EditMenuItemCategory","DeleteMenuItemCategory","ScheduleDisplay","GetSchedule","scheduleId","AddSchedule","schedule","EditSchedule","DeleteSchedule","GetAllEvents","GetEvent","eventId","AddNewEvent","bookingevent","EditEvent","DeleteEvent","GetEntertainmentTypes","GetEntertainmentType","entertainment_TypeId","AddEntertainmentType","entertainmentType","EditEntertainment","DeleteEntertainmentType","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\service\\data.Service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, Subject } from 'rxjs';\r\nimport { LoginUser } from '../shared/login-user';\r\nimport { RegisterUser } from '../shared/register-user';\r\nimport { User } from '../shared/user';\r\nimport { Employee_Role} from '../shared/EmployeeRole';\r\nimport { MenuTypes } from '../shared/menu-types'; //Menu Types\r\nimport { MenuItem } from '../shared/menu-item';\r\nimport { FoodType } from '../shared/food-type';\r\nimport { MenuItemCategory } from '../shared/menu-item-category';\r\nimport { Schedule } from '../shared/schedule';\r\nimport { BookingEvent } from '../shared/bookingevent';\r\nimport { Entertainment_Type } from '../shared/entertainmentType';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  \r\n\r\n  apiUrl = 'http://localhost:49991/api/'\r\n\r\n  httpOptions ={\r\n    headers: new HttpHeaders({\r\n      ContentType: 'application/json'\r\n    })\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient) {   \r\n  }\r\n// Register user\r\n  RegisterUser(registerUser: LoginUser){\r\n    return this.httpClient.post(`${this.apiUrl}Authentication/Register`, registerUser, this.httpOptions)\r\n  }\r\n\r\n  //Login user\r\n  LoginUser(loginUser: LoginUser){\r\n    let user = new UserCredentials\r\n    return this.httpClient.post<User>(`${this.apiUrl}Authentication/Login`, loginUser, this.httpOptions)\r\n  }\r\n\r\n\r\n//Change user password\r\n   ChangePassword(loginUser: LoginUser){\r\n    let user = new UserCredentials\r\n    return this.httpClient.post<User>(`${this.apiUrl}Authentication/Forgotpassword`, loginUser, this.httpOptions)\r\n  }\r\n  \r\n// Generate otp \r\n  ValidateOtp(user: User){\r\n    return this.httpClient.post(`${this.apiUrl}Authentication/Otp`, user, this.httpOptions)\r\n  }\r\n\r\n  //Code Related to employee role\r\n  GetEmployeeRole(employee_RoleId: number) {\r\n    return this.httpClient.get(`${this.apiUrl}EmployeeRole/GetEmployeeRole` + \"/\" + employee_RoleId)\r\n    .pipe(map(result => result))\r\n  }\r\n\r\n  GetAllEmployeeRoles(): Observable<any>{\r\n    return this.httpClient.get(`${this.apiUrl}EmployeeRole/GetAllEmployeeRoles`)\r\n    .pipe(map(results => results))\r\n    \r\n  }\r\n\r\n  AddEmployeeRole(employeeRole: Employee_Role)\r\n  {\r\n    return this.httpClient.post(`${this.apiUrl}EmployeeRole/AddEmployeeRole`, employeeRole, this.httpOptions)\r\n  }\r\n\r\n  DeleteEmployeeRole(employee_RoleId: Number)\r\n  {\r\n    return this.httpClient.delete<string>(`${this.apiUrl}EmployeeRole/DeleteEmployeeRole` + \"/\" + employee_RoleId, this.httpOptions)\r\n  }\r\n\r\n  EditEmployeeRole(employee_RoleId: number, employeeRole: Employee_Role)\r\n  {\r\n    return this.httpClient.put(`${this.apiUrl}EmployeeRole/EditEmployeeRole/${employee_RoleId}`,employeeRole, this.httpOptions)\r\n  }\r\n  /***************Menu Types************/\r\n\r\n  //Create menu type\r\n  AddMenuType(menuType: MenuTypes){\r\n    return this.httpClient.post(`${this.apiUrl}MenuType/AddMenuType`,menuType);\r\n  }\r\n\r\n  GetAllMenuTypes(): Observable<any>{\r\n    return this.httpClient.get(`${this.apiUrl}MenuType/GetAllMenuTypes`)\r\n    .pipe(map(result => result));\r\n  }\r\n\r\n\r\n  //Edit menu type\r\n  GetMenuTypeById(menu_TypeId: Number): Observable<any>{\r\n    return this.httpClient.get(`${this.apiUrl}MenuType/GetMenuType/${menu_TypeId}`);\r\n  }\r\n\r\n  \r\n        //Update function\r\n  EditMenuType(Menu_TypeId:Number, menuType:MenuTypes){\r\n    //send put request to update a single course\r\n    // return this.httpClient.put(this.apiUrl + 'MenuType/EditMenuType/' + menu_TypeId,menuType);\r\n    return this.httpClient.put(`${this.apiUrl}MenuType/EditMenuType/${Menu_TypeId}`, menuType, this.httpOptions);\r\n    console.log();\r\n  }\r\n\r\n  //Delete Menu type\r\n  deleteMenuType(menu_TypeId: Number){\r\n    return this.httpClient.delete<string>(`${this.apiUrl}MenuType/DeleteMenuType` + \"/\" + menu_TypeId, this.httpOptions);\r\n  }\r\n\r\n\r\n\r\n  /********************************MENU ITEM******************************/\r\n  //GET MENU ITEMS\r\n  GetAllMenuItems(): Observable<any>{\r\n    return this.httpClient.get(`${this.apiUrl}MenuItems/GetAllMenuItems`)\r\n    .pipe(map(result => result));\r\n  }\r\n\r\n\r\n  //fetch menu item food\r\n  GetMenuItemById(menu_ItemId: Number): Observable<any>{\r\n    return this.httpClient.get(`${this.apiUrl}MenuItems/GetMenuItem/${menu_ItemId}`);\r\n  }\r\n\r\n  /*Delete Menu type*/\r\n  deleteMenuItem(menu_ItemId: Number){\r\n    return this.httpClient.delete<string>(`${this.apiUrl}MenuItems/DeleteMenuItem` + \"/\" + menu_ItemId, this.httpOptions)\r\n  }\r\n\r\n\r\n  /******************FOOD TYPE**************/\r\n\r\n  // GetAllFoodTypes(): Observable<any>{\r\n  //   return this.httpClient.get(`${this.apiUrl}FoodType/GetAllFoodTypes`)\r\n  //   .pipe(map(result => result));\r\n  // }\r\n\r\n\r\n  // fetch food type name\r\n  // GetFoodTypeById(foodTypeId: Number): Observable<any>{\r\n  //   return this.httpClient.get(`${this.apiUrl}foodTypeController/GetFoodType/${foodTypeId}`);\r\n  // }\r\n\r\n  /********** MENU CATEGORY***************/\r\n  // GetAllMenuItemCategories(): Observable<any>{\r\n  //   return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetAllMenuItemCategories`)\r\n  //   .pipe(map(result => result));\r\n  // }\r\n\r\n  // fetch food type name\r\n  // GetMenuItemCategoryById(menuItemCategory_Id: Number): Observable<any>{\r\n  //   return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetMenuItemCategory/${menuItemCategory_Id}`);\r\n  // }\r\n  // food type\r\n  GetAllFoodTypes(): Observable<any>{\r\n    return this.httpClient.get(`${this.apiUrl}foodTypeController/GetAllFoodTypes`).pipe(map(result => result)) \r\n  }\r\n\r\n  GetFoodType(foodTypeId: number)\r\n  {\r\n    return this.httpClient.get(`${this.apiUrl}foodTypeController/GetFoodType` + \"/\" + foodTypeId).pipe(map(result => result))\r\n  }\r\n\r\n  AddFoodType(foodType : FoodType)\r\n  {\r\n    return this.httpClient.post(`${this.apiUrl}foodTypeController/AddFoodType`, foodType, this.httpOptions)\r\n  }\r\n\r\n  EditFoodType(foodTypeId: number, foodType: FoodType)\r\n  {\r\n    return this.httpClient.put(`${this.apiUrl}foodTypeController/EditFoodType/${foodTypeId}`, foodType, this.httpOptions)\r\n  }\r\n\r\n  DeleteFoodType(foodTypeId: number)\r\n  {\r\n    return this.httpClient.delete<string>(`${this.apiUrl}foodTypeController/DeleteFoodType` + \"/\" + foodTypeId, this.httpOptions)\r\n  }\r\n\r\n  // menu item category\r\n  GetAllMenuItemCategories(): Observable<any>{\r\n    return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetAllMenuItemCategories`).pipe(map(result => result)) \r\n  }\r\n\r\n  GetMenuItemCategory(menu_CategoryId: number)\r\n  {\r\n    return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetMenuItemCategory/${menu_CategoryId}`);\r\n    //return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetMenuItemCategory` + \"/\" + Menu_CategoryId) //.pipe(map(result => result))\r\n  }\r\n\r\n  AddMenuItemCategory(menuItemCategory : MenuItemCategory)\r\n  {\r\n    return this.httpClient.post(`${this.apiUrl}MenuItem_Category/AddMenuItemCategory`, menuItemCategory, this.httpOptions)\r\n  }\r\n\r\n  EditMenuItemCategory(menu_CategoryId: number, menuItemCategory: MenuItemCategory)\r\n  {\r\n    return this.httpClient.put(`${this.apiUrl}MenuItem_Category/EditMenuItemCategory/${menu_CategoryId}`, menuItemCategory, this.httpOptions)\r\n  }\r\n\r\n  DeleteMenuItemCategory(menu_CategoryId: number)\r\n  {\r\n    //return this.httpClient.delete<string>(`${this.apiUrl}MenuItem_Category/DeleteMenuItemCategory` + \"/\" + Menu_CategoryId, this.httpOptions)\r\n    return this.httpClient.delete<string>(`${this.apiUrl}MenuItem_Category/DeleteMenuItemCategory` + \"/\" + menu_CategoryId, this.httpOptions)\r\n  }\r\n/******************************SCHEDULE**********************/\r\n//Get All Schedules\r\nScheduleDisplay(): Observable<any>\r\n{\r\n  return this.httpClient.get(`${this.apiUrl}Schedule/ScheduleDisplay`)\r\n  .pipe(map(results => results))\r\n}\r\n\r\nGetSchedule(scheduleId: number) {\r\n  return this.httpClient.get<any>(`${this.apiUrl}Schedule/GetSchedule/${scheduleId}`).pipe(map(result => result));\r\n}\r\n\r\n\r\nAddSchedule(schedule : Schedule)\r\n{\r\n  return this.httpClient.post(`${this.apiUrl}Schedule/AddSchedule`, schedule, this.httpOptions)\r\n}\r\n\r\nEditSchedule(scheduleId: Number, schedule: Schedule)\r\n{\r\n  return this.httpClient.put(`${this.apiUrl}ScheduleController/EditSchedule/${scheduleId}`, schedule, this.httpOptions)\r\n}\r\n\r\nDeleteSchedule(scheduleId: Number)\r\n{\r\n  return this.httpClient.delete<string>(`${this.apiUrl}ScheduleController/DeleteSchedule` + \"/\" + scheduleId, this.httpOptions)\r\n}\r\n\r\n/************************************EVENTS******************************/\r\nGetAllEvents(): Observable<any>\r\n{\r\n  return this.httpClient.get(`${this.apiUrl}Event/GetAllEvents`)\r\n  .pipe(map(results => results))\r\n}\r\n\r\nGetEvent(eventId: Number)\r\n{\r\n  return this.httpClient.get(`${this.apiUrl}Event/GetEvent` + \"/\" + eventId).pipe(map(result => result))\r\n}\r\n\r\nAddNewEvent(bookingevent : BookingEvent)\r\n{\r\n  return this.httpClient.post(`${this.apiUrl}Event/AddNewEvent`, bookingevent, this.httpOptions)\r\n}\r\n\r\nEditEvent(eventId: Number, bookingevent: BookingEvent)\r\n{\r\n  return this.httpClient.put(`${this.apiUrl}Event/EditEvent/${eventId}`, bookingevent, this.httpOptions)\r\n}\r\n\r\nDeleteEvent(eventId: Number)\r\n{\r\n  return this.httpClient.delete<string>(`${this.apiUrl}EventController/DeleteEvent` + \"/\" + eventId, this.httpOptions)\r\n}\r\n\r\n/*******************ENTERTAINMENT TYPE********************/\r\nGetEntertainmentTypes(): Observable<any>\r\n{\r\n  return this.httpClient.get(`${this.apiUrl}EntertainmentType/GetEntertainmentTypes`)\r\n  .pipe(map(results => results))\r\n}\r\n\r\nGetEntertainmentType(entertainment_TypeId: Number)\r\n{\r\n  return this.httpClient.get(`${this.apiUrl}EntertainmentType/GetEntertainmentType` + \"/\" + entertainment_TypeId).pipe(map(result => result))\r\n}\r\n\r\nAddEntertainmentType(entertainmentType : Entertainment_Type)\r\n{\r\n  return this.httpClient.post(`${this.apiUrl}EntertainmentType/AddEntertainment`, entertainmentType, this.httpOptions)\r\n}\r\n\r\nEditEntertainment(entertainment_TypeId: Number, entertainmentType: Entertainment_Type)\r\n{\r\n  return this.httpClient.put(`${this.apiUrl}EntertainmentTypeController/EditEntertainmentType/${entertainment_TypeId}`, entertainmentType, this.httpOptions)\r\n}\r\n\r\nDeleteEntertainmentType(entertainment_TypeId: Number)\r\n{\r\n  return this.httpClient.delete<string>(`${this.apiUrl}EntertainmentTypeController/DeleteEntertainmentType` + \"/\" + entertainment_TypeId, this.httpOptions)\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nclass UserCredentials  {\r\n  EmailAddress:string = 'Addyouremailaddresshere';\r\n  Password:string = 'Addyourpasswordhere'\r\n   }\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}