{"ast":null,"code":"import dayGridPlugin from '@fullcalendar/daygrid'; // Import the dayGrid plugin\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { AddScheduleComponent } from '../add-schedule/add-schedule.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"@fullcalendar/angular\";\nconst _c0 = [\"addScheduleModal\"];\nexport class ScheduleDisplayComponent {\n  constructor(modalService) {\n    this.modalService = modalService;\n    this.calendarOptions = {\n      initialView: 'dayGridMonth',\n      plugins: [dayGridPlugin, interactionPlugin],\n      dateClick: this.onDateClick.bind(this)\n    };\n  }\n  ngOnInit() {}\n  onDateClick(date) {\n    // Open the Bootstrap modal\n    const modalRef = this.modalService.show(AddScheduleComponent, {\n      class: 'modal-dialog-centered',\n      initialState: {\n        dateStr: date.dateStr // Pass the selected dateStr to the dialog component if needed\n      }\n    });\n    // Handle the modal events if needed\n    if (modalRef.content) {\n      modalRef.content.onClose.subscribe(eventData => {\n        if (eventData) {\n          console.log('Modal result:', eventData);\n          // Do something with the eventData (e.g., save to backend)\n        } else {\n          console.log('Modal closed without saving.');\n        }\n      });\n    }\n  }\n}\nScheduleDisplayComponent.ɵfac = function ScheduleDisplayComponent_Factory(t) {\n  return new (t || ScheduleDisplayComponent)(i0.ɵɵdirectiveInject(i1.BsModalService));\n};\nScheduleDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleDisplayComponent,\n  selectors: [[\"app-schedule-display\"]],\n  viewQuery: function ScheduleDisplayComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addScheduleModal = _t.first);\n    }\n  },\n  decls: 4,\n  vars: 1,\n  consts: [[2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-weight\", \"bolder\", \"font-size\", \"50px\"], [1, \"calendar-container\"], [3, \"options\"]],\n  template: function ScheduleDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Booking Schedule\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelement(3, \"full-calendar\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"options\", ctx.calendarOptions);\n    }\n  },\n  dependencies: [i2.FullCalendarComponent],\n  styles: [\".calendar-container[_ngcontent-%COMP%] {\\r\\n    max-width: 800px;\\r\\n    margin: 0 auto;\\r\\n    padding: 20px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYm9va2luZy9zY2hlZHVsZS9zY2hlZHVsZS1kaXNwbGF5L3NjaGVkdWxlLWRpc3BsYXkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkI7QUFDM0I7SUFDSSxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLGFBQWE7RUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGNhbGVuZGFyLmNvbXBvbmVudC5jc3MgKi9cclxuLmNhbGVuZGFyLWNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,OAAOA,aAAa,MAAM,uBAAuB,CAAC,CAAC;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,SAASC,oBAAoB,QAAQ,wCAAwC;;;;;AAY7E,OAAM,MAAOC,wBAAwB;EAInCC,YAAoBC,YAA4B;IAA5B,iBAAY,GAAZA,YAAY;IAUhC,oBAAe,GAAoB;MAClCC,WAAW,EAAE,cAAc;MACzBC,OAAO,EAAE,CAACP,aAAa,EAAEC,iBAAiB,CAAC;MAC3CO,SAAS,EAAE,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI;KACxC;EAdkD;EAKlDC,QAAQ,IAGR;EAQDF,WAAW,CAACG,IAAyB;IACpC;IACA,MAAMC,QAAQ,GAAG,IAAI,CAACR,YAAY,CAACS,IAAI,CAACZ,oBAAoB,EAAE;MAC5Da,KAAK,EAAE,uBAAuB;MAC9BC,YAAY,EAAE;QACZC,OAAO,EAAEL,IAAI,CAACK,OAAO,CAAE;;KAE1B,CAAC;IAEF;IACA,IAAIJ,QAAQ,CAACK,OAAO,EAAE;MACpBL,QAAQ,CAACK,OAAO,CAACC,OAAO,CAACC,SAAS,CAAEC,SAAc,IAAI;QACpD,IAAIA,SAAS,EAAE;UACbC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,SAAS,CAAC;UACvC;SACD,MAAM;UACLC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;;MAE/C,CAAC,CAAC;;EAEN;;AAxCapB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAqB;EAAAC;IAAA;;;;;;;;;;;;;MChBrCC,6BAAoH;MAAAA,gCAAgB;MAAAA,iBAAK;MAGxIA,8BAAgC;MAC/BA,mCAA2D;MAC7DA,iBAAM;;;MADWA,eAA2B;MAA3BA,6CAA2B","names":["dayGridPlugin","interactionPlugin","AddScheduleComponent","ScheduleDisplayComponent","constructor","modalService","initialView","plugins","dateClick","onDateClick","bind","ngOnInit","date","modalRef","show","class","initialState","dateStr","content","onClose","subscribe","eventData","console","log","selectors","viewQuery","i0"],"sourceRoot":"","sources":["C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\booking\\schedule\\schedule-display\\schedule-display.component.ts","C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\booking\\schedule\\schedule-display\\schedule-display.component.html"],"sourcesContent":["import { Component, ViewChild, OnInit, TemplateRef } from '@angular/core';\nimport { CalendarOptions } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid'; // Import the dayGrid plugin\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { AddScheduleComponent } from '../add-schedule/add-schedule.component';\n//import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { DataService } from 'src/app/service/data.Service';\n\n\n@Component({\n  selector: 'app-schedule-display',\n  templateUrl: './schedule-display.component.html',\n  styleUrls: ['./schedule-display.component.css']\n})\n\nexport class ScheduleDisplayComponent implements OnInit {\n \n  @ViewChild('addScheduleModal') addScheduleModal!: TemplateRef<any>; // Add ViewChild for the modal template\n  private modalRef!: BsModalRef<any>;\n  constructor(private modalService: BsModalService){}\n\n   private dialogRef: any;\n  \n  \n  ngOnInit() {\n   \n \n  }\n\n  calendarOptions: CalendarOptions = {\n   initialView: 'dayGridMonth',\n     plugins: [dayGridPlugin, interactionPlugin],\n     dateClick: this.onDateClick.bind(this),\n };\n\n onDateClick(date: { dateStr: string }) {\n  // Open the Bootstrap modal\n  const modalRef = this.modalService.show(AddScheduleComponent, {\n    class: 'modal-dialog-centered',\n    initialState: {\n      dateStr: date.dateStr, // Pass the selected dateStr to the dialog component if needed\n    },\n  });\n\n  // Handle the modal events if needed\n  if (modalRef.content) {\n    modalRef.content.onClose.subscribe((eventData: any) => {\n      if (eventData) {\n        console.log('Modal result:', eventData);\n        // Do something with the eventData (e.g., save to backend)\n      } else {\n        console.log('Modal closed without saving.');\n      }\n    });\n  }\n}\n\n    \n\n \n\n}\n","<h3 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-weight: bolder; font-size: 50px;\">Booking Schedule</h3>\n\n\n <div class=\"calendar-container\">\n  <full-calendar [options]=\"calendarOptions\"></full-calendar>\n</div> \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}