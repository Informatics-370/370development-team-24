{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Supplier } from 'src/app/shared/supplier';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/supplier.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../../../navbar/navbar.component\";\nexport class EditSupplierComponent {\n  constructor(supplierservice, router, activated, dialog, snackBar) {\n    this.supplierservice = supplierservice;\n    this.router = router;\n    this.activated = activated;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.supplierTypesData = [];\n    this.editSupplier = new Supplier();\n    this.updateSupplierForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      supplierType: new FormControl('', [Validators.required]),\n      email_Address: new FormControl('', [Validators.required]),\n      phoneNumber: new FormControl('', [Validators.required]),\n      physical_Address: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.activated.params.subscribe(params => {\n      this.supplierservice.GetSupplier(params['id']).subscribe(res => {\n        this.editSupplier = res;\n        this.updateSupplierForm.controls['name'].setValue(this.editSupplier.name);\n        this.updateSupplierForm.controls['supplierType'].setValue(this.editSupplier.supplierType);\n        this.updateSupplierForm.controls['email_Address'].setValue(this.editSupplier.email_Address);\n        this.updateSupplierForm.controls['phoneNumber'].setValue(this.editSupplier.phoneNumber);\n        this.updateSupplierForm.controls['physical_Address'].setValue(this.editSupplier.physical_Address);\n      });\n    });\n  }\n  cancel() {\n    this.router.navigate(['/view-suppliers']);\n  }\n  GetAllSupplierTypes() {\n    this.supplierservice.GetAllSupplierTypes().subscribe(result => {\n      let supplierTypeList = result;\n      supplierTypeList.forEach(element => {\n        this.supplierTypesData.push(element);\n      });\n    });\n  }\n  updateSupplier() {\n    let supplier = new Supplier();\n    supplier.name = this.updateSupplierForm.value.name;\n    supplier.supplierType = this.updateSupplierForm.value.supplierType;\n    supplier.email_Address = this.updateSupplierForm.value.email_Address;\n    supplier.phoneNumber = this.updateSupplierForm.value.phoneNumber;\n    supplier.physical_Address = this.updateSupplierForm.value.physical_Address;\n    this.supplierservice.EditSupplier(this.editSupplier.supplierId, supplier).subscribe(response => {\n      if (response.statusCode == 200) {\n        this.router.navigate(['./view-suppliers']);\n        window.location.reload();\n      } else {}\n    });\n    this.showSuccessMessage('Supplier Informartion updated successfully!');\n  }\n  showSuccessMessage(message) {\n    const snackBarRef = this.snackBar.open(message, 'Ok', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n}\nEditSupplierComponent.ɵfac = function EditSupplierComponent_Factory(t) {\n  return new (t || EditSupplierComponent)(i0.ɵɵdirectiveInject(i1.SupplierService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n};\nEditSupplierComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditSupplierComponent,\n  selectors: [[\"app-edit-supplier\"]],\n  decls: 42,\n  vars: 7,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"id\", \"name\", \"placeholder\", \"Enter Name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"required\"], [\"for\", \"supplierType\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"id\", \"supplierType\", \"placeholder\", \"Select Type\", \"formControlName\", \"supplierType\", 1, \"form-control\", 3, \"required\"], [\"for\", \"email_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"email_Address\", \"placeholder\", \"Enter Address\", \"formControlName\", \"email_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"phoneNumber\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"placeholder\", \"Enter 10-digit number\", \"formControlName\", \"phoneNumber\", 1, \"form-control\", 3, \"required\"], [\"for\", \"physical_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"physical_Address\", \"placeholder\", \"Enter Address\", \"formControlName\", \"physical_Address\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n  template: function EditSupplierComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\", 4);\n      i0.ɵɵtext(6, \"Edit Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function EditSupplierComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.updateSupplier();\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 9);\n      i0.ɵɵelement(20, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 7)(22, \"label\", 13);\n      i0.ɵɵtext(23, \"Email Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 9);\n      i0.ɵɵelement(25, \"textarea\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 7)(27, \"label\", 15);\n      i0.ɵɵtext(28, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 9);\n      i0.ɵɵelement(30, \"textarea\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 7)(32, \"label\", 17);\n      i0.ɵɵtext(33, \"Physical Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 9);\n      i0.ɵɵelement(35, \"textarea\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 7)(37, \"div\", 19)(38, \"button\", 20);\n      i0.ɵɵtext(39, \"Confirm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function EditSupplierComponent_Template_button_click_40_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(41, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateSupplierForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.updateSupplierForm.valid);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName, i6.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Supplier","EditSupplierComponent","constructor","supplierservice","router","activated","dialog","snackBar","name","required","supplierType","email_Address","phoneNumber","physical_Address","ngOnInit","params","subscribe","GetSupplier","res","editSupplier","updateSupplierForm","controls","setValue","cancel","navigate","GetAllSupplierTypes","result","supplierTypeList","forEach","element","supplierTypesData","push","updateSupplier","supplier","value","EditSupplier","supplierId","response","statusCode","window","location","reload","showSuccessMessage","message","snackBarRef","open","duration","horizontalPosition","verticalPosition","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Supplier Management\\Suppliers\\edit-supplier\\edit-supplier.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Supplier Management\\Suppliers\\edit-supplier\\edit-supplier.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { SupplierService } from 'src/app/service/supplier.service';\nimport { SupplierType } from 'src/app/shared/SupplierTypes';\nimport { SupplierListing } from 'src/app/shared/supplier-listing';\nimport { Supplier } from 'src/app/shared/supplier';\n\n\n\n\n\n@Component({\n  selector: 'app-edit-supplier',\n  templateUrl: './edit-supplier.component.html',\n  styleUrls: ['./edit-supplier.component.css']\n})\nexport class EditSupplierComponent {\n  supplierTypesData:SupplierType[]=[]\n  \n  constructor(\n    private supplierservice:SupplierService, \n    private router : Router , \n    private activated:ActivatedRoute,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar) { }\n\n    editSupplier: Supplier = new Supplier();\n\n    updateSupplierForm: FormGroup = new FormGroup({\n      name: new FormControl('',[Validators.required]),\n      supplierType: new FormControl('',[Validators.required]),\n      email_Address: new FormControl('',[Validators.required]),\n      phoneNumber: new FormControl('',[Validators.required]),\n      physical_Address: new FormControl('',[Validators.required])\n    })\n\n    ngOnInit(): void {\n\n      this.activated.params.subscribe(params => { \n        this.supplierservice.GetSupplier(params['id']).subscribe(res => { \n        this.editSupplier = res as Supplier;\n  \n        this.updateSupplierForm.controls['name'].setValue(this.editSupplier.name);\n        this.updateSupplierForm.controls['supplierType'].setValue(this.editSupplier.supplierType);\n        this.updateSupplierForm.controls['email_Address'].setValue(this.editSupplier.email_Address);\n        this.updateSupplierForm.controls['phoneNumber'].setValue(this.editSupplier.phoneNumber);\n        this.updateSupplierForm.controls['physical_Address'].setValue(this.editSupplier.physical_Address);\n        })\n   \n       })\n    }\n  \n    cancel(){\n      this.router.navigate(['/view-suppliers'])\n    }\n    GetAllSupplierTypes(){\n      this.supplierservice.GetAllSupplierTypes().subscribe(result => {\n       let supplierTypeList:any[] = result\n       supplierTypeList.forEach((element) => {\n         this.supplierTypesData.push(element)\n       });\n     });\n   }\n  \n    updateSupplier()\n    {\n      let supplier = new Supplier();\n      supplier.name = this.updateSupplierForm.value.name;\n      supplier.supplierType = this.updateSupplierForm.value.supplierType;\n      supplier.email_Address = this.updateSupplierForm.value.email_Address;\n      supplier.phoneNumber = this.updateSupplierForm.value.phoneNumber;\n      supplier.physical_Address = this.updateSupplierForm.value.physical_Address;\n  \n  \n     this.supplierservice.EditSupplier(this.editSupplier.supplierId,supplier).subscribe((response:any) => {\n  \n      if(response.statusCode == 200)\n      {\n        this.router.navigate(['./view-suppliers'])\n        window.location.reload();\n      }\n      else\n      {\n  \n      }\n     });\n  \n     this.showSuccessMessage('Supplier Informartion updated successfully!');\n  \n    }\n    showSuccessMessage(message: string): void {\n      const snackBarRef: MatSnackBarRef<any> = this.snackBar.open(message, 'Ok', {\n        duration: 3000, // Duration in milliseconds\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <app-navbar></app-navbar>\n        </div>\n    <div class=\"col-md-10 order-md-1\">\n  <h4 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px;\">Edit Employee</h4>\n  <hr>\n  <div class=\"container\">\n  <div class=\"row\">  \n  <form [formGroup]=\"updateSupplierForm\" class=\"form-horizontal\"  (ngSubmit)=\"updateSupplier()\">\n      <div class=\"form-group\">\n          <label class=\" col-sm-1\" style=\"font-weight: bold;\" for=\"name\">Name</label>\n          <div class=\"col-sm-6\">\n            <input class=\"form-control\" id=\"name\" placeholder=\"Enter Name\" [required]=\"true\" formControlName=\"name\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"supplierType\">Type</label>\n          <div class=\"col-sm-6\">\n            <input class=\"form-control\" id= \"supplierType\" placeholder=\"Select Type\" [required]=\"true\" formControlName=\"supplierType\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"email_Address\">Email Address:</label>\n        <div class=\"col-sm-6\">\n          <textarea class=\"form-control\" type=\"text\" id=\"email_Address\" placeholder=\"Enter Address\" [required]=\"true\" formControlName=\"email_Address\"></textarea>\n        </div>\n    </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"phoneNumber\">Phone Number:</label>\n          <div class=\"col-sm-6\">\n            <textarea class=\"form-control\" type=\"text\" id=\"phoneNumber\" placeholder=\"Enter 10-digit number\" [required]=\"true\" formControlName=\"phoneNumber\"></textarea>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"physical_Address\">Physical Address:</label>\n          <div class=\"col-sm-6\">\n            <textarea class=\"form-control\" type=\"text\" id=\"physical_Address\" placeholder=\"Enter Address\" [required]=\"true\" formControlName=\"physical_Address\"></textarea>\n          </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-1 col-sm-6\">\n          <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!updateSupplierForm.valid\" class=\"btn btn-sm btn-success\">Confirm</button>\n          <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\n        </div>\n      </div>\n    </form>\n    </div>\n  </div> \n    </div>\n    </div>\n  </div>\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}