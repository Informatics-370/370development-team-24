{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, map, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class InventoryService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = 'http://localhost:49991/api/';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        ContentType: 'application/json'\n      })\n    };\n  }\n  //Get All Inventory Items\n  GetAllInventoryItems() {\n    return this.httpClient.get(`${this.apiUrl}InventoryItem/GetAllInventoryItems`).pipe(map(result => result));\n  }\n  GetInventoryItem(inventory_ItemId) {\n    return this.httpClient.get(`${this.apiUrl}InventoryItem/GetInventoryItem` + \"/\" + inventory_ItemId).pipe(map(result => result));\n  }\n  DeleteInventoryItem(inventory_ItemId) {\n    return this.httpClient.delete(`${this.apiUrl}InventoryItem/DeleteInventoryItem` + \"/\" + inventory_ItemId, this.httpOptions);\n  }\n  // EditSupplier(supplierId: Number, supplier: Supplier)\n  // {\n  //   return this.httpClient.put(`${this.apiUrl}Supplier/EditSupplier/${supplierId}`,supplier, this.httpOptions)\n  // }\n  EditInventoryItem(inventory_ItemId, inventoryitem) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.httpClient.put(`${this.apiUrl}InventoryItem/EditInventoryItem/${inventory_ItemId}`, inventoryitem, httpOptions);\n  }\n  AddInventoryItem(inventoryitem) {\n    return this.httpClient.post(`${this.apiUrl}InventoryItem/AddInventoryItem`, inventoryitem, this.httpOptions).pipe(catchError(error => {\n      console.error('Error adding inventory item:', error);\n      return throwError(error);\n    }));\n  }\n  // Get Supplier Types\n  GetAllInventoryTypes() {\n    return this.httpClient.get(`${this.apiUrl}InventoryType/GetAllInventoryTypes`).pipe(map(result => result));\n  }\n  GetInventoryType(inventory_TypeId) {\n    return this.httpClient.get(`${this.apiUrl}InventoryType/GetInventoryType` + \"/\" + inventory_TypeId).pipe(map(result => result));\n  }\n  DeleteInventoryType(inventory_TypeId) {\n    return this.httpClient.delete(`${this.apiUrl}InventoryType/DeleteInventoryType` + \"/\" + inventory_TypeId, this.httpOptions);\n  }\n  EditInventoryType(inventory_TypeId, inventorytype) {\n    return this.httpClient.put(`${this.apiUrl}InventoryType/EditInventoryType/${inventory_TypeId}`, inventorytype, this.httpOptions);\n  }\n  AddInventoryType(inventorytype) {\n    return this.httpClient.post(`${this.apiUrl}InventoryType/AddInventoryType`, inventorytype, this.httpOptions);\n  }\n}\nInventoryService.ɵfac = function InventoryService_Factory(t) {\n  return new (t || InventoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nInventoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InventoryService,\n  factory: InventoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","catchError","map","throwError","InventoryService","constructor","httpClient","headers","ContentType","GetAllInventoryItems","get","apiUrl","pipe","result","GetInventoryItem","inventory_ItemId","DeleteInventoryItem","delete","httpOptions","EditInventoryItem","inventoryitem","put","AddInventoryItem","post","error","console","GetAllInventoryTypes","GetInventoryType","inventory_TypeId","DeleteInventoryType","EditInventoryType","inventorytype","AddInventoryType","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\service\\inventory.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, map, Observable, Subject, throwError } from 'rxjs';\r\n\r\nimport { InventoryType } from '../shared/inventorytype';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class InventoryService {\r\n  \r\n    apiUrl = 'http://localhost:49991/api/'\r\n  \r\n    httpOptions ={\r\n      headers: new HttpHeaders({\r\n        ContentType: 'application/json'\r\n      })\r\n    }\r\n\r\n    constructor(private httpClient: HttpClient) { \r\n    }\r\n    //Get All Inventory Items\r\n    GetAllInventoryItems(): Observable<any>{\r\n        return this.httpClient.get(`${this.apiUrl}InventoryItem/GetAllInventoryItems`)\r\n        .pipe(map(result => result))\r\n      }\r\n\r\n      GetInventoryItem(inventory_ItemId: number) {\r\n        return this.httpClient.get(`${this.apiUrl}InventoryItem/GetInventoryItem` + \"/\" + inventory_ItemId)\r\n        .pipe(map(result => result))\r\n      }\r\n\r\n      DeleteInventoryItem(inventory_ItemId: Number)\r\n      {\r\n        return this.httpClient.delete<string>(`${this.apiUrl}InventoryItem/DeleteInventoryItem` + \"/\" + inventory_ItemId, this.httpOptions)\r\n      }\r\n\r\n      // EditSupplier(supplierId: Number, supplier: Supplier)\r\n      // {\r\n      //   return this.httpClient.put(`${this.apiUrl}Supplier/EditSupplier/${supplierId}`,supplier, this.httpOptions)\r\n      // }\r\n\r\n      EditInventoryItem(inventory_ItemId: number, inventoryitem: InventoryItem): Observable<any> {\r\n        const httpOptions = {\r\n          headers: new HttpHeaders({\r\n            'Content-Type': 'application/json'\r\n          })\r\n        };\r\n        return this.httpClient.put(`${this.apiUrl}InventoryItem/EditInventoryItem/${inventory_ItemId}`, inventoryitem, httpOptions);\r\n      }\r\n\r\n      AddInventoryItem(inventoryitem: InventoryItem) {\r\n        return this.httpClient.post(`${this.apiUrl}InventoryItem/AddInventoryItem`, inventoryitem, this.httpOptions)\r\n          .pipe(\r\n            catchError(error => {\r\n              console.error('Error adding inventory item:', error);\r\n              return throwError(error);\r\n            })\r\n          );\r\n      }\r\n\r\n\r\n    // Get Supplier Types\r\n\r\n    GetAllInventoryTypes(): Observable<any>{\r\n      return this.httpClient.get(`${this.apiUrl}InventoryType/GetAllInventoryTypes`)\r\n      .pipe(map(result => result))\r\n    }\r\n    \r\n\r\n    GetInventoryType(inventory_TypeId: Number) {\r\n      return this.httpClient.get(`${this.apiUrl}InventoryType/GetInventoryType` + \"/\" + inventory_TypeId)\r\n      .pipe(map(result => result))\r\n    }\r\n    \r\n    DeleteInventoryType(inventory_TypeId: Number)\r\n    {\r\n      return this.httpClient.delete<string>(`${this.apiUrl}InventoryType/DeleteInventoryType` + \"/\" + inventory_TypeId, this.httpOptions)\r\n    }\r\n\r\n    EditInventoryType(inventory_TypeId: number, inventorytype: InventoryType)\r\n    {\r\n      return this.httpClient.put(`${this.apiUrl}InventoryType/EditInventoryType/${inventory_TypeId}`,inventorytype, this.httpOptions)\r\n    }\r\n\r\n    AddInventoryType(inventorytype: InventoryType)\r\n    {\r\n       return this.httpClient.post(`${this.apiUrl}InventoryType/AddInventoryType`, inventorytype, this.httpOptions)\r\n    }\r\n  \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}