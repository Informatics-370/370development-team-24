{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SupplierService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = 'http://localhost:49991/api/';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        ContentType: 'application/json'\n      })\n    };\n  }\n  //Get All suppliers\n  GetAllSuppliers() {\n    return this.httpClient.get(`${this.apiUrl}Supplier/GetAllSuppliers`).pipe(map(result => result));\n  }\n  GetSupplier(supplierId) {\n    return this.httpClient.get(`${this.apiUrl}Supplier/GetSupplier` + \"/\" + supplierId).pipe(map(result => result));\n  }\n  DeleteSupplier(supplierId) {\n    return this.httpClient.delete(`${this.apiUrl}Supplier/DeleteSupplier` + \"/\" + supplierId, this.httpOptions);\n  }\n  EditSupplier(supplierId, supplier) {\n    return this.httpClient.put(`${this.apiUrl}Employee/EditEmployee/${supplierId}`, supplier, this.httpOptions);\n  }\n  AddSupplier(supplier) {\n    return this.httpClient.post(`${this.apiUrl}Supplier/AddSupplier`, supplier, this.httpOptions);\n  }\n  // Get Supplier Types\n  GetAllSupplierTypes() {\n    return this.httpClient.get(`${this.apiUrl}SupplierType/GetAllSupplierTypes`).pipe(map(result => result));\n  }\n  GetSupplierType(supplier_TypeId) {\n    return this.httpClient.get(`${this.apiUrl}SupplierType/GetSupplierType` + \"/\" + supplier_TypeId).pipe(map(result => result));\n  }\n  DeleteSupplierType(supplier_TypeId) {\n    return this.httpClient.delete(`${this.apiUrl}SupplierType/DeleteSupplierType` + \"/\" + supplier_TypeId, this.httpOptions);\n  }\n  EditSupplierType(supplier_TypeId, suppliertype) {\n    return this.httpClient.put(`${this.apiUrl}SupplierType/EditSupplierType/${supplier_TypeId}`, suppliertype, this.httpOptions);\n  }\n  AddSupplierType(suppliertype) {\n    return this.httpClient.post(`${this.apiUrl}SupplierType/AddSupplierType`, suppliertype, this.httpOptions);\n  }\n}\nSupplierService.ɵfac = function SupplierService_Factory(t) {\n  return new (t || SupplierService)(i0.ɵɵinject(i1.HttpClient));\n};\nSupplierService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SupplierService,\n  factory: SupplierService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,GAAG,QAA6B,MAAM;;;AAO7C,OAAM,MAAOC,eAAe;EAU1BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAR9B,WAAM,GAAG,6BAA6B;IAEtC,gBAAW,GAAE;MACXC,OAAO,EAAE,IAAIL,WAAW,CAAC;QACvBM,WAAW,EAAE;OACd;KACF;EAGD;EACA;EACAC,eAAe;IACX,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,0BAA0B,CAAC,CACnEC,IAAI,CAACT,GAAG,CAACU,MAAM,IAAIA,MAAM,CAAC,CAAC;EAC9B;EAEAC,WAAW,CAACC,UAAkB;IAC5B,OAAO,IAAI,CAACT,UAAU,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,sBAAsB,GAAG,GAAG,GAAGI,UAAU,CAAC,CAClFH,IAAI,CAACT,GAAG,CAACU,MAAM,IAAIA,MAAM,CAAC,CAAC;EAC9B;EAEAG,cAAc,CAACD,UAAkB;IAE/B,OAAO,IAAI,CAACT,UAAU,CAACW,MAAM,CAAS,GAAG,IAAI,CAACN,MAAM,yBAAyB,GAAG,GAAG,GAAGI,UAAU,EAAE,IAAI,CAACG,WAAW,CAAC;EACrH;EAEAC,YAAY,CAACJ,UAAkB,EAAEK,QAAkB;IAEjD,OAAO,IAAI,CAACd,UAAU,CAACe,GAAG,CAAC,GAAG,IAAI,CAACV,MAAM,yBAAyBI,UAAU,EAAE,EAACK,QAAQ,EAAE,IAAI,CAACF,WAAW,CAAC;EAC5G;EAEAI,WAAW,CAACF,QAAkB;IAE5B,OAAO,IAAI,CAACd,UAAU,CAACiB,IAAI,CAAC,GAAG,IAAI,CAACZ,MAAM,sBAAsB,EAAES,QAAQ,EAAE,IAAI,CAACF,WAAW,CAAC;EAC/F;EAEF;EAEAM,mBAAmB;IACjB,OAAO,IAAI,CAAClB,UAAU,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,kCAAkC,CAAC,CAC3EC,IAAI,CAACT,GAAG,CAACU,MAAM,IAAIA,MAAM,CAAC,CAAC;EAC9B;EAEAY,eAAe,CAACC,eAAuB;IACrC,OAAO,IAAI,CAACpB,UAAU,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,8BAA8B,GAAG,GAAG,GAAGe,eAAe,CAAC,CAC/Fd,IAAI,CAACT,GAAG,CAACU,MAAM,IAAIA,MAAM,CAAC,CAAC;EAC9B;EAEAc,kBAAkB,CAACD,eAAuB;IAExC,OAAO,IAAI,CAACpB,UAAU,CAACW,MAAM,CAAS,GAAG,IAAI,CAACN,MAAM,iCAAiC,GAAG,GAAG,GAAGe,eAAe,EAAE,IAAI,CAACR,WAAW,CAAC;EAClI;EAEAU,gBAAgB,CAACF,eAAuB,EAAEG,YAA0B;IAElE,OAAO,IAAI,CAACvB,UAAU,CAACe,GAAG,CAAC,GAAG,IAAI,CAACV,MAAM,iCAAiCe,eAAe,EAAE,EAACG,YAAY,EAAE,IAAI,CAACX,WAAW,CAAC;EAC7H;EAEAY,eAAe,CAACD,YAA0B;IAEvC,OAAO,IAAI,CAACvB,UAAU,CAACiB,IAAI,CAAC,GAAG,IAAI,CAACZ,MAAM,8BAA8B,EAAEkB,YAAY,EAAE,IAAI,CAACX,WAAW,CAAC;EAC5G;;AA/DWd,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAA2B,SAAf3B,eAAe;EAAA4B,YAFd;AAAM","names":["HttpHeaders","map","SupplierService","constructor","httpClient","headers","ContentType","GetAllSuppliers","get","apiUrl","pipe","result","GetSupplier","supplierId","DeleteSupplier","delete","httpOptions","EditSupplier","supplier","put","AddSupplier","post","GetAllSupplierTypes","GetSupplierType","supplier_TypeId","DeleteSupplierType","EditSupplierType","suppliertype","AddSupplierType","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\service\\supplier.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, Subject } from 'rxjs';\r\nimport { Supplier } from '../shared/supplier';\r\nimport { SupplierType } from '../shared/SupplierTypes';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class SupplierService {\r\n  \r\n    apiUrl = 'http://localhost:49991/api/'\r\n  \r\n    httpOptions ={\r\n      headers: new HttpHeaders({\r\n        ContentType: 'application/json'\r\n      })\r\n    }\r\n\r\n    constructor(private httpClient: HttpClient) { \r\n    }\r\n    //Get All suppliers\r\n    GetAllSuppliers(): Observable<any>{\r\n        return this.httpClient.get(`${this.apiUrl}Supplier/GetAllSuppliers`)\r\n        .pipe(map(result => result))\r\n      }\r\n\r\n      GetSupplier(supplierId: number) {\r\n        return this.httpClient.get(`${this.apiUrl}Supplier/GetSupplier` + \"/\" + supplierId)\r\n        .pipe(map(result => result))\r\n      }\r\n\r\n      DeleteSupplier(supplierId: Number)\r\n      {\r\n        return this.httpClient.delete<string>(`${this.apiUrl}Supplier/DeleteSupplier` + \"/\" + supplierId, this.httpOptions)\r\n      }\r\n\r\n      EditSupplier(supplierId: number, supplier: Supplier)\r\n      {\r\n        return this.httpClient.put(`${this.apiUrl}Employee/EditEmployee/${supplierId}`,supplier, this.httpOptions)\r\n      }\r\n\r\n      AddSupplier(supplier: Supplier)\r\n      {\r\n        return this.httpClient.post(`${this.apiUrl}Supplier/AddSupplier`, supplier, this.httpOptions)\r\n      }\r\n\r\n    // Get Supplier Types\r\n\r\n    GetAllSupplierTypes(): Observable<any>{\r\n      return this.httpClient.get(`${this.apiUrl}SupplierType/GetAllSupplierTypes`)\r\n      .pipe(map(result => result))\r\n    }\r\n\r\n    GetSupplierType(supplier_TypeId: number) {\r\n      return this.httpClient.get(`${this.apiUrl}SupplierType/GetSupplierType` + \"/\" + supplier_TypeId)\r\n      .pipe(map(result => result))\r\n    }\r\n    \r\n    DeleteSupplierType(supplier_TypeId: Number)\r\n    {\r\n      return this.httpClient.delete<string>(`${this.apiUrl}SupplierType/DeleteSupplierType` + \"/\" + supplier_TypeId, this.httpOptions)\r\n    }\r\n\r\n    EditSupplierType(supplier_TypeId: number, suppliertype: SupplierType)\r\n    {\r\n      return this.httpClient.put(`${this.apiUrl}SupplierType/EditSupplierType/${supplier_TypeId}`,suppliertype, this.httpOptions)\r\n    }\r\n\r\n    AddSupplierType(suppliertype: SupplierType)\r\n    {\r\n       return this.httpClient.post(`${this.apiUrl}SupplierType/AddSupplierType`, suppliertype, this.httpOptions)\r\n    }\r\n  \r\n\r\n   \r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}