{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inventory.service\";\nimport * as i2 from \"@angular/router\";\nexport class EditInventoryitemComponent {\n  constructor(inventoryservice, router, activated) {\n    this.inventoryservice = inventoryservice;\n    this.router = router;\n    this.activated = activated;\n    this.editInventoryItem = new InventoryItem();\n    this.editInventoryItemForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.activated.params.subscribe(params => {\n      this.inventoryservice.GetInventoryItem(params['id']).subscribe(result => {\n        this.editInventoryItem = result;\n        this.editInventoryItemForm.controls['itemName'].setValue(this.editInventoryItem.itemName);\n        this.editInventoryItemForm.controls['description'].setValue(this.editInventoryItem.description);\n      });\n    });\n  }\n  cancel() {\n    this.router.navigate(['/view-inventoryitems']);\n  }\n  onSubmit() {\n    let inventoryitem = new InventoryItem();\n    inventoryitem.itemName = this.editInventoryItemForm.value.itemName;\n    inventoryitem.description = this.editInventoryItemForm.value.description;\n    this.inventoryservice.EditInventoryItem(this.editInventoryItem.inventory_ItemId, inventoryitem).subscribe(result => {\n      this.router.navigate(['view-inventoryitems']);\n    });\n  }\n}\nEditInventoryitemComponent.ɵfac = function EditInventoryitemComponent_Factory(t) {\n  return new (t || EditInventoryitemComponent)(i0.ɵɵdirectiveInject(i1.InventoryService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditInventoryitemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditInventoryitemComponent,\n  selectors: [[\"app-edit-inventoryitem\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditInventoryitemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-inventoryitem works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAGnE,SAASC,aAAa,QAAQ,8BAA8B;;;;AAO5D,OAAM,MAAOC,0BAA0B;EAErCC,YAAoBC,gBAAkC,EAC5CC,MAAc,EACdC,SAAwB;IAFd,qBAAgB,GAAhBF,gBAAgB;IAC1B,WAAM,GAANC,MAAM;IACN,cAAS,GAATC,SAAS;IAEjB,sBAAiB,GAAkB,IAAIL,aAAa,EAAE;IAEtD,0BAAqB,GAAc,IAAIF,SAAS,CAAC;MAC9CQ,IAAI,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAC/CC,WAAW,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC;KACvD,CAAC;EAPkC;EASpCE,QAAQ;IACN,IAAI,CAACJ,SAAS,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACzC,IAAI,CAACP,gBAAgB,CAACS,gBAAgB,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAACC,SAAS,CAACE,MAAM,IAAG;QACtE,IAAI,CAACC,iBAAiB,GAAGD,MAAuB;QAChD,IAAI,CAACE,qBAAqB,CAACC,QAAQ,CAAC,UAAU,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACH,iBAAiB,CAACI,QAAQ,CAAC;QACzF,IAAI,CAACH,qBAAqB,CAACC,QAAQ,CAAC,aAAa,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACH,iBAAiB,CAACN,WAAW,CAAC;MACjG,CAAC,CAAC;IACF,CAAC,CAAC;EAEJ;EAEAW,MAAM;IACJ,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC;EAChD;EAEAC,QAAQ;IACN,IAAIC,aAAa,GAAG,IAAItB,aAAa,EAAE;IACvCsB,aAAa,CAACJ,QAAQ,GAAG,IAAI,CAACH,qBAAqB,CAACQ,KAAK,CAACL,QAAQ;IAClEI,aAAa,CAACd,WAAW,GAAG,IAAI,CAACO,qBAAqB,CAACQ,KAAK,CAACf,WAAW;IAExE,IAAI,CAACL,gBAAgB,CAACqB,iBAAiB,CAAC,IAAI,CAACV,iBAAiB,CAACW,gBAAgB,EAAEH,aAAa,CAAC,CAACX,SAAS,CAAEE,MAAU,IAAI;MAEzH,IAAI,CAACT,MAAM,CAACgB,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;IAC7C,CAAC,CAAC;EACJ;;AArCSnB,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA,0BAA0B;EAAAyB;EAAAC;EAAAC;EAAAC;IAAA;MCXvCC,yBAAG;MAAAA,yCAAyB;MAAAA,iBAAI","names":["FormControl","FormGroup","Validators","InventoryItem","EditInventoryitemComponent","constructor","inventoryservice","router","activated","name","required","description","ngOnInit","params","subscribe","GetInventoryItem","result","editInventoryItem","editInventoryItemForm","controls","setValue","itemName","cancel","navigate","onSubmit","inventoryitem","value","EditInventoryItem","inventory_ItemId","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\edit-inventoryitem\\edit-inventoryitem.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\edit-inventoryitem\\edit-inventoryitem.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\n\n@Component({\n  selector: 'app-edit-inventoryitem',\n  templateUrl: './edit-inventoryitem.component.html',\n  styleUrls: ['./edit-inventoryitem.component.css']\n})\nexport class EditInventoryitemComponent {\n\n  constructor(private inventoryservice: InventoryService, \n    private router: Router, \n    private activated:ActivatedRoute) { }\n  \n    editInventoryItem: InventoryItem = new InventoryItem();\n  \n    editInventoryItemForm: FormGroup = new FormGroup({\n       name: new FormControl('',[Validators.required]),\n       description: new FormControl('',[Validators.required])\n    })\n  \n    ngOnInit(): void {\n      this.activated.params.subscribe(params =>{\n      this.inventoryservice.GetInventoryItem(params['id']).subscribe(result =>{\n        this.editInventoryItem = result as InventoryItem;\n        this.editInventoryItemForm.controls['itemName'].setValue(this.editInventoryItem.itemName);\n        this.editInventoryItemForm.controls['description'].setValue(this.editInventoryItem.description);\n      })\n      })\n  \n    }\n  \n    cancel(){\n      this.router.navigate(['/view-inventoryitems'])\n    }\n  \n    onSubmit(){\n      let inventoryitem = new InventoryItem();\n      inventoryitem.itemName = this.editInventoryItemForm.value.itemName;\n      inventoryitem.description = this.editInventoryItemForm.value.description;\n  \n      this.inventoryservice.EditInventoryItem(this.editInventoryItem.inventory_ItemId, inventoryitem).subscribe((result:any) => {\n  \n      this.router.navigate(['view-inventoryitems'])\n      });\n    }\n}\n","<p>edit-inventoryitem works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}