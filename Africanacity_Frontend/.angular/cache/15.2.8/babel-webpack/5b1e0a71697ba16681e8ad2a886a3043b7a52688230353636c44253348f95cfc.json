{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/supplier.service\";\nimport * as i3 from \"src/app/service/inventory.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../../../navbar/navbar.component\";\nfunction ReceiveOrderComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Please enter a valid item ID. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReceiveOrderComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const supplier_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", supplier_r5.supplierId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(supplier_r5.supplierName);\n  }\n}\nfunction ReceiveOrderComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction ReceiveOrderComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction ReceiveOrderComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nexport class ReceiveOrderComponent {\n  constructor(route, supplierservice, inventoryservice, httpClient, fb, router) {\n    this.route = route;\n    this.supplierservice = supplierservice;\n    this.inventoryservice = inventoryservice;\n    this.httpClient = httpClient;\n    this.fb = fb;\n    this.router = router;\n    this.supplierData = [];\n    this.inventoryItems = [];\n    this.editInventory = new InventoryItem();\n    this.receiveOrderForm = this.fb.group({\n      itemName: ['', Validators.required],\n      supplierId: ['', Validators.required],\n      ordered_Date: ['', Validators.required],\n      received_Date: [new Date().toISOString().slice(0, 10)],\n      ordered_Quantity: ['', [Validators.required, Validators.min(1)]]\n    });\n    this.receiveOrderForm.controls['itemName'].disable();\n  }\n  onReceiveOrderClick(itemName) {\n    this.router.navigate(['/receive-order'], {\n      queryParams: {\n        itemName: itemName\n      }\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.inventoryservice.GetInventoryItem(params['id']).subscribe(res => {\n        this.editInventory = res;\n        this.receiveOrderForm.controls['itemName'].setValue(this.editInventory.itemName);\n      });\n    });\n    this.getAllSuppliers();\n  }\n  getAllSuppliers() {\n    this.supplierservice.GetAllSuppliers().subscribe(result => {\n      this.supplierData = result;\n    });\n  }\n  onSubmit() {\n    if (this.receiveOrderForm.valid) {\n      const formData = this.receiveOrderForm.value;\n      this.httpClient.post('/api/InventoryItem/AddReceivedOrder', formData).subscribe(response => {\n        // Handle successful response\n        console.log('Order received successfully:', response);\n      }, error => {\n        // Handle error\n        console.error('Error receiving order:', error);\n      });\n    }\n  }\n  onCancel() {\n    // Here you can specify the route or action to navigate when the cancel button is clicked.\n    // For example, you might want to navigate back to the previous page:\n    this.router.navigate(['/checklist']);\n  }\n}\nReceiveOrderComponent.ɵfac = function ReceiveOrderComponent_Factory(t) {\n  return new (t || ReceiveOrderComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SupplierService), i0.ɵɵdirectiveInject(i3.InventoryService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n};\nReceiveOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReceiveOrderComponent,\n  selectors: [[\"app-receive-order\"]],\n  decls: 41,\n  vars: 8,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\", \"font-weight\", \"bolder\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"itemName\"], [\"type\", \"text\", \"formControlName\", \"itemName\"], [4, \"ngIf\"], [\"for\", \"supplierId\"], [\"formControlName\", \"supplierId\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"ordered_Date\"], [\"type\", \"date\", \"formControlName\", \"ordered_Date\"], [\"for\", \"received_Date\"], [\"type\", \"date\", \"formControlName\", \"received_Date\", 3, \"readonly\"], [\"for\", \"ordered_Quantity\"], [\"type\", \"number\", \"formControlName\", \"ordered_Quantity\", \"min\", \"1\"], [\"type\", \"submit\", 3, \"disabled\"], [\"type\", \"button\", 3, \"click\"], [3, \"value\"]],\n  template: function ReceiveOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\")(6, \"h1\", 4);\n      i0.ɵɵtext(7, \"Receive Order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function ReceiveOrderComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Inventory Item Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵtemplate(13, ReceiveOrderComponent_div_13_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Select Supplier:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"select\", 10)(18, \"option\", 11);\n      i0.ɵɵtext(19, \"-- Select a supplier --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, ReceiveOrderComponent_option_20_Template, 2, 2, \"option\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, ReceiveOrderComponent_div_21_Template, 1, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\")(23, \"label\", 13);\n      i0.ɵɵtext(24, \"Ordered Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 14);\n      i0.ɵɵtemplate(26, ReceiveOrderComponent_div_26_Template, 1, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\")(28, \"label\", 15);\n      i0.ɵɵtext(29, \"Received Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\")(32, \"label\", 17);\n      i0.ɵɵtext(33, \"Ordered Quantity:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 18);\n      i0.ɵɵtemplate(35, ReceiveOrderComponent_div_35_Template, 1, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"span\")(37, \"button\", 19);\n      i0.ɵɵtext(38, \"Receive Order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function ReceiveOrderComponent_Template_button_click_39_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(40, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.receiveOrderForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.receiveOrderForm.get(\"itemName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.receiveOrderForm.get(\"itemName\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.supplierData);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.receiveOrderForm.get(\"supplierId\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.receiveOrderForm.get(\"ordered_Date\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"readonly\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.receiveOrderForm.get(\"ordered_Quantity\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.receiveOrderForm.invalid);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.MinValidator, i5.FormGroupDirective, i5.FormControlName, i7.NavbarComponent],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n    max-width: 500px;\\r\\n    margin: 0 auto;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n    background-color: #f7f7f7;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    font-weight: bold;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"date\\\"][_ngcontent-%COMP%], select[_ngcontent-%COMP%], input[type=\\\"number\\\"][_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    margin-bottom: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  div.error-message[_ngcontent-%COMP%] {\\r\\n    color: red;\\r\\n    margin-top: -10px;\\r\\n    margin-bottom: 10px;\\r\\n    font-size: 12px;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    padding: 10px 20px;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  \\r\\n  button[type=\\\"button\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #af4c4c;\\r\\n    color: white;\\r\\n    padding: 10px 20px;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  \\r\\n  select[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    margin-bottom: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  input[type=\\\"date\\\"][readonly][_ngcontent-%COMP%] {\\r\\n    background-color: #ddd;\\r\\n    cursor: not-allowed;\\r\\n  }\\r\\n  button[type=\\\"button\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #f82525da; \\r\\n    margin-right: 100px; \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vSW52ZW50b3J5IE1hbmFnZW1lbnQvSW52ZW50b3J5IEl0ZW1zL3JlY2VpdmUtb3JkZXIvcmVjZWl2ZS1vcmRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQix5QkFBeUI7RUFDM0I7O0VBRUEsMkJBQTJCO0VBQzNCO0lBQ0UsY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7RUFDcEI7O0VBRUE7Ozs7SUFJRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLHNCQUFzQjtFQUN4Qjs7RUFFQSxtQ0FBbUM7RUFDbkM7SUFDRSxVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixlQUFlO0VBQ2pCOztFQUVBLGlDQUFpQztFQUNqQztJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGVBQWU7RUFDakI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixlQUFlO0VBQ2pCO0VBQ0EsaUNBQWlDO0VBQ2pDO0lBQ0UsV0FBVztJQUNYLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixzQkFBc0I7RUFDeEI7O0VBRUEsa0RBQWtEO0VBQ2xEO0lBQ0Usc0JBQXNCO0lBQ3RCLG1CQUFtQjtFQUNyQjtFQUNBO0lBQ0UsMkJBQTJCLEVBQUUsc0RBQXNEO0lBQ25GLG1CQUFtQixFQUFFLHlDQUF5QztFQUNoRSIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xyXG4gIH1cclxuICBcclxuICAvKiBTdHlsZXMgZm9yIGZvcm0gZmllbGRzICovXHJcbiAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXRbdHlwZT1cInRleHRcIl0sXHJcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl0sXHJcbiAgc2VsZWN0LFxyXG4gIGlucHV0W3R5cGU9XCJudW1iZXJcIl0ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIH1cclxuICBcclxuICAvKiBTdHlsZXMgZm9yIHZhbGlkYXRpb24gbWVzc2FnZXMgKi9cclxuICBkaXYuZXJyb3ItbWVzc2FnZSB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgbWFyZ2luLXRvcDogLTEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gIH1cclxuICBcclxuICAvKiBTdHlsZXMgZm9yIHRoZSBTdWJtaXQgYnV0dG9uICovXHJcbiAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uW3R5cGU9XCJidXR0b25cIl0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2FmNGM0YztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbiAgLyogU3R5bGUgZm9yIHRoZSBTZWxlY3QgZWxlbWVudCAqL1xyXG4gIHNlbGVjdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFN0eWxlIGZvciB0aGUgUmVjZWl2ZWQgRGF0ZSBpbnB1dCAocmVhZC1vbmx5KSAqL1xyXG4gIGlucHV0W3R5cGU9XCJkYXRlXCJdW3JlYWRvbmx5XSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xyXG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxuICB9XHJcbiAgYnV0dG9uW3R5cGU9XCJidXR0b25cIl0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4MjUyNWRhOyAvKiBHcmF5IGNvbG9yLCB5b3UgY2FuIHVzZSB5b3VyIHByZWZlcnJlZCBjb2xvciBoZXJlICovXHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwMHB4OyAvKiBBZGQgc29tZSBzcGFjaW5nIGJldHdlZW4gdGhlIGJ1dHRvbnMgKi9cclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAA8CA,UAAU,QAAQ,gBAAgB;AAKhF,SAASC,aAAa,QAAQ,8BAA8B;;;;;;;;;;;ICKxDC,2BAAoG;IAClGA,+CACF;IAAAA,iBAAM;;;;;IAQJA,kCAA4E;IAAAA,YAA2B;IAAAA,iBAAS;;;;IAAlEA,8CAA6B;IAACA,eAA2B;IAA3BA,8CAA2B;;;;;IAEzGA,sBAAsD;;;;;IAMtDA,sBAAwD;;;;;IAWxDA,sBAA4D;;;ADxBhE,OAAM,MAAOC,qBAAqB;EAOhCC,YACUC,KAAqB,EACrBC,eAAgC,EAChCC,gBAAkC,EAClCC,UAAsB,EACtBC,EAAe,EACfC,MAAc;IALd,UAAK,GAALL,KAAK;IACL,oBAAe,GAAfC,eAAe;IACf,qBAAgB,GAAhBC,gBAAgB;IAChB,eAAU,GAAVC,UAAU;IACV,OAAE,GAAFC,EAAE;IACF,WAAM,GAANC,MAAM;IAXhB,iBAAY,GAAe,EAAE;IAC7B,mBAAc,GAAoB,EAAE;IAEpC,kBAAa,GAAkB,IAAIT,aAAa,EAAE;IAUhD,IAAI,CAACU,gBAAgB,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACc,QAAQ,CAAC;MACnCC,UAAU,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACc,QAAQ,CAAC;MACrCE,YAAY,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACc,QAAQ,CAAC;MACvCG,aAAa,EAAE,CAAC,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MACtDC,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAACrB,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACsB,GAAG,CAAC,CAAC,CAAC,CAAC;KAChE,CAAC;IACF,IAAI,CAACX,gBAAgB,CAACY,QAAQ,CAAC,UAAU,CAAC,CAACC,OAAO,EAAE;EACtD;EAGAC,mBAAmB,CAACZ,QAAgB;IAClC,IAAI,CAACH,MAAM,CAACgB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EAAE;MAAEC,WAAW,EAAE;QAAEd,QAAQ,EAAEA;MAAQ;IAAE,CAAE,CAAC;EACnF;EAEAe,QAAQ;IACN,IAAI,CAACvB,KAAK,CAACwB,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACtB,gBAAgB,CAACwB,gBAAgB,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAACC,SAAS,CAACE,GAAG,IAAG;QACnE,IAAI,CAACC,aAAa,GAAGD,GAAoB;QAEzC,IAAI,CAACrB,gBAAgB,CAACY,QAAQ,CAAC,UAAU,CAAC,CAACW,QAAQ,CAAC,IAAI,CAACD,aAAa,CAACpB,QAAQ,CAAC;MAEhF,CAAC,CACF;IACD,CAAC,CAAC;IAEJ,IAAI,CAACsB,eAAe,EAAE;EACxB;EAEAA,eAAe;IACb,IAAI,CAAC7B,eAAe,CAAC8B,eAAe,EAAE,CAACN,SAAS,CAAEO,MAAM,IAAI;MAC1D,IAAI,CAACC,YAAY,GAAGD,MAAM;IAC5B,CAAC,CAAC;EACJ;EAGAE,QAAQ;IACN,IAAI,IAAI,CAAC5B,gBAAgB,CAAC6B,KAAK,EAAE;MAC/B,MAAMC,QAAQ,GAAG,IAAI,CAAC9B,gBAAgB,CAAC+B,KAAK;MAC5C,IAAI,CAAClC,UAAU,CAACmC,IAAI,CAAC,qCAAqC,EAAEF,QAAQ,CAAC,CAACX,SAAS,CAC5Ec,QAAa,IAAI;QAChB;QACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC;MACvD,CAAC,EACAG,KAAU,IAAI;QACb;QACAF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CACF;;EAEL;EACAC,QAAQ;IACN;IACA;IACA,IAAI,CAACtC,MAAM,CAACgB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;;AAtEWvB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAA8C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjBlCnD,8BAA6B;MAGvBA,6BAAyB;MAC3BA,iBAAM;MACNA,8BAAkC;MAE8EA,6BAAa;MAAAA,iBAAK;MACtIA,+BAA6D;MAAxBA;QAAA,OAAYoD,cAAU;MAAA,EAAC;MAC1DpD,2BAAK;MACmBA,qCAAoB;MAAAA,iBAAQ;MAClDA,4BAA8C;MAC9CA,wEAEM;MACRA,iBAAM;MAENA,4BAAK;MACqBA,iCAAgB;MAAAA,iBAAQ;MAChDA,mCAAqC;MAClBA,wCAAuB;MAAAA,iBAAS;MAEjDA,+EAAgH;MAClHA,iBAAS;MACTA,wEAAsD;MACxDA,iBAAM;MAENA,4BAAK;MACuBA,8BAAa;MAAAA,iBAAQ;MAC/CA,6BAAkD;MAClDA,wEAAwD;MAC1DA,iBAAM;MAENA,4BAAK;MACwBA,+BAAc;MAAAA,iBAAQ;MACjDA,6BAAqE;MACvEA,iBAAM;MAENA,4BAAK;MAC2BA,kCAAiB;MAAAA,iBAAQ;MACvDA,6BAAgE;MAChEA,wEAA4D;MAC9DA,iBAAM;MACRA,6BAAM;MACwDA,8BAAa;MAAAA,iBAAS;MAClFA,mCAA2C;MAArBA;QAAA,OAASoD,cAAU;MAAA,EAAC;MAACpD,uBAAM;MAAAA,iBAAS;;;;MArCtDA,eAA8B;MAA9BA,gDAA8B;MAI1BA,eAA4F;MAA5FA,iMAA4F;MAUnEA,eAAe;MAAfA,0CAAe;MAExCA,eAAwC;MAAxCA,6DAAwC;MAMxCA,eAA0C;MAA1CA,+DAA0C;MAKGA,eAAiB;MAAjBA,+BAAiB;MAM9DA,eAA8C;MAA9CA,mEAA8C;MAGhCA,eAAqC;MAArCA,uDAAqC","names":["Validators","InventoryItem","i0","ReceiveOrderComponent","constructor","route","supplierservice","inventoryservice","httpClient","fb","router","receiveOrderForm","group","itemName","required","supplierId","ordered_Date","received_Date","Date","toISOString","slice","ordered_Quantity","min","controls","disable","onReceiveOrderClick","navigate","queryParams","ngOnInit","params","subscribe","GetInventoryItem","res","editInventory","setValue","getAllSuppliers","GetAllSuppliers","result","supplierData","onSubmit","valid","formData","value","post","response","console","log","error","onCancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\receive-order\\receive-order.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\receive-order\\receive-order.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms'; // Import the ReactiveFormsModule\nimport { ActivatedRoute } from '@angular/router';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { SupplierService } from 'src/app/service/supplier.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport { Supplier } from 'src/app/shared/supplier';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-receive-order',\n  templateUrl: './receive-order.component.html',\n  styleUrls: ['./receive-order.component.css']\n})\nexport class ReceiveOrderComponent implements OnInit {\n\n  supplierData: Supplier[] = [];\n  inventoryItems: InventoryItem[] = [];\n  receiveOrderForm!: FormGroup;\n  editInventory: InventoryItem = new InventoryItem();\n\n  constructor(\n    private route: ActivatedRoute,\n    private supplierservice: SupplierService,\n    private inventoryservice: InventoryService,\n    private httpClient: HttpClient,\n    private fb: FormBuilder,\n    private router: Router\n  ) {\n    this.receiveOrderForm = this.fb.group({\n      itemName: ['', Validators.required],\n      supplierId: ['', Validators.required],\n      ordered_Date: ['', Validators.required],\n      received_Date: [new Date().toISOString().slice(0, 10)],\n      ordered_Quantity: ['', [Validators.required, Validators.min(1)]]\n    });\n    this.receiveOrderForm.controls['itemName'].disable();\n  }\n\n\n  onReceiveOrderClick(itemName: string) {\n    this.router.navigate(['/receive-order'], { queryParams: { itemName: itemName } });\n  }\n\n  ngOnInit(): void{\n    this.route.params.subscribe(params => {\n      this.inventoryservice.GetInventoryItem(params['id']).subscribe(res => {\n        this.editInventory = res as InventoryItem;\n\n        this.receiveOrderForm.controls['itemName'].setValue(this.editInventory.itemName);\n       \n        }\n      );\n      });\n      \n    this.getAllSuppliers();\n  }\n\n  getAllSuppliers(): void {\n    this.supplierservice.GetAllSuppliers().subscribe((result) => {\n      this.supplierData = result;\n    });\n  }\n\n\n  onSubmit() {\n    if (this.receiveOrderForm.valid) {\n      const formData = this.receiveOrderForm.value;\n      this.httpClient.post('/api/InventoryItem/AddReceivedOrder', formData).subscribe(\n        (response: any) => {\n          // Handle successful response\n          console.log('Order received successfully:', response);\n        },\n        (error: any) => {\n          // Handle error\n          console.error('Error receiving order:', error);\n        }\n      );\n    }\n  }\n  onCancel() {\n    // Here you can specify the route or action to navigate when the cancel button is clicked.\n    // For example, you might want to navigate back to the previous page:\n    this.router.navigate(['/checklist']);\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-2\">\n      <app-navbar></app-navbar>\n    </div>\n    <div class=\"col-md-10 order-md-1\">\n      <div>\n<h1 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px; font-weight: bolder;\">Receive Order</h1>\n<form [formGroup]=\"receiveOrderForm\" (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label for=\"itemName\">Inventory Item Name:</label>\n    <input type=\"text\" formControlName=\"itemName\">\n    <div *ngIf=\"receiveOrderForm.get('itemName')?.invalid && receiveOrderForm.get('itemName')?.touched\">\n      Please enter a valid item ID.\n    </div>\n  </div>\n\n  <div>\n    <label for=\"supplierId\">Select Supplier:</label>\n    <select formControlName=\"supplierId\">\n      <option value=\"\">-- Select a supplier --</option>\n      <!-- Populate the options with suppliers from the backend -->\n      <option *ngFor=\"let supplier of supplierData\" [value]=\"supplier.supplierId\">{{ supplier.supplierName }}</option>\n    </select>\n    <div *ngIf=\"receiveOrderForm.get('supplierId')\"></div>\n  </div>\n\n  <div>\n    <label for=\"ordered_Date\">Ordered Date:</label>\n    <input type=\"date\" formControlName=\"ordered_Date\">\n    <div *ngIf=\"receiveOrderForm.get('ordered_Date')\"></div>\n  </div>\n\n  <div>\n    <label for=\"received_Date\">Received Date:</label>\n    <input type=\"date\" formControlName=\"received_Date\" [readonly]=\"true\">\n  </div>\n\n  <div>\n    <label for=\"ordered_Quantity\">Ordered Quantity:</label>\n    <input type=\"number\" formControlName=\"ordered_Quantity\" min=\"1\">\n    <div *ngIf=\"receiveOrderForm.get('ordered_Quantity')\"></div>\n  </div>\n<span>\n  <button type=\"submit\" [disabled]=\"receiveOrderForm.invalid\">Receive Order</button>\n  <button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n</span>\n\n</form>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}