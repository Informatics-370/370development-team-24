{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Entertainment_Type } from 'src/app/shared/entertainmentType';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/data.Service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../navbar/navbar.component\";\nexport class EditEntertainmentTypeComponent {\n  ngOnInit() {\n    this.activated.params.subscribe(params => {\n      this.dataService.GetEvent(params['id']).subscribe(result => {\n        this.editType = result;\n        this.updateTypeForm.controls['name'].setValue(this.editType.name);\n        this.updateTypeForm.controls['description'].setValue(this.editType.description);\n      });\n    });\n  }\n  constructor(dataService, router, activated, snackBar) {\n    this.dataService = dataService;\n    this.router = router;\n    this.activated = activated;\n    this.snackBar = snackBar;\n    this.editType = new Entertainment_Type();\n    this.updateTypeForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      Description: new FormControl('', [Validators.required])\n    });\n  }\n  cancel() {\n    this.router.navigate(['/entertainment-types']);\n  }\n  updateEntertainment() {\n    let entertainmentType = new Entertainment_Type();\n    entertainmentType.name = this.updateTypeForm.value.name;\n    entertainmentType.description = this.updateTypeForm.value.description;\n    this.dataService.EditEntertainment(this.editType.entertainment_TypeId, entertainmentType).subscribe(response => {\n      if (response.statusCode === 200) {\n        this.router.navigate(['./entertainment-types']);\n        window.location.reload();\n        this.showSuccessMessage('Entertainment Type updated successfully!');\n      } else {\n        // Handle error if needed\n      }\n    }, error => {\n      // Handle error if needed\n    });\n  }\n  showSuccessMessage(message) {\n    const snackBarRef = this.snackBar.open(message, 'Ok', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n}\nEditEntertainmentTypeComponent.ɵfac = function EditEntertainmentTypeComponent_Factory(t) {\n  return new (t || EditEntertainmentTypeComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n};\nEditEntertainmentTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditEntertainmentTypeComponent,\n  selectors: [[\"app-edit-entertainment-type\"]],\n  decls: 28,\n  vars: 4,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"id\", \"name\", \"placeholder\", \"Enter entertainment type\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"required\"], [\"for\", \"Description\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"Description\", \"placeholder\", \"Enter description\", \"formControlName\", \"Description\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n  template: function EditEntertainmentTypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\", 4);\n      i0.ɵɵtext(6, \"Update Entertainment Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function EditEntertainmentTypeComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.updateEntertainment();\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Entertainment:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 9);\n      i0.ɵɵelement(20, \"textarea\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"div\", 13)(24, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function EditEntertainmentTypeComponent_Template_button_click_24_listener() {\n        return ctx.updateEntertainment;\n      });\n      i0.ɵɵtext(25, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function EditEntertainmentTypeComponent_Template_button_click_26_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(27, \"Discard\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateTypeForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.updateTypeForm.valid);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i5.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Entertainment_Type","EditEntertainmentTypeComponent","ngOnInit","activated","params","subscribe","dataService","GetEvent","result","editType","updateTypeForm","controls","setValue","name","description","constructor","router","snackBar","required","Description","cancel","navigate","updateEntertainment","entertainmentType","value","EditEntertainment","entertainment_TypeId","response","statusCode","window","location","reload","showSuccessMessage","error","message","snackBarRef","open","duration","horizontalPosition","verticalPosition","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\booking\\entertainment\\edit-entertainment-type\\edit-entertainment-type.component.ts","C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\booking\\entertainment\\edit-entertainment-type\\edit-entertainment-type.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { DataService } from 'src/app/service/data.Service';\nimport { Entertainment_Type } from 'src/app/shared/entertainmentType';\n\n@Component({\n  selector: 'app-edit-entertainment-type',\n  templateUrl: './edit-entertainment-type.component.html',\n  styleUrls: ['./edit-entertainment-type.component.css']\n})\nexport class EditEntertainmentTypeComponent implements OnInit{\n\n  ngOnInit(): void {\n    this.activated.params.subscribe(params =>{\n      this.dataService.GetEvent(params['id']).subscribe(result =>{\n        this.editType = result as Entertainment_Type;\n        this.updateTypeForm.controls['name'].setValue(this.editType.name);\n        this.updateTypeForm.controls['description'].setValue(this.editType.description);\n      })\n    })\n  }\n\n  constructor( private dataService: DataService, \n    private router: Router, \n    private activated:ActivatedRoute,\n    private snackBar: MatSnackBar){}\n\n\n    editType: Entertainment_Type = new Entertainment_Type();\n\n   updateTypeForm: FormGroup = new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    Description: new FormControl('',[Validators.required])\n   })\n\n   cancel(){\n    this.router.navigate(['/entertainment-types'])\n  }\n   \n  updateEntertainment(){\n    let entertainmentType = new Entertainment_Type();\n      entertainmentType.name = this.updateTypeForm.value.name;\n      entertainmentType.description= this.updateTypeForm.value.description;\n\n      this.dataService.EditEntertainment(this.editType.entertainment_TypeId,entertainmentType).subscribe((response:any)=>{\n        if (response.statusCode === 200) {\n          this.router.navigate(['./entertainment-types']);\n          window.location.reload();\n          this.showSuccessMessage('Entertainment Type updated successfully!');\n        } else {\n          // Handle error if needed\n        }\n      },\n      (error) => {\n        // Handle error if needed\n      }\n      );\n  }\n\n  showSuccessMessage(message: string): void {\n    const snackBarRef: MatSnackBarRef<any> = this.snackBar.open(message, 'Ok', {\n      duration: 3000, // Duration in milliseconds\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n          <app-navbar></app-navbar>\n      </div>\n      <div class=\"col-md-10 order-md-1\">\n         <h4 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px;\">Update Entertainment Type</h4>\n         <hr>\n         <div class=\"container\">\n           <div class=\"row\">\n              <form [formGroup]=\"updateTypeForm\" class=\"form-horizontal\"  (ngSubmit)=\"updateEntertainment()\">\n                  <div class=\"form-group\">\n                      <label class=\" col-sm-1\" style=\"font-weight: bold;\" for=\"name\">Entertainment:</label>\n                      <div class=\"col-sm-6\">\n                        <input class=\"form-control\" id=\"name\" placeholder=\"Enter entertainment type\" [required]=\"true\" formControlName=\"name\">\n                      </div>\n                  </div>\n  \n                  <div class=\"form-group\">\n                      <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"Description\">Description:</label>\n                      <div class=\"col-sm-6\">\n                        <textarea class=\"form-control\" type=\"text\" id=\"Description\" placeholder=\"Enter description\" [required]=\"true\" formControlName=\"Description\"></textarea>\n                      </div>\n                  </div>\n                  <br>\n  \n                  <div class=\"form-group\">\n                      <div class=\"col-sm-offset-1 col-sm-6\">\n                        <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!updateTypeForm.valid\" class=\"btn btn-sm btn-success\" (click)=\"updateEntertainment\">Save</button>\n                        <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Discard</button>\n                      </div>\n                  </div>\n              </form>\n           </div>\n         </div>\n      </div>\n    </div>\n  </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}