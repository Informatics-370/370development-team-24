{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Supplier } from 'src/app/shared/supplier';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/supplier.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../../../../navbar/navbar.component\";\nfunction EditSupplierComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.name);\n  }\n}\nexport class EditSupplierComponent {\n  constructor(supplierservice, router, activated, dialog, snackBar) {\n    this.supplierservice = supplierservice;\n    this.router = router;\n    this.activated = activated;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.selectedSupplierType = null;\n    this.supplierTypesData = [];\n    this.editSupplier = new Supplier();\n    this.updateSupplierForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      selectedSupplierType: new FormControl('', [Validators.required]),\n      email_Address: new FormControl('', [Validators.required]),\n      phoneNumber: new FormControl('', [Validators.required]),\n      physical_Address: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.activated.params.subscribe(params => {\n      this.supplierservice.GetSupplier(params['id']).subscribe(res => {\n        this.editSupplier = res;\n        // Find the selected Supplier Type in the supplierTypesData array\n        this.selectedSupplierType = this.supplierTypesData.find(type => type.name === this.editSupplier.supplierTypeName) || null; // Set to null if no match is found\n        this.updateSupplierForm.controls['name'].setValue(this.editSupplier.name);\n        this.updateSupplierForm.controls['email_Address'].setValue(this.editSupplier.email_Address);\n        this.updateSupplierForm.controls['phoneNumber'].setValue(this.editSupplier.phoneNumber);\n        this.updateSupplierForm.controls['physical_Address'].setValue(this.editSupplier.physical_Address);\n      });\n    });\n  }\n  cancel() {\n    this.router.navigate(['/view-suppliers']);\n  }\n  GetAllSupplierTypes() {\n    this.supplierservice.GetAllSupplierTypes().subscribe(result => {\n      let supplierTypeList = result;\n      supplierTypeList.forEach(element => {\n        this.supplierTypesData.push(element);\n      });\n    });\n  }\n  updateSupplier() {\n    let supplier = new Supplier();\n    supplier.name = this.updateSupplierForm.value.name;\n    supplier.supplierType = this.updateSupplierForm.value.supplierType;\n    supplier.email_Address = this.updateSupplierForm.value.email_Address;\n    supplier.phoneNumber = this.updateSupplierForm.value.phoneNumber;\n    supplier.physical_Address = this.updateSupplierForm.value.physical_Address;\n    this.supplierservice.EditSupplier(this.editSupplier.supplierId, supplier).subscribe(response => {\n      if (response.statusCode == 200) {\n        this.router.navigate(['./view-suppliers']);\n        window.location.reload();\n      } else {}\n    });\n    this.showSuccessMessage('Supplier Information updated successfully!');\n  }\n  showSuccessMessage(message) {\n    const snackBarRef = this.snackBar.open(message, 'Ok', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n}\nEditSupplierComponent.ɵfac = function EditSupplierComponent_Factory(t) {\n  return new (t || EditSupplierComponent)(i0.ɵɵdirectiveInject(i1.SupplierService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n};\nEditSupplierComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditSupplierComponent,\n  selectors: [[\"app-edit-supplier\"]],\n  decls: 43,\n  vars: 8,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"id\", \"name\", \"placeholder\", \"Enter Name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"required\"], [\"for\", \"supplierType\", 1, \"col-md-1\", 2, \"font-weight\", \"bold\"], [1, \"col-md-6\"], [\"id\", \"supplierType\", \"formControlName\", \"supplierType\", 1, \"form-control\", 3, \"ngModel\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"email_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"email_Address\", \"placeholder\", \"Enter Address\", \"formControlName\", \"email_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"phoneNumber\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"placeholder\", \"Enter 10-digit number\", \"formControlName\", \"phoneNumber\", 1, \"form-control\", 3, \"required\"], [\"for\", \"physical_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"physical_Address\", \"placeholder\", \"Enter Address\", \"formControlName\", \"physical_Address\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [3, \"ngValue\"]],\n  template: function EditSupplierComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\", 4);\n      i0.ɵɵtext(6, \"Edit Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function EditSupplierComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.updateSupplier();\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Supplier Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"select\", 13);\n      i0.ɵɵtemplate(21, EditSupplierComponent_option_21_Template, 2, 2, \"option\", 14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"label\", 15);\n      i0.ɵɵtext(24, \"Email Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 9);\n      i0.ɵɵelement(26, \"textarea\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 7)(28, \"label\", 17);\n      i0.ɵɵtext(29, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 9);\n      i0.ɵɵelement(31, \"textarea\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 7)(33, \"label\", 19);\n      i0.ɵɵtext(34, \"Physical Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 9);\n      i0.ɵɵelement(36, \"textarea\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 7)(38, \"div\", 21)(39, \"button\", 22);\n      i0.ɵɵtext(40, \"Confirm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function EditSupplierComponent_Template_button_click_41_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(42, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateSupplierForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedSupplierType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.supplierTypesData);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.updateSupplierForm.valid);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.FormGroupDirective, i6.FormControlName, i7.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Supplier","i0","EditSupplierComponent","constructor","supplierservice","router","activated","dialog","snackBar","name","required","selectedSupplierType","email_Address","phoneNumber","physical_Address","ngOnInit","params","subscribe","GetSupplier","res","editSupplier","supplierTypesData","find","type","supplierTypeName","updateSupplierForm","controls","setValue","cancel","navigate","GetAllSupplierTypes","result","supplierTypeList","forEach","element","push","updateSupplier","supplier","value","supplierType","EditSupplier","supplierId","response","statusCode","window","location","reload","showSuccessMessage","message","snackBarRef","open","duration","horizontalPosition","verticalPosition","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Supplier Management\\Suppliers\\edit-supplier\\edit-supplier.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Supplier Management\\Suppliers\\edit-supplier\\edit-supplier.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { SupplierService } from 'src/app/service/supplier.service';\nimport { SupplierType } from 'src/app/shared/SupplierTypes';\nimport { SupplierListing } from 'src/app/shared/supplier-listing';\nimport { Supplier } from 'src/app/shared/supplier';\n\n\n@Component({\n  selector: 'app-edit-supplier',\n  templateUrl: './edit-supplier.component.html',\n  styleUrls: ['./edit-supplier.component.css']\n})\nexport class EditSupplierComponent {\n\n  selectedSupplierType: SupplierType | null = null;\n\n  supplierTypesData:SupplierType[]=[]\n  \n  constructor(\n    private supplierservice:SupplierService, \n    private router : Router , \n    private activated:ActivatedRoute,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar) { }\n\n    editSupplier: SupplierListing = new Supplier();\n\n    updateSupplierForm: FormGroup = new FormGroup({\n      name: new FormControl('',[Validators.required]),\n      selectedSupplierType: new FormControl('',[Validators.required]),\n      email_Address: new FormControl('',[Validators.required]),\n      phoneNumber: new FormControl('',[Validators.required]),\n      physical_Address: new FormControl('',[Validators.required])\n    })\n\n    ngOnInit(): void {\n      this.activated.params.subscribe(params => {\n        this.supplierservice.GetSupplier(params['id']).subscribe(res => {\n          this.editSupplier = res as Supplier;\n    \n          // Find the selected Supplier Type in the supplierTypesData array\n          this.selectedSupplierType = this.supplierTypesData.find(\n            type => type.name === this.editSupplier.supplierTypeName\n          ) || null; // Set to null if no match is found\n    \n          this.updateSupplierForm.controls['name'].setValue(this.editSupplier.name);\n          this.updateSupplierForm.controls['email_Address'].setValue(this.editSupplier.email_Address);\n          this.updateSupplierForm.controls['phoneNumber'].setValue(this.editSupplier.phoneNumber);\n          this.updateSupplierForm.controls['physical_Address'].setValue(this.editSupplier.physical_Address);\n        });\n      });\n    }\n    \n\n  \n    cancel(){\n      this.router.navigate(['/view-suppliers'])\n    }\n    GetAllSupplierTypes(){\n      this.supplierservice.GetAllSupplierTypes().subscribe(result => {\n       let supplierTypeList:any[] = result\n       supplierTypeList.forEach((element) => {\n         this.supplierTypesData.push(element)\n       });\n     });\n   }\n  \n    updateSupplier()\n    {\n      let supplier = new Supplier();\n      supplier.name = this.updateSupplierForm.value.name;\n      supplier.supplierType = this.updateSupplierForm.value.supplierType;\n      supplier.email_Address = this.updateSupplierForm.value.email_Address;\n      supplier.phoneNumber = this.updateSupplierForm.value.phoneNumber;\n      supplier.physical_Address = this.updateSupplierForm.value.physical_Address;\n  \n  \n     this.supplierservice.EditSupplier(this.editSupplier.supplierId,supplier).subscribe((response:any) => {\n  \n      if(response.statusCode == 200)\n      {\n        this.router.navigate(['./view-suppliers'])\n        window.location.reload();\n      }\n      else\n      {\n  \n      }\n     });\n  \n     this.showSuccessMessage('Supplier Information updated successfully!');\n  \n    }\n    showSuccessMessage(message: string): void {\n      const snackBarRef: MatSnackBarRef<any> = this.snackBar.open(message, 'Ok', {\n        duration: 3000, // Duration in milliseconds\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <app-navbar></app-navbar>\n        </div>\n    <div class=\"col-md-10 order-md-1\">\n  <h4 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px;\">Edit Employee</h4>\n  <hr>\n  <div class=\"container\">\n  <div class=\"row\">  \n  <form [formGroup]=\"updateSupplierForm\" class=\"form-horizontal\"  (ngSubmit)=\"updateSupplier()\">\n      <div class=\"form-group\">\n          <label class=\" col-sm-1\" style=\"font-weight: bold;\" for=\"name\">Name</label>\n          <div class=\"col-sm-6\">\n            <input class=\"form-control\" id=\"name\" placeholder=\"Enter Name\" [required]=\"true\" formControlName=\"name\">\n          </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"col-md-1\" style=\"font-weight: bold;\" for=\"supplierType\">Supplier Type</label>\n        <div class=\"col-md-6\">\n          <select class=\"form-control\" id=\"supplierType\" formControlName=\"supplierType\" [ngModel]=\"selectedSupplierType\">\n            <option *ngFor=\"let item of supplierTypesData\" [ngValue]=\"item\">{{ item.name }}</option>\n          </select>          \n      </div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"email_Address\">Email Address:</label>\n        <div class=\"col-sm-6\">\n          <textarea class=\"form-control\" type=\"text\" id=\"email_Address\" placeholder=\"Enter Address\" [required]=\"true\" formControlName=\"email_Address\"></textarea>\n        </div>\n    </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"phoneNumber\">Phone Number:</label>\n          <div class=\"col-sm-6\">\n            <textarea class=\"form-control\" type=\"text\" id=\"phoneNumber\" placeholder=\"Enter 10-digit number\" [required]=\"true\" formControlName=\"phoneNumber\"></textarea>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"physical_Address\">Physical Address:</label>\n          <div class=\"col-sm-6\">\n            <textarea class=\"form-control\" type=\"text\" id=\"physical_Address\" placeholder=\"Enter Address\" [required]=\"true\" formControlName=\"physical_Address\"></textarea>\n          </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-1 col-sm-6\">\n          <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!updateSupplierForm.valid\" class=\"btn btn-sm btn-success\">Confirm</button>\n          <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\n        </div>\n      </div>\n    </form>\n    </div>\n  </div> \n    </div>\n    </div>\n  </div>\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}