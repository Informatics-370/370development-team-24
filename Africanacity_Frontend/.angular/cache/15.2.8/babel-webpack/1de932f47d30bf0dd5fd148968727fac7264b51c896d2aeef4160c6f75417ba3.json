{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../shared/employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../navbar/navbar.component\";\nexport class AddEmployeeComponent {\n  constructor(employeeservice, router) {\n    this.employeeservice = employeeservice;\n    this.router = router;\n    this.employeeForm = new FormGroup({\n      surname: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required]),\n      email_Address: new FormControl('', [Validators.required]),\n      physical_Address: new FormControl('', [Validators.required]),\n      phoneNumber: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {}\n  cancel() {\n    this.router.navigate(['/home']);\n  }\n  onSubmit() {\n    let employee = new Employee();\n    employee.surname = this.employeeForm.value.surname;\n    employee.firstName = this.employeeForm.value.firstName;\n    employee.email_Address = this.employeeForm.value.email_Address;\n    employee.physical_Address = this.employeeForm.value.physical_Address;\n    employee.phoneNumber = this.employeeForm.value.phoneNumber;\n    this.employeeservice.AddEmployee(employee).subscribe(result => {\n      this.router.navigate(['/view-employees']);\n    });\n    this.employeeservice.AddEmployee(employee).subscribe(res => {\n      if (res.statusCode == 200) {\n        this.router.navigate(['/']);\n      } else {\n        alert(res.message);\n      }\n    });\n  }\n}\nAddEmployeeComponent.ɵfac = function AddEmployeeComponent_Factory(t) {\n  return new (t || AddEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEmployeeComponent,\n  selectors: [[\"app-add-employee\"]],\n  decls: 43,\n  vars: 7,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"surname\", 1, \"col-md-4\"], [1, \"col-md-8\"], [\"placeholder\", \"Enter Surname\", \"name\", \"surname\", \"formControlName\", \"surname\", 1, \"form-control\", 3, \"required\"], [\"for\", \"firstName\", 1, \"col-sm-1\"], [1, \"col-sm-6\"], [\"placeholder\", \"Enter First Name\", \"name\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"email_Address\", 1, \"col-sm-1\"], [\"type\", \"text\", \"placeholder\", \"xxxxx@gmail.com\", \"name\", \"email_Address\", \"formControlName\", \"email_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"physical_Address\", 1, \"col-sm-1\"], [\"type\", \"text\", \"id\", \"physical_Address\", \"placeholder\", \"Enter Address\", \"name\", \"physical_Address\", \"formControlName\", \"physical_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"phoneNumber\", 1, \"col-sm-2\"], [\"type\", \"text\", \"placeholder\", \"Enter 10-digit number\", \"name\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n  template: function AddEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\");\n      i0.ɵɵtext(6, \"Add Employee \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 1)(10, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AddEmployeeComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Surname:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"span\")(18, \"label\", 10);\n      i0.ɵɵtext(19, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 11);\n      i0.ɵɵelement(21, \"input\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 6)(23, \"label\", 13);\n      i0.ɵɵtext(24, \"Email Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 11);\n      i0.ɵɵelement(26, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 6)(28, \"label\", 15);\n      i0.ɵɵtext(29, \"Physical Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 11);\n      i0.ɵɵelement(31, \"input\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 6)(33, \"label\", 17);\n      i0.ɵɵtext(34, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 11);\n      i0.ɵɵelement(36, \"input\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 6)(38, \"div\", 19)(39, \"button\", 20);\n      i0.ɵɵtext(40, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function AddEmployeeComponent_Template_button_click_41_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(42, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.employeeForm.valid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i4.NavbarComponent],\n  styles: [\".form-group[_ngcontent-%COMP%] {\\r\\n    .label{\\r\\n        font-size: 100px;\\r\\n    }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vRW1wbG95ZWVzL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO1FBQ0ksZ0JBQWdCO0lBQ3BCO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1ncm91cCB7XHJcbiAgICAubGFiZWx7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMDBweDtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Employee","AddEmployeeComponent","constructor","employeeservice","router","surname","required","firstName","email_Address","physical_Address","phoneNumber","ngOnInit","cancel","navigate","onSubmit","employee","employeeForm","value","AddEmployee","subscribe","result","res","statusCode","alert","message","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\add-employee\\add-employee.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\add-employee\\add-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EmployeeService } from '../services/employee.service';\nimport { Employee } from '../shared/employee';\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.css']\n})\nexport class AddEmployeeComponent implements OnInit {\n\n   constructor(private employeeservice: EmployeeService, private router: Router) { }\n\n     employeeForm: FormGroup = new FormGroup({\n       surname: new FormControl('',[Validators.required]),\n       firstName: new FormControl('',[Validators.required]),\n       email_Address: new FormControl('',[Validators.required]),\n       physical_Address: new FormControl('',[Validators.required]),\n       phoneNumber: new FormControl('',[Validators.required])\n    \n     })\n\n    ngOnInit(): void {\n    \n    }\n\n    cancel(){\n      this.router.navigate(['/home'])\n    }\n  \n       onSubmit(){\n\n        let employee = new Employee();\n        employee.surname = this.employeeForm.value.surname;\n        employee.firstName = this.employeeForm.value.firstName;\n        employee.email_Address = this.employeeForm.value.email_Address;\n        employee.physical_Address = this.employeeForm.value.physical_Address;\n        employee.phoneNumber = this.employeeForm.value.phoneNumber;\n            this.employeeservice.AddEmployee(employee).subscribe(result => {\n                  this.router.navigate(['/view-employees'])\n            })\n    \n     this.employeeservice.AddEmployee(employee).subscribe((res:any) => {\n\n      if(res.statusCode == 200)\n      {\n        this.router.navigate(['/'])\n      }\n      else\n      {\n        alert(res.message);\n      }\n     });\n         }\n\n  \n    // employeeForm = new FormGroup(\n    //   {\n    //     surname: new FormControl(''),\n    //     firstName: new FormControl(''),\n    //     email_Address: new FormControl(''),\n    //     physical_Address: new FormControl(''),\n    //     phoneNumber: new FormControl('')\n    //   })\n  \n  \n    // ngOnInit(): void {\n    // }\n  \n    // cancel(){\n    //   this.router.navigate(['/home'])\n    // }\n  \n    //  onSubmit(){\n    //    this.epmloyeeservice.AddEmployee(this.employeeForm.value).subscribe(result => {\n    //          this.router.navigate(['/view-employee'])\n    //    })\n    //  }\n}\n","\n<div class=\"container-fluid\">\n  <div class=\"row\">\n      <div class=\"col-md-2\">\n          <app-navbar></app-navbar>\n      </div>\n  <div class=\"col-md-10 order-md-1\">\n<h4>Add Employee </h4>\n<hr>\n<div class=\"container\">\n<div class=\"row\">  \n<form [formGroup]=\"employeeForm\" class=\"form-horizontal\"  (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label class=\" col-md-4\" for=\"surname\">Surname:</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" placeholder=\"Enter Surname\" [required]=\"true\" name=\"surname\" formControlName=\"surname\">\n        </div>\n    </div>\n\n  \n    <div class=\"form-group\">\n      <span>\n        <label class=\"col-sm-1\" for=\"firstName\">First Name:</label>\n        <div class=\"col-sm-6\">\n          <input class=\"form-control\"  placeholder=\"Enter First Name\" [required]=\"true\" name=\"firstName\" formControlName=\"firstName\">\n        </div>\n      </span>\n    </div>\n   \n\n    <div class=\"form-group\">\n      <label class=\"col-sm-1\" for=\"email_Address\">Email Address:</label>\n      <div class=\"col-sm-6\">\n        <input class=\"form-control\" type=\"text\" placeholder=\"xxxxx@gmail.com\" [required]=\"true\" name=\"email_Address\" formControlName=\"email_Address\">\n      </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"col-sm-1\" for=\"physical_Address\">Physical Address:</label>\n    <div class=\"col-sm-6\">\n      <input class=\"form-control\" type=\"text\" id=\"physical_Address\" placeholder=\"Enter Address\" name=\"physical_Address\" [required]=\"true\" formControlName=\"physical_Address\">\n    </div>\n</div>\n\n    <div class=\"form-group\">\n        <label class=\"col-sm-2\" for=\"phoneNumber\">Phone Number:</label>\n        <div class=\"col-sm-6\">\n          <input class=\"form-control\" type=\"text\"  placeholder=\"Enter 10-digit number\" [required]=\"true\" name=\"phoneNumber\" formControlName=\"phoneNumber\">\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n      <div class=\"col-sm-offset-1 col-sm-6\">\n        <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!employeeForm.valid\" class=\"btn btn-sm btn-success\">Add</button>\n        <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\n      </div>\n    </div>\n  </form>\n  </div>\n</div> \n  </div>\n  </div>\n</div>\n\n\n\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}