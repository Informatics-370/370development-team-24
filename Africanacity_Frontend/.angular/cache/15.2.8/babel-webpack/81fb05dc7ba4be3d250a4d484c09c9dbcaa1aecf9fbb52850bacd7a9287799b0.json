{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ViewInventorytypesComponent = class ViewInventorytypesComponent {\n  constructor(inventoryservice, snackBar, httpClient, router) {\n    this.inventoryservice = inventoryservice;\n    this.snackBar = snackBar;\n    this.httpClient = httpClient;\n    this.router = router;\n    this.inventorytypes = [];\n    this.filteredInventoryTypes = [];\n  }\n  deleteItem() {\n    const confirmationSnackBar = this.snackBar.open('Are you sure you want to delete this inventory type?', 'Delete, Cancel', {\n      duration: 5000 // Display duration in milliseconds\n    });\n    //  cancel(){\n    //    this.router.navigate(['/home'])\n    //  }\n    confirmationSnackBar.onAction().subscribe(() => {\n      // Perform the deletion action here\n      this.deleteItemFromServer();\n      window.location.reload();\n    });\n  }\n  deleteItemFromServer() {\n    this.DeleteInventoryType;\n  }\n  ngOnInit() {\n    this.GetAllInventoryTypes();\n    console.log(this.inventorytypes);\n    this.filteredInventoryTypes = this.inventorytypes;\n    console.log(this.filteredInventoryTypes);\n  }\n  GetAllInventoryTypes() {\n    this.inventoryservice.GetAllInventoryItems().subscribe(result => {\n      let inventoryTypeList = result;\n      inventoryTypeList.forEach(element => {\n        this.inventorytypes.push(element);\n      });\n    });\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value.toLowerCase();\n    this.filteredInventoryTypes = this.inventorytypes.filter(inve => {\n      const column2Value = supplier.supplierName.toLowerCase() || supplier.supplierName.toUpperCase();\n      const column3Value = supplier.supplierTypeName.toLowerCase();\n      return column2Value.includes(filterValue) || column3Value.includes(filterValue);\n    });\n  }\n  DeleteSupplier(supplierId) {\n    this.supplierservice.DeleteSupplier(supplierId).subscribe(result => {\n      this.deleteItem();\n    });\n  }\n};\nViewInventorytypesComponent = __decorate([Component({\n  selector: 'app-view-inventorytypes',\n  templateUrl: './view-inventorytypes.component.html',\n  styleUrls: ['./view-inventorytypes.component.css']\n})], ViewInventorytypesComponent);\nexport { ViewInventorytypesComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,2BAA2B,GAAjC,MAAMA,2BAA2B;EAKtCC,YAAoBC,gBAAkC,EAAUC,QAAqB,EAAUC,UAAsB,EAAUC,MAAc;IAAzH,qBAAgB,GAAhBH,gBAAgB;IAA4B,aAAQ,GAARC,QAAQ;IAAuB,eAAU,GAAVC,UAAU;IAAsB,WAAM,GAANC,MAAM;IAHrI,mBAAc,GAAoB,EAAE;IACpC,2BAAsB,GAAoB,EAAE;EAEmG;EAE/IC,UAAU;IACR,MAAMC,oBAAoB,GAAG,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC,sDAAsD,EAAE,gBAAgB,EAAC;MACvHC,QAAQ,EAAE,IAAI,CAAE;KAEjB,CAAC;IAGF;IACA;IACA;IAGAF,oBAAoB,CAACG,QAAQ,EAAE,CAACC,SAAS,CAAC,MAAK;MAC7C;MACA,IAAI,CAACC,oBAAoB,EAAE;MAC3BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEFH,oBAAoB;IAClB,IAAI,CAACI,mBAAmB;EAC1B;EAEEC,QAAQ;IACN,IAAI,CAACC,oBAAoB,EAAE;IAC3BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,cAAc,CAAC;IAEhC,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAACD,cAAc;IACjDF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,sBAAsB,CAAC;EAE1C;EAEAJ,oBAAoB;IAElB,IAAI,CAAChB,gBAAgB,CAACqB,oBAAoB,EAAE,CAACZ,SAAS,CAACa,MAAM,IAAG;MAC9D,IAAIC,iBAAiB,GAASD,MAAM;MACpCC,iBAAiB,CAACC,OAAO,CAAEC,OAAO,IAAI;QACpC,IAAI,CAACN,cAAc,CAACO,IAAI,CAACD,OAAO,CAAC;MAEnC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAE,WAAW,CAACC,KAAY;IACtB,MAAMC,WAAW,GAAID,KAAK,CAACE,MAA2B,CAACC,KAAK,CAACC,WAAW,EAAE;IAE1E,IAAI,CAACZ,sBAAsB,GAAG,IAAI,CAACD,cAAc,CAACc,MAAM,CAACC,IAAI,IAAG;MAC9D,MAAMC,YAAY,GAAGC,QAAQ,CAACC,YAAY,CAACL,WAAW,EAAE,IAAII,QAAQ,CAACC,YAAY,CAACC,WAAW,EAAE;MAC/F,MAAMC,YAAY,GAAGH,QAAQ,CAACI,gBAAgB,CAACR,WAAW,EAAE;MAE5D,OAAOG,YAAY,CAACM,QAAQ,CAACZ,WAAW,CAAC,IAAIU,YAAY,CAACE,QAAQ,CAACZ,WAAW,CAAC;IACjF,CAAC,CAAC;EACJ;EAGAa,cAAc,CAACC,UAAkB;IAC/B,IAAI,CAACC,eAAe,CAACF,cAAc,CAACC,UAAU,CAAC,CAAClC,SAAS,CAACa,MAAM,IAAG;MACjE,IAAI,CAAClB,UAAU,EAAE;IACjB,CAAC,CAAC;EACJ;CAGH;AArEYN,2BAA2B,eALvCD,SAAS,CAAC;EACTgD,QAAQ,EAAE,yBAAyB;EACnCC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,GACWjD,2BAA2B,CAqEvC;SArEYA,2BAA2B","names":["Component","ViewInventorytypesComponent","constructor","inventoryservice","snackBar","httpClient","router","deleteItem","confirmationSnackBar","open","duration","onAction","subscribe","deleteItemFromServer","window","location","reload","DeleteInventoryType","ngOnInit","GetAllInventoryTypes","console","log","inventorytypes","filteredInventoryTypes","GetAllInventoryItems","result","inventoryTypeList","forEach","element","push","applyFilter","event","filterValue","target","value","toLowerCase","filter","inve","column2Value","supplier","supplierName","toUpperCase","column3Value","supplierTypeName","includes","DeleteSupplier","supplierId","supplierservice","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Types\\view-inventorytypes\\view-inventorytypes.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryType } from 'src/app/shared/inventorytype';\n\n@Component({\n  selector: 'app-view-inventorytypes',\n  templateUrl: './view-inventorytypes.component.html',\n  styleUrls: ['./view-inventorytypes.component.css']\n})\nexport class ViewInventorytypesComponent {\n\n  inventorytypes: InventoryType[] = []\n  filteredInventoryTypes: InventoryType[] = [];\n  \n  constructor(private inventoryservice: InventoryService, private snackBar: MatSnackBar, private httpClient: HttpClient, private router: Router){}\n\n  deleteItem(): void {\n    const confirmationSnackBar = this.snackBar.open('Are you sure you want to delete this inventory type?', 'Delete, Cancel',{\n      duration: 5000, // Display duration in milliseconds\n\n    });\n\n    \n    //  cancel(){\n    //    this.router.navigate(['/home'])\n    //  }\n  \n\n    confirmationSnackBar.onAction().subscribe(() => {\n      // Perform the deletion action here\n      this.deleteItemFromServer();\n      window.location.reload();\n    });\n  }\n\ndeleteItemFromServer(): void {\n  this.DeleteInventoryType;\n}\n\n  ngOnInit(): void {\n    this.GetAllInventoryTypes()\n    console.log(this.inventorytypes)\n\n    this.filteredInventoryTypes = this.inventorytypes\n    console.log(this.filteredInventoryTypes)\n\n  }\n\n  GetAllInventoryTypes()\n  {\n    this.inventoryservice.GetAllInventoryItems().subscribe(result => {\n      let inventoryTypeList:any[] = result\n      inventoryTypeList.forEach((element) => {\n        this.inventorytypes.push(element)\n        \n      });\n    })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value.toLowerCase();\n  \n    this.filteredInventoryTypes = this.inventorytypes.filter(inve => {\n      const column2Value = supplier.supplierName.toLowerCase() || supplier.supplierName.toUpperCase();\n      const column3Value = supplier.supplierTypeName.toLowerCase();\n  \n      return column2Value.includes(filterValue) || column3Value.includes(filterValue);\n    });\n  }\n\n\n  DeleteSupplier(supplierId: Number){\n    this.supplierservice.DeleteSupplier(supplierId).subscribe(result => {\n      this.deleteItem();\n      });\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}