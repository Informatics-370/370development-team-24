{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { InventoryType } from 'src/app/shared/inventorytype';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inventory.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nexport class AddInventorytypesComponent {\n  constructor(inventoryservice, router, activated, snackBar) {\n    this.inventoryservice = inventoryservice;\n    this.router = router;\n    this.activated = activated;\n    this.snackBar = snackBar;\n    this.inventorytypes = [];\n    this.inventoryTypeForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {}\n  cancel() {\n    this.router.navigate(['/view-inventorytypes']);\n  }\n  onSubmit() {\n    let inventorytype = new InventoryType();\n    inventorytype.name = this.inventoryTypeForm.value.name;\n    inventorytype.description = this.inventoryTypeForm.value.description;\n    this.inventoryservice.AddInventoryType(inventorytype).subscribe(result => {\n      this.router.navigate(['/view-inventorytypes']);\n    });\n    this.showSuccessMessage('Inventory Type Added successfully');\n  }\n  // Success notification\n  showSuccessMessage(message) {\n    const snackBarRef = this.snackBar.open(message, 'Ok', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n}\nAddInventorytypesComponent.ɵfac = function AddInventorytypesComponent_Factory(t) {\n  return new (t || AddInventorytypesComponent)(i0.ɵɵdirectiveInject(i1.InventoryService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n};\nAddInventorytypesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddInventorytypesComponent,\n  selectors: [[\"app-add-inventorytypes\"]],\n  decls: 2,\n  vars: 0,\n  template: function AddInventorytypesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"add-inventorytypes works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAInE,SAASC,aAAa,QAAQ,8BAA8B;;;;;AAO5D,OAAM,MAAOC,0BAA0B;EAIrCC,YAAoBC,gBAAkC,EAAUC,MAAc,EACpEC,SAAyB,EACzBC,QAAqB;IAFX,qBAAgB,GAAhBH,gBAAgB;IAA4B,WAAM,GAANC,MAAM;IAC5D,cAAS,GAATC,SAAS;IACT,aAAQ,GAARC,QAAQ;IAJlB,mBAAc,GAAmB,EAAE;IAMjC,sBAAiB,GAAc,IAAIR,SAAS,CAAC;MAC3CS,IAAI,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACS,QAAQ,CAAC,CAAC;MAC/CC,WAAW,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACS,QAAQ,CAAC;KACrD,CAAC;EAL6B;EAO/BE,QAAQ,IACT;EAEAC,MAAM;IACJ,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC;EAChD;EAEAC,QAAQ;IAEN,IAAIC,aAAa,GAAG,IAAId,aAAa,EAAE;IACvCc,aAAa,CAACP,IAAI,GAAG,IAAI,CAACQ,iBAAiB,CAACC,KAAK,CAACT,IAAI;IACtDO,aAAa,CAACL,WAAW,GAAG,IAAI,CAACM,iBAAiB,CAACC,KAAK,CAACP,WAAW;IAEnE,IAAI,CAACN,gBAAgB,CAACc,gBAAgB,CAACH,aAAa,CAAC,CAACI,SAAS,CAACC,MAAM,IAAG;MACxE,IAAI,CAACf,MAAM,CAACQ,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEF,IAAI,CAACQ,kBAAkB,CAAC,mCAAmC,CAAC;EAE/D;EACA;EACAA,kBAAkB,CAACC,OAAc;IAC/B,MAAMC,WAAW,GAAwB,IAAI,CAAChB,QAAQ,CAACiB,IAAI,CAACF,OAAO,EAAE,IAAI,EAAE;MACzEG,QAAQ,EAAE,IAAI;MACdC,kBAAkB,EAAE,QAAQ;MAC5BC,gBAAgB,EAAE;KACnB,CAAC;EACJ;;AAxCSzB,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA,0BAA0B;EAAA0B;EAAAC;EAAAC;EAAAC;IAAA;MCZvCC,yBAAG;MAAAA,yCAAyB;MAAAA,iBAAI","names":["FormControl","FormGroup","Validators","InventoryType","AddInventorytypesComponent","constructor","inventoryservice","router","activated","snackBar","name","required","description","ngOnInit","cancel","navigate","onSubmit","inventorytype","inventoryTypeForm","value","AddInventoryType","subscribe","result","showSuccessMessage","message","snackBarRef","open","duration","horizontalPosition","verticalPosition","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Types\\add-inventorytypes\\add-inventorytypes.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Types\\add-inventorytypes\\add-inventorytypes.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryType } from 'src/app/shared/inventorytype';\n\n@Component({\n  selector: 'app-add-inventorytypes',\n  templateUrl: './add-inventorytypes.component.html',\n  styleUrls: ['./add-inventorytypes.component.css']\n})\nexport class AddInventorytypesComponent {\n\n  inventorytypes:InventoryType[] = []\n\n  constructor(private inventoryservice: InventoryService, private router: Router, \n    private activated: ActivatedRoute,\n    private snackBar: MatSnackBar) {}\n\n    inventoryTypeForm: FormGroup = new FormGroup({\n      name: new FormControl('',[Validators.required]),\n      description: new FormControl('',[Validators.required])\n     })\n\n     ngOnInit(): void {\n    }\n  \n    cancel(){\n      this.router.navigate(['/view-inventorytypes'])\n    }\n  \n    onSubmit(){\n\n      let inventorytype = new InventoryType();\n      inventorytype.name = this.inventoryTypeForm.value.name;\n      inventorytype.description = this.inventoryTypeForm.value.description;\n     \n       this.inventoryservice.AddInventoryType(inventorytype).subscribe(result => {\n        this.router.navigate(['/view-inventorytypes'])\n       });\n\n       this.showSuccessMessage('Inventory Type Added successfully');\n\n    }\n    // Success notification\n    showSuccessMessage(message:string) : void {\n      const snackBarRef: MatSnackBarRef<any> = this.snackBar.open(message, 'Ok', {\n        duration: 3000, // Duration in milliseconds\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n\n}\n","<p>add-inventorytypes works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}