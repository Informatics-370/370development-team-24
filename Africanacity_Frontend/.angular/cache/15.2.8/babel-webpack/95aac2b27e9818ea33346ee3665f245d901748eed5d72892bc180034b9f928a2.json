{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/data.Service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/snack-bar\";\nconst _c0 = function () {\n  return [\"../update-password\"];\n};\nconst _c1 = function () {\n  return [\"../register\"];\n};\nfunction LoginComponent_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 4)(1, \"mat-card-header\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Log in\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"form\", 5)(5, \"mat-card-content\")(6, \"mat-form-field\", 6)(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"mat-form-field\", 6)(12, \"mat-label\");\n    i0.ɵɵtext(13, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 8);\n    i0.ɵɵelementStart(15, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function LoginComponent_mat_card_1_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.hide = !ctx_r2.hide);\n    });\n    i0.ɵɵelementStart(16, \"mat-icon\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(18, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginComponent_mat_card_1_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.LoginUser());\n    });\n    i0.ɵɵtext(19, \"Log in\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"br\")(21, \"br\");\n    i0.ɵɵelementStart(22, \"div\");\n    i0.ɵɵtext(23, \"Change Password? \");\n    i0.ɵɵelementStart(24, \"a\", 3);\n    i0.ɵɵtext(25, \"here\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(26, \"br\");\n    i0.ɵɵelementStart(27, \"div\");\n    i0.ɵɵtext(28, \"Don't have an account? Register \");\n    i0.ɵɵelementStart(29, \"a\", 3);\n    i0.ɵɵtext(30, \"here\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginFormGroup);\n    i0.ɵɵadvance(11);\n    i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx_r0.hide);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.hide ? \"visibility_off\" : \"visibility\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c1));\n  }\n}\nfunction LoginComponent_mat_progress_spinner_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 11);\n  }\n}\nconst _c2 = function () {\n  return [\"../forgot-password\"];\n};\nexport class LoginComponent {\n  constructor(router, dataService, fb, snackBar) {\n    this.router = router;\n    this.dataService = dataService;\n    this.fb = fb;\n    this.snackBar = snackBar;\n    this.hide = true;\n    this.loginFormGroup = this.fb.group({\n      UserName: ['', [Validators.required, Validators.email]],\n      Password: ['', Validators.required]\n    });\n    this.isLoading = false;\n  }\n  ngOnInit() {}\n  LoginUser() {\n    if (this.loginFormGroup.valid) {\n      this.isLoading = true;\n      this.dataService.LoginUser(this.loginFormGroup.value).subscribe(result => {\n        localStorage.setItem('User', JSON.stringify(result));\n        this.loginFormGroup.reset();\n        this.router.navigate(['otp']).then(navigated => {\n          if (navigated) {\n            this.snackBar.open(`The OTP has been sent to your email address`, 'X', {\n              duration: 10000\n            });\n          }\n        });\n      }, response => {\n        this.isLoading = false;\n        if (response.status === 404) {\n          this.snackBar.open(response.error, 'X', {\n            duration: 5000\n          });\n        }\n        if (response.status === 500) {\n          this.snackBar.open(response.error, 'X', {\n            duration: 5000\n          });\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 6,\n  vars: 4,\n  consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"login-wrapper\", \"center\"], [\"class\", \"box\", 4, \"ngIf\"], [\"mode\", \"indeterminate\", \"value\", \"50\", 4, \"ngIf\"], [3, \"routerLink\"], [1, \"box\"], [1, \"form\", 3, \"formGroup\"], [1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Enter the User's Email address\", \"formControlName\", \"UserName\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Enter the User's Password\", \"formControlName\", \"Password\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 1, \"btn-block\", 3, \"click\"], [\"mode\", \"indeterminate\", \"value\", \"50\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, LoginComponent_mat_card_1_Template, 31, 8, \"mat-card\", 1);\n      i0.ɵɵtemplate(2, LoginComponent_mat_progress_spinner_2_Template, 1, 0, \"mat-progress-spinner\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\")(4, \"a\", 3);\n      i0.ɵɵtext(5, \"ForgotPassword? \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c2));\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginComponent","constructor","router","dataService","fb","snackBar","group","UserName","required","email","Password","ngOnInit","LoginUser","loginFormGroup","valid","isLoading","value","subscribe","result","localStorage","setItem","JSON","stringify","reset","navigate","then","navigated","open","duration","response","status","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\login\\login.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../service/data.Service';\r\nimport { User } from '../shared/user';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  hide = true;\r\n  loginFormGroup: FormGroup = this.fb.group({\r\n    UserName: ['', [Validators.required, Validators.email]],\r\n    Password: ['', Validators.required],\r\n\r\n  })\r\n\r\n  isLoading:boolean = false\r\n\r\n  constructor(private router: Router, \r\n    private dataService: DataService, \r\n    private fb: FormBuilder,  \r\n    private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  LoginUser(){\r\n    if(this.loginFormGroup.valid)\r\n    {\r\n      this.isLoading = true\r\n\r\n      this.dataService.LoginUser(this.loginFormGroup.value).subscribe(result => {\r\n        localStorage.setItem('User', JSON.stringify(result))\r\n        this.loginFormGroup.reset();\r\n        this.router.navigate(['otp']).then((navigated: boolean) => {\r\n          if(navigated) {\r\n            this.snackBar.open(`The OTP has been sent to your email address`, 'X', {duration: 10000});\r\n          }\r\n       });\r\n      }, (response: HttpErrorResponse) => {\r\n        this.isLoading = false\r\n        if (response.status === 404) {\r\n          this.snackBar.open(response.error, 'X', {duration: 5000});\r\n        }\r\n        if (response.status === 500){\r\n          this.snackBar.open(response.error, 'X', {duration: 5000});\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n"," <div class=\"login-wrapper center\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-card class=\"box\" *ngIf=\"!isLoading\">\r\n      <mat-card-header>\r\n        <mat-card-title>Log in</mat-card-title>\r\n      </mat-card-header>\r\n      <form class=\"form\" [formGroup]=\"loginFormGroup\">\r\n        <mat-card-content>\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-label>Username</mat-label>\r\n            <input matInput placeholder=\"Enter the User's Email address\" formControlName=\"UserName\">\r\n          </mat-form-field><br>\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-label>Password</mat-label>\r\n            <input type=\"password\" matInput placeholder=\"Enter the User's Password\" formControlName=\"Password\">\r\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </button>\r\n          </mat-form-field> \r\n        </mat-card-content>\r\n        <button mat-stroked-button color=\"primary\" class=\"btn-block\" (click)=\"LoginUser()\">Log in</button><br>\r\n        \r\n        \r\n        <br>\r\n\r\n        \r\n        <div>Change Password? <a [routerLink]=\"['../update-password']\">here</a></div><br>\r\n        <div>Don't have an account? Register <a [routerLink]=\"['../register']\">here</a></div>\r\n      </form>\r\n    </mat-card>\r\n    <mat-progress-spinner mode=\"indeterminate\" value=\"50\" *ngIf=\"isLoading\">\r\n    </mat-progress-spinner>\r\n  </div> \r\n\r\n\r\n  <div><a [routerLink]=\"['../forgot-password']\">ForgotPassword? </a></div>\r\n \r\n\r\n\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}