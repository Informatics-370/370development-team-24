{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inventory.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../../../../navbar/navbar.component\";\nfunction AddInventoryitemComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1.inventory_TypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.name);\n  }\n}\nexport class AddInventoryitemComponent {\n  constructor(inventoryservice, router, dialog, snackBar) {\n    this.inventoryservice = inventoryservice;\n    this.router = router;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.inventoryTypesData = [];\n    this.inventoryItemForm = new FormGroup({\n      itemName: new FormControl('', [Validators.required]),\n      inventoryType: new FormControl([Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      quantity: new FormControl([Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.GetAllInventoryTypes();\n  }\n  cancel() {\n    this.router.navigate(['/selected-inventorytype']);\n  }\n  incrementQuantity() {\n    const quantityControl = this.inventoryItemForm.get('quantity');\n    quantityControl?.setValue((quantityControl.value ?? 0) + 1);\n  }\n  decrementQuantity() {\n    const quantityControl = this.inventoryItemForm.get('quantity');\n    const currentValue = quantityControl?.value;\n    if (currentValue && currentValue > 0) {\n      quantityControl?.setValue(currentValue - 1);\n    }\n  }\n  GetAllInventoryTypes() {\n    this.inventoryservice.GetAllInventoryTypes().subscribe(result => {\n      let inventoryTypeList = result;\n      inventoryTypeList.forEach(element => {\n        this.inventoryTypesData.push(element);\n      });\n    });\n  }\n  onSubmit() {\n    if (this.inventoryItemForm.invalid) {\n      return;\n    }\n    let inventoryitem = new InventoryItem();\n    inventoryitem.itemName = this.inventoryItemForm.value.itemName;\n    inventoryitem.inventoryType = this.inventoryItemForm.value.inventoryType;\n    inventoryitem.description = this.inventoryItemForm.value.description;\n    this.inventoryservice.AddInventoryItem(inventoryitem).subscribe(result => {\n      this.router.navigate(['/view-inventoryitems/:typeId']);\n    });\n    this.snackBar.open(this.inventoryItemForm.get('itemName').value + ` created successfully`, 'X', {\n      duration: 5000\n    });\n  }\n}\nAddInventoryitemComponent.ɵfac = function AddInventoryitemComponent_Factory(t) {\n  return new (t || AddInventoryitemComponent)(i0.ɵɵdirectiveInject(i1.InventoryService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n};\nAddInventoryitemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddInventoryitemComponent,\n  selectors: [[\"app-add-inventoryitem\"]],\n  decls: 45,\n  vars: 5,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-2\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"itemName\", 1, \"col-md-1\", 2, \"font-weight\", \"bold\"], [1, \"col-md-6\"], [\"placeholder\", \"Enter Inventory Name\", \"name\", \"itemName\", \"formControlName\", \"itemName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"inventoryType\", 1, \"col-md-1\", 2, \"font-weight\", \"bold\"], [\"id\", \"inventoryType\", \"formControlName\", \"inventoryType\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"description\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"placeholder\", \"Description\", \"name\", \"description\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"input-group\"], [\"type\", \"number\", \"formControlName\", \"quantity\", 1, \"form-control\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [3, \"value\"]],\n  template: function AddInventoryitemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\", 4);\n      i0.ɵɵtext(6, \"Add Supplier\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function AddInventoryitemComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Inventory Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 9)(20, \"select\", 12);\n      i0.ɵɵtemplate(21, AddInventoryitemComponent_option_21_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"span\")(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 15);\n      i0.ɵɵelement(27, \"input\", 16);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"div\", 7)(29, \"label\", 17);\n      i0.ɵɵtext(30, \"Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 15)(32, \"div\", 18);\n      i0.ɵɵelement(33, \"input\", 19);\n      i0.ɵɵelementStart(34, \"div\", 20)(35, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function AddInventoryitemComponent_Template_button_click_35_listener() {\n        return ctx.incrementQuantity();\n      });\n      i0.ɵɵtext(36, \"+\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function AddInventoryitemComponent_Template_button_click_37_listener() {\n        return ctx.decrementQuantity();\n      });\n      i0.ɵɵtext(38, \"-\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(39, \"div\", 7)(40, \"div\", 22)(41, \"button\", 23);\n      i0.ɵɵtext(42, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function AddInventoryitemComponent_Template_button_click_43_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(44, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.inventoryItemForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.inventoryTypesData);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"disabled\", !ctx.inventoryItemForm.valid);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.FormGroupDirective, i6.FormControlName, i7.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","InventoryItem","i0","AddInventoryitemComponent","constructor","inventoryservice","router","dialog","snackBar","itemName","required","inventoryType","description","quantity","ngOnInit","GetAllInventoryTypes","cancel","navigate","incrementQuantity","quantityControl","inventoryItemForm","get","setValue","value","decrementQuantity","currentValue","subscribe","result","inventoryTypeList","forEach","element","inventoryTypesData","push","onSubmit","invalid","inventoryitem","AddInventoryItem","open","duration","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\add-inventoryitem\\add-inventoryitem.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\add-inventoryitem\\add-inventoryitem.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport { InventoryType } from 'src/app/shared/inventorytype';\n\n@Component({\n  selector: 'app-add-inventoryitem',\n  templateUrl: './add-inventoryitem.component.html',\n  styleUrls: ['./add-inventoryitem.component.css']\n})\nexport class AddInventoryitemComponent {\n  inventoryTypesData:InventoryType[]=[]\n   toastContainer: any;\n\n   constructor(private  inventoryservice: InventoryService, private router: Router, private dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n   inventoryItemForm: FormGroup = new FormGroup({\n     itemName: new FormControl('',[Validators.required]),\n     inventoryType: new FormControl([Validators.required]),\n     description: new FormControl('',[Validators.required]),\n     quantity: new FormControl ([ Validators.required])\n   })\n\n   ngOnInit(): void {\n     this.GetAllInventoryTypes()\n   }\n\n   cancel(){\n     this.router.navigate(['/selected-inventorytype'])\n   }\n\n   incrementQuantity() {\n    const quantityControl = this.inventoryItemForm.get('quantity');\n    quantityControl?.setValue((quantityControl.value ?? 0) + 1);\n  }\n  \n  decrementQuantity() {\n    const quantityControl = this.inventoryItemForm.get('quantity');\n    const currentValue = quantityControl?.value;\n    if (currentValue && currentValue > 0) {\n      quantityControl?.setValue(currentValue - 1);\n    }\n  }\n  \n\n   GetAllInventoryTypes(){\n     this.inventoryservice.GetAllInventoryTypes().subscribe(result => {\n       let inventoryTypeList:any[] = result\n       inventoryTypeList.forEach((element) => {\n         this.inventoryTypesData.push(element)\n      });\n     });\n   }\n\n   onSubmit() {\n    if (this.inventoryItemForm.invalid) {\n      return;\n    }\n  \n    let inventoryitem = new InventoryItem();\n    inventoryitem.itemName = this.inventoryItemForm.value.itemName;\n    inventoryitem.inventoryType = this.inventoryItemForm.value.inventoryType;\n    inventoryitem.description = this.inventoryItemForm.value.description;\n    \n  \n    this.inventoryservice.AddInventoryItem(inventoryitem).subscribe(result => {\n      this.router.navigate(['/view-inventoryitems/:typeId'])\n});\n  \n    this.snackBar.open(\n      this.inventoryItemForm.get('itemName')!.value + ` created successfully`,\n      'X',\n      { duration: 5000 }\n    );\n  }\n  \n}\n","\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-2\">\n      <app-navbar></app-navbar>\n    </div>\n    <div class=\"col-md-10 order-md-2\">\n      <h4 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px;\">Add Supplier</h4>\n      <hr>\n      <div class=\"container\">\n        <div class=\"row\">\n          <form [formGroup]=\"inventoryItemForm\" class=\"form-horizontal\" (ngSubmit)=\"onSubmit()\">\n\n            <div class=\"form-group\">\n              <label class=\"col-md-1\" style=\"font-weight: bold;\" for=\"itemName\">Name:</label>\n              <div class=\"col-md-6\">\n                <input class=\"form-control\" placeholder=\"Enter Inventory Name\" [required]=\"true\" name=\"itemName\"\n                  formControlName=\"itemName\">\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <label class=\"col-md-1\" style=\"font-weight: bold;\" for=\"inventoryType\">Inventory Type</label>\n              <div class=\"col-md-6\">\n                <select class=\"form-control\" id=\"inventoryType\" formControlName=\"inventoryType\">\n                  <option *ngFor=\"let item of inventoryTypesData\" [value]=\"item.inventory_TypeId\">{{ item.name }}</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <span>\n                <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"description\">Description</label>\n                <div class=\"col-sm-6\">\n                  <input class=\"form-control\" placeholder=\"Description\" [required]=\"true\" name=\"description\"\n                    formControlName=\"description\">\n                </div>\n              </span>\n            </div>\n\n            <div class=\"form-group\">\n              <label class=\"col-sm-1\" style=\"font-weight: bold;\">Quantity</label>\n              <div class=\"col-sm-6\">\n                <div class=\"input-group\">\n                  <input type=\"number\" class=\"form-control\" formControlName=\"quantity\">\n                  <div class=\"input-group-append\">\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"incrementQuantity()\">+</button>\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"decrementQuantity()\">-</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <div class=\"col-sm-offset-1 col-sm-6\">\n                <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!inventoryItemForm.valid\"\n                  class=\"btn btn-sm btn-success\">Add</button>\n                <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}