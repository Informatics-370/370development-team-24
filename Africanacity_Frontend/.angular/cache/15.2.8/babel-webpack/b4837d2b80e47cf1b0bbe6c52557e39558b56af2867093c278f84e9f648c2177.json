{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SupplierService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = 'http://localhost:49991/api/';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        ContentType: 'application/json'\n      })\n    };\n  }\n  //Get All suppliers\n  GetAllSuppliers() {\n    return this.httpClient.get(`${this.apiUrl}Supplier/GetAllSuppliers`).pipe(map(result => result));\n  }\n  // Get Supplier Types\n  GetAllSupplierTypes() {\n    return this.httpClient.get(`${this.apiUrl}SupplierType/GetAllSupplierTypes`).pipe(map(result => result));\n  }\n  DeleteSupplier(supplierId) {\n    return this.httpClient.delete(`${this.apiUrl}Supplier/DeleteSupplier` + \"/\" + supplierId, this.httpOptions);\n  }\n  EditSupplier(supplierId, supplier) {\n    return this.httpClient.put(`${this.apiUrl}Employee/EditEmployee/${supplierId}`, supplier, this.httpOptions);\n  }\n}\nSupplierService.ɵfac = function SupplierService_Factory(t) {\n  return new (t || SupplierService)(i0.ɵɵinject(i1.HttpClient));\n};\nSupplierService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SupplierService,\n  factory: SupplierService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,GAAG,QAA6B,MAAM;;;AAM7C,OAAM,MAAOC,eAAe;EAU1BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAR9B,WAAM,GAAG,6BAA6B;IAEtC,gBAAW,GAAE;MACXC,OAAO,EAAE,IAAIL,WAAW,CAAC;QACvBM,WAAW,EAAE;OACd;KACF;EAGD;EACA;EACAC,eAAe;IACX,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,0BAA0B,CAAC,CACnEC,IAAI,CAACT,GAAG,CAACU,MAAM,IAAIA,MAAM,CAAC,CAAC;EAC9B;EAEF;EACAC,mBAAmB;IACf,OAAO,IAAI,CAACR,UAAU,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,kCAAkC,CAAC,CAC3EC,IAAI,CAACT,GAAG,CAACU,MAAM,IAAIA,MAAM,CAAC,CAAC;EAC9B;EAEAE,cAAc,CAACC,UAAkB;IAE/B,OAAO,IAAI,CAACV,UAAU,CAACW,MAAM,CAAS,GAAG,IAAI,CAACN,MAAM,yBAAyB,GAAG,GAAG,GAAGK,UAAU,EAAE,IAAI,CAACE,WAAW,CAAC;EACrH;EAEAC,YAAY,CAACH,UAAkB,EAAEI,QAAkB;IAEjD,OAAO,IAAI,CAACd,UAAU,CAACe,GAAG,CAAC,GAAG,IAAI,CAACV,MAAM,yBAAyBK,UAAU,EAAE,EAACI,QAAQ,EAAE,IAAI,CAACF,WAAW,CAAC;EAC5G;;AAhCSd,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAkB,SAAflB,eAAe;EAAAmB,YAFd;AAAM","names":["HttpHeaders","map","SupplierService","constructor","httpClient","headers","ContentType","GetAllSuppliers","get","apiUrl","pipe","result","GetAllSupplierTypes","DeleteSupplier","supplierId","delete","httpOptions","EditSupplier","supplier","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\service\\supplier.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, Subject } from 'rxjs';\r\nimport { Supplier } from '../shared/supplier';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class SupplierService {\r\n  \r\n    apiUrl = 'http://localhost:49991/api/'\r\n  \r\n    httpOptions ={\r\n      headers: new HttpHeaders({\r\n        ContentType: 'application/json'\r\n      })\r\n    }\r\n\r\n    constructor(private httpClient: HttpClient) { \r\n    }\r\n    //Get All suppliers\r\n    GetAllSuppliers(): Observable<any>{\r\n        return this.httpClient.get(`${this.apiUrl}Supplier/GetAllSuppliers`)\r\n        .pipe(map(result => result))\r\n      }\r\n\r\n    // Get Supplier Types\r\n    GetAllSupplierTypes(): Observable<any>{\r\n        return this.httpClient.get(`${this.apiUrl}SupplierType/GetAllSupplierTypes`)\r\n        .pipe(map(result => result))\r\n      }\r\n\r\n      DeleteSupplier(supplierId: Number)\r\n      {\r\n        return this.httpClient.delete<string>(`${this.apiUrl}Supplier/DeleteSupplier` + \"/\" + supplierId, this.httpOptions)\r\n      }\r\n\r\n      EditSupplier(supplierId: number, supplier: Supplier)\r\n      {\r\n        return this.httpClient.put(`${this.apiUrl}Employee/EditEmployee/${supplierId}`,supplier, this.httpOptions)\r\n      }\r\n   \r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}