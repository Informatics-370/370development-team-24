{"ast":null,"code":"import { InventoryItem } from 'src/app/shared/inventoryitem';\nimport { saveAs } from 'file-saver'; // Import file-saver for saving the PDF\n// Import jsPDF\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inventory.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../../../navbar/navbar.component\";\nconst _c0 = function (a0) {\n  return {\n    \"row-ordered\": a0\n  };\n};\nfunction ChecklistComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 18)(1, \"td\", 19)(2, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function ChecklistComponent_tr_28_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r2.isChecked = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 21);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 22)(7, \"i\", 23);\n    i0.ɵɵlistener(\"click\", function ChecklistComponent_tr_28_Template_i_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.orderItem(item_r2));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\", 22);\n    i0.ɵɵelement(9, \"i\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\", 22)(11, \"i\", 25);\n    i0.ɵɵlistener(\"click\", function ChecklistComponent_tr_28_Template_i_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.queryItem(item_r2));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, item_r2.ordered));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", item_r2.isChecked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r2.inventory_ItemId, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.itemName);\n  }\n}\nexport class ChecklistComponent {\n  constructor(inventoryService, httpClient, snackBar) {\n    this.inventoryService = inventoryService;\n    this.httpClient = httpClient;\n    this.snackBar = snackBar;\n    this.checklistItems = [];\n    this.predefinedLevel = 5; // Predefined level for the quantity\n    this.item = new InventoryItem();\n  }\n  ngOnInit() {\n    this.checkInventory();\n  }\n  checkInventory() {\n    this.inventoryService.GetAllInventoryItems().subscribe(inventoryItems => {\n      for (let item of inventoryItems) {\n        if (item.quantity < this.predefinedLevel) {\n          this.addToChecklist(item);\n        }\n      }\n    });\n  }\n  addToChecklist(item) {\n    item.isChecked = false;\n    this.checklistItems.push(item);\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value.toLowerCase();\n    this.checklistItems = this.checklistItems.filter(item => {\n      const column2Value = item.itemName.toLowerCase() || item.itemName.toUpperCase();\n      return column2Value.includes(filterValue);\n    });\n  }\n  orderItem(item) {\n    item.ordered = !item.ordered;\n    this.showNotification(`Item ${item.itemName} is ${item.ordered ? 'ordered' : 'not ordered'}.`);\n  }\n  queryItem(item) {\n    // Implement the logic to query the item\n  }\n  receiveItem(item) {\n    // Implement the logic to mark the item as received\n  }\n  deleteItem(item) {\n    const index = this.checklistItems.findIndex(i => i.inventory_ItemId === item.inventory_ItemId);\n    if (index !== -1) {\n      this.checklistItems.splice(index, 1);\n      console.log(`Item ${item.itemName} is deleted.`);\n    }\n  }\n  showNotification(message) {\n    this.snackBar.open(message, 'Dismiss', {\n      duration: 3000,\n      horizontalPosition: 'right'\n    });\n  }\n  onCheckboxChange(item) {\n    if (item.isChecked) {\n      // Perform any action you want when the checkbox is checked\n      console.log(`Item ${item.itemName} is checked.`);\n    } else {\n      // Perform any action you want when the checkbox is unchecked\n      console.log(`Item ${item.itemName} is unchecked.`);\n    }\n  }\n  downloadPDF() {\n    const doc = new jsPDF();\n    const headers = [['ID', 'Name']];\n    // Map the checklistItems to generate the data array\n    const data = this.checklistItems.map(item => [item.inventory_ItemId, item.itemName]);\n    doc.setFontSize(12);\n    // Generate the table using autoTable\n    // startY is the initial position for the table\n    autoTable(doc, {\n      head: headers,\n      body: data,\n      startY: 20\n      // Other options for styling the table if needed\n    });\n    // Convert the PDF blob to a Base64 string\n    const pdfBlob = doc.output('blob');\n    // Create a file-saver Blob object\n    const file = new Blob([pdfBlob], {\n      type: 'application/pdf'\n    });\n    // Save the Blob to a file\n    saveAs(file, 'inventory_checklist.pdf');\n  }\n}\nChecklistComponent.ɵfac = function ChecklistComponent_Factory(t) {\n  return new (t || ChecklistComponent)(i0.ɵɵdirectiveInject(i1.InventoryService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n};\nChecklistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChecklistComponent,\n  selectors: [[\"app-checklist\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\", \"font-weight\", \"bolder\"], [1, \"input-group\"], [1, \"search-bar\"], [\"type\", \"text\", \"placeholder\", \"Search Columns\", 1, \"form-control\", 3, \"input\"], [1, \"addButton\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-download\", \"fa-lg\", \"icon\", 3, \"click\"], [1, \"table-container\"], [1, \"table\", \"table-container\", \"outlined-table\"], [\"pdfTable\", \"\"], [1, \"tableColor\"], [\"scope\", \"col\", 1, \"col-sm-1\"], [\"scope\", \"col\", 1, \"col-sm-7\"], [\"scope\", \"col\", 1, \"col-sm-1\", 2, \"text-align\", \"center\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [1, \"col-sm-1\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-sm-2\"], [1, \"icon-cell\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-shopping-cart\", \"fa-lg\", \"icon\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-check\", \"icon\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-question-circle\", \"fa-lg\", \"icon\", 3, \"click\"]],\n  template: function ChecklistComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h3\", 4);\n      i0.ɵɵtext(6, \"Inventory Item Checklist \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"input\", 7);\n      i0.ɵɵlistener(\"input\", function ChecklistComponent_Template_input_input_9_listener($event) {\n        return ctx.applyFilter($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"i\", 9);\n      i0.ɵɵlistener(\"click\", function ChecklistComponent_Template_i_click_11_listener() {\n        return ctx.downloadPDF();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"table\", 11, 12)(15, \"thead\", 13)(16, \"tr\")(17, \"th\", 14);\n      i0.ɵɵtext(18, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\", 15);\n      i0.ɵɵtext(20, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\", 16);\n      i0.ɵɵtext(22, \"Ordered\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\", 16);\n      i0.ɵɵtext(24, \"Recieved\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\", 16);\n      i0.ɵɵtext(26, \"Query\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"tbody\");\n      i0.ɵɵtemplate(28, ChecklistComponent_tr_28_Template, 12, 6, \"tr\", 17);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"ngForOf\", ctx.checklistItems);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgModel, i6.NavbarComponent],\n  styles: [\".heading[_ngcontent-%COMP%]{\\r\\n    \\r\\n    height: 50px;\\r\\n    text-align: center;\\r\\n    padding-top: 7px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\n\\r\\n.edit-form[_ngcontent-%COMP%]{\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.label[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 5px;\\r\\n    padding-bottom: 5px;\\r\\n} */\\r\\n\\r\\ntable[_ngcontent-%COMP%]{\\r\\n    padding-top: 60px;\\r\\n    padding-right: 1000px;\\r\\n}\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n    \\r\\n    background-color: rgba(250, 246, 246, 0.966);\\r\\n    border-radius: 8px;\\r\\n    border-color: black;\\r\\n}\\r\\n.input-group[_ngcontent-%COMP%]{\\r\\n    width: 200px;\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-child(odd) > td[_ngcontent-%COMP%], .table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-child(odd) > th[_ngcontent-%COMP%] {\\r\\n  background-color: rgb(255, 249, 249);\\r\\n  color: rgb(0, 0, 0);\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]{\\r\\n    border-radius: 50px;\\r\\n    border-color: black;\\r\\n}\\r\\n.table-striped[_ngcontent-%COMP%]{\\r\\n    padding-top: 200px;\\r\\n}\\r\\n.tableColor[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(165, 113, 207);\\r\\n}\\r\\n.outlined-table[_ngcontent-%COMP%]{\\r\\n    border: 1px solid #000; \\r\\n    border-collapse: collapse;\\r\\n\\r\\n}\\r\\n.input-group[_ngcontent-%COMP%]{\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.outlined-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .outlined-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\r\\n  border: 1px solid rgb(165, 113, 207);\\r\\n  padding: 10px;\\r\\n}\\r\\n.table-container[_ngcontent-%COMP%] {\\r\\n  margin-top: 20px;\\r\\n  padding-top: 60px; \\r\\n}\\r\\n.table-hover[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\r\\n    background-color: grey;\\r\\n  }\\r\\n  .icon[_ngcontent-%COMP%] {\\r\\n    font-size: 30px; \\r\\n  }\\r\\n\\r\\n  .input-group[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    margin-top: 50px;\\r\\n    width: 100%; \\r\\n  }\\r\\n  \\r\\n  .search-bar[_ngcontent-%COMP%] {\\r\\n    flex-grow: 1; \\r\\n    margin-right: 10px; \\r\\n  }\\r\\n  .icon-cell[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n  }\\r\\n  .row-ordered[_ngcontent-%COMP%] {\\r\\n    background-color: #59b60d; \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vSW52ZW50b3J5IE1hbmFnZW1lbnQvSW52ZW50b3J5IEl0ZW1zL2NoZWNrbGlzdC9jaGVja2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1DQUFtQztJQUNuQyxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQiw0Q0FBNEM7QUFDaEQ7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCLEVBQUU7OztJQUdFLGlCQUFpQjtJQUNqQixxQkFBcUI7QUFDekI7QUFDQTs7SUFFSSw0Q0FBNEM7SUFDNUMsa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksWUFBWTs7QUFFaEI7OztBQUdBOztFQUVFLG9DQUFvQztFQUNwQyxtQkFBbUI7QUFDckI7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxzQkFBc0I7SUFDdEIseUJBQXlCOztBQUU3QjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBOztFQUVFLG9DQUFvQztFQUNwQyxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUIsRUFBRSx5RUFBeUU7QUFDOUY7QUFDQTtJQUNJLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0UsZUFBZSxFQUFFLG1DQUFtQztFQUN0RDs7RUFFQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsOEJBQThCO0lBQzlCLGdCQUFnQjtJQUNoQixXQUFXLEVBQUUscUNBQXFDO0VBQ3BEOztFQUVBO0lBQ0UsWUFBWSxFQUFFLDREQUE0RDtJQUMxRSxrQkFBa0IsRUFBRSx1REFBdUQ7RUFDN0U7RUFDQTtJQUNFLGtCQUFrQjtFQUNwQjtFQUNBO0lBQ0UseUJBQXlCLEVBQUUsMkJBQTJCO0VBQ3hEIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRpbmd7XHJcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrbWFnZW50YTsgKi9cclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiA3cHg7XHJcbiAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxufVxyXG5cclxuLmVkaXQtZm9ybXtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sYWJlbHtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XHJcbn0gKi9cclxuXHJcbnRhYmxle1xyXG4gICAgcGFkZGluZy10b3A6IDYwcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMDAwcHg7XHJcbn1cclxuLmZvcm0tY29udHJvbCB7XHJcbiAgICBcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUwLCAyNDYsIDI0NiwgMC45NjYpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxufVxyXG4uaW5wdXQtZ3JvdXB7XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBcclxufVxyXG5cclxuXHJcbi50YWJsZS1zdHJpcGVkPnRib2R5PnRyOm50aC1jaGlsZChvZGQpPnRkLFxyXG4udGFibGUtc3RyaXBlZD50Ym9keT50cjpudGgtY2hpbGQob2RkKT50aCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjQ5LCAyNDkpO1xyXG4gIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbn1cclxuYnV0dG9ue1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbn1cclxuLnRhYmxlLXN0cmlwZWR7XHJcbiAgICBwYWRkaW5nLXRvcDogMjAwcHg7XHJcbn1cclxuLnRhYmxlQ29sb3J7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTY1LCAxMTMsIDIwNyk7XHJcbn1cclxuLm91dGxpbmVkLXRhYmxle1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDsgXHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG5cclxufVxyXG4uaW5wdXQtZ3JvdXB7XHJcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG59XHJcblxyXG4ub3V0bGluZWQtdGFibGUgdGgsXHJcbi5vdXRsaW5lZC10YWJsZSB0ZCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDE2NSwgMTEzLCAyMDcpO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuLnRhYmxlLWNvbnRhaW5lciB7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxuICBwYWRkaW5nLXRvcDogNjBweDsgLyogQWRkIHNvbWUgcGFkZGluZyB0byB0aGUgdG9wIHRvIGF2b2lkIG92ZXJsYXBwaW5nIHdpdGggdGhlIHNlYXJjaCBiYXIgKi9cclxufVxyXG4udGFibGUtaG92ZXIgdHI6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcclxuICB9XHJcbiAgLmljb24ge1xyXG4gICAgZm9udC1zaXplOiAzMHB4OyAvKiBBZGp1c3QgdGhlIGZvbnQgc2l6ZSBhcyBuZWVkZWQgKi9cclxuICB9XHJcblxyXG4gIC5pbnB1dC1ncm91cCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICB3aWR0aDogMTAwJTsgLyogQ292ZXIgdGhlIGZ1bGwgd2lkdGggb2YgdGhlIHBhZ2UgKi9cclxuICB9XHJcbiAgXHJcbiAgLnNlYXJjaC1iYXIge1xyXG4gICAgZmxleC1ncm93OiAxOyAvKiBBbGxvdyB0aGUgc2VhcmNoIGJhciB0byBleHBhbmQgYW5kIHRha2UgYXZhaWxhYmxlIHNwYWNlICovXHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7IC8qIEFkZCBzb21lIHNwYWNlIGJldHdlZW4gdGhlIHNlYXJjaCBiYXIgYW5kIGFkZCBpY29uICovXHJcbiAgfVxyXG4gIC5pY29uLWNlbGwge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICAucm93LW9yZGVyZWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzU5YjYwZDsgLyogR3JlZW4gYmFja2dyb3VuZCBjb2xvciAqL1xyXG4gIH1cclxuICBcclxuXHJcblxyXG5cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["InventoryItem","saveAs","jsPDF","autoTable","i0","ChecklistComponent","constructor","inventoryService","httpClient","snackBar","ngOnInit","checkInventory","GetAllInventoryItems","subscribe","inventoryItems","item","quantity","predefinedLevel","addToChecklist","isChecked","checklistItems","push","applyFilter","event","filterValue","target","value","toLowerCase","filter","column2Value","itemName","toUpperCase","includes","orderItem","ordered","showNotification","queryItem","receiveItem","deleteItem","index","findIndex","i","inventory_ItemId","splice","console","log","message","open","duration","horizontalPosition","onCheckboxChange","downloadPDF","doc","headers","data","map","setFontSize","head","body","startY","pdfBlob","output","file","Blob","type","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\checklist\\checklist.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\checklist\\checklist.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport { EventEmitter, Output } from '@angular/core';\nimport { saveAs } from 'file-saver'; // Import file-saver for saving the PDF\nimport * as html2pdf from 'html2pdf.js';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n// Import jsPDF\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-checklist',\n  templateUrl: './checklist.component.html',\n  styleUrls: ['./checklist.component.css']\n})\nexport class ChecklistComponent {\n  checklistItems: InventoryItem[] = [];\n  predefinedLevel: number = 5; // Predefined level for the quantity\n  item: InventoryItem = new InventoryItem;\n\n  constructor(private inventoryService: InventoryService, private httpClient: HttpClient, private snackBar: MatSnackBar) {}\n\n  ngOnInit() {\n    this.checkInventory();\n  }\n\n  checkInventory() {\n    this.inventoryService.GetAllInventoryItems().subscribe((inventoryItems: InventoryItem[]) => {\n      for (let item of inventoryItems) {\n        if (item.quantity < this.predefinedLevel) {\n          this.addToChecklist(item);\n        }\n      }\n    });\n  }\n\n  addToChecklist(item: InventoryItem) {\n    item.isChecked = false; \n    this.checklistItems.push(item);\n    \n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value.toLowerCase();\n  \n    this.checklistItems = this.checklistItems.filter(item => {\n      const column2Value = item.itemName.toLowerCase() || item.itemName.toUpperCase();\n  \n      return column2Value.includes(filterValue);\n    });\n  }\n  \n \n  orderItem(item: InventoryItem) {\n    item.ordered = !item.ordered;\n    this.showNotification(`Item ${item.itemName} is ${item.ordered ? 'ordered' : 'not ordered'}.`);\n  }\n  \n  queryItem(item: InventoryItem) {\n    // Implement the logic to query the item\n  }\n  \n  receiveItem(item: InventoryItem) {\n    // Implement the logic to mark the item as received\n  }\n\n    \n  deleteItem(item: InventoryItem) {\n    const index = this.checklistItems.findIndex(i => i.inventory_ItemId === item.inventory_ItemId);\n    if (index !== -1) {\n      this.checklistItems.splice(index, 1);\n      console.log(`Item ${item.itemName} is deleted.`);\n    }\n  }\n  showNotification(message: string) {\n    this.snackBar.open(message, 'Dismiss', {\n      duration: 3000, // Duration in milliseconds\n      horizontalPosition: 'right',\n    });\n  }\n\n  onCheckboxChange(item: InventoryItem) {\n    if (item.isChecked) {\n      // Perform any action you want when the checkbox is checked\n      console.log(`Item ${item.itemName} is checked.`);\n    } else {\n      // Perform any action you want when the checkbox is unchecked\n      console.log(`Item ${item.itemName} is unchecked.`);\n    }\n  }\n\n  downloadPDF() {\n    const doc = new jsPDF();\n    const headers = [['ID', 'Name']];\n    \n    // Map the checklistItems to generate the data array\n    const data = this.checklistItems.map(item => [item.inventory_ItemId, item.itemName]);\n  \n    doc.setFontSize(12);\n  \n    // Generate the table using autoTable\n    // startY is the initial position for the table\n    autoTable(doc, {\n      head: headers,\n      body: data,\n      startY: 20,\n      // Other options for styling the table if needed\n    });\n    \n    // Convert the PDF blob to a Base64 string\n    const pdfBlob = doc.output('blob');\n  \n    // Create a file-saver Blob object\n    const file = new Blob([pdfBlob], { type: 'application/pdf' });\n  \n    // Save the Blob to a file\n    saveAs(file, 'inventory_checklist.pdf');\n  }\n  }\n \n\n\n","\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <app-navbar></app-navbar>\n        </div>\n    <div class=\"col-md-10 order-md-1\">\n    <h3 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px; font-weight: bolder;\">Inventory Item Checklist </h3>\n\n      <div class=\"input-group\">\n    <div class=\"search-bar\">\n    <input type=\"text\" class=\"form-control\" (input)=\"applyFilter($event)\" placeholder=\"Search Columns\">\n    </div>\n  <div class=\"addButton\">\n    <i class=\"fa fa-download fa-lg icon\" aria-hidden=\"true\" (click)=\"downloadPDF()\"></i>\n\n  </div> \n    </div>\n\n<div class=\"table-container\">\n    <table #pdfTable class=\"table table-container outlined-table\">\n    <thead class=\"tableColor\">\n      <tr>\n        <th scope=\"col\" class=\"col-sm-1\">ID</th>\n        <th scope=\"col\" class=\"col-sm-7\">Name</th>\n        <th scope=\"col\" class=\"col-sm-1\" style=\"text-align: center;\">Ordered</th>\n        <th scope=\"col\" class=\"col-sm-1\" style=\"text-align: center;\">Recieved</th>\n        <th scope=\"col\" class=\"col-sm-1\" style=\"text-align: center;\">Query</th>\n\n        <!-- Add more columns as needed -->\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of checklistItems\" [ngClass]=\"{'row-ordered': item.ordered}\">\n        <td class=\"col-sm-1\">\n          <input type=\"checkbox\" [(ngModel)]=\"item.isChecked\">\n          {{ item.inventory_ItemId }}\n        </td>\n          <td class=\"col-sm-2\">{{ item.itemName }}</td>\n\n          <td class=\"col-sm-1\" class=\"icon-cell\">\n            <i class=\"fa fa-shopping-cart fa-lg icon\" aria-hidden=\"true\" (click)=\"orderItem(item)\"></i>\n          </td>\n          <td class=\"col-sm-1\" class=\"icon-cell\">\n            <i class=\"fa fa-check icon\" aria-hidden=\"true\"></i>\n          </td>\n          <td class=\"col-sm-1\" class=\"icon-cell\">\n            <i class=\"fa fa-question-circle fa-lg icon\" aria-hidden=\"true\" (click)=\"queryItem(item)\"></i>\n          </td>\n        <!-- Display more item details as needed -->\n      </tr>\n    </tbody>\n  </table>\n</div>\n    </div>\n    </div>\n</div>\n\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}