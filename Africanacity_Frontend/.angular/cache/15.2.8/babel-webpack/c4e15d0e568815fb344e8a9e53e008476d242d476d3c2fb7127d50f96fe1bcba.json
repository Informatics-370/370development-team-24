{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { InventoryType } from 'src/app/shared/inventorytype';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inventory.service\";\nimport * as i2 from \"@angular/router\";\nexport class EditIntventorytypeComponent {\n  constructor(inventoryservice, router, activated) {\n    this.inventoryservice = inventoryservice;\n    this.router = router;\n    this.activated = activated;\n    this.editInventoryType = new InventoryType();\n    this.editInventoryTypeForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.activated.params.subscribe(params => {\n      this.inventoryservice.GetInventoryType(params['id']).subscribe(result => {\n        this.editInventoryType = result;\n        this.editInventoryTypeForm.controls['name'].setValue(this.editInventoryType.name);\n        this.editInventoryTypeForm.controls['description'].setValue(this.editInventoryType.description);\n      });\n    });\n  }\n  cancel() {\n    this.router.navigate(['/view-inventorytypes']);\n  }\n  onSubmit() {\n    let inventorytype = new InventoryType();\n    inventorytype.name = this.editInventoryTypeForm.value.name;\n    inventorytype.description = this.editInventoryTypeForm.value.description;\n    this.inventoryservice.EditInventoryType(this.editInventoryType.inventory_TypeId, inventorytype).subscribe(result => {\n      this.router.navigate(['view-inventorytypes']);\n    });\n  }\n}\nEditIntventorytypeComponent.ɵfac = function EditIntventorytypeComponent_Factory(t) {\n  return new (t || EditIntventorytypeComponent)(i0.ɵɵdirectiveInject(i1.InventoryService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditIntventorytypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditIntventorytypeComponent,\n  selectors: [[\"app-edit-intventorytype\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditIntventorytypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-intventorytype works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAGnE,SAASC,aAAa,QAAQ,8BAA8B;;;;AAO5D,OAAM,MAAOC,2BAA2B;EACtCC,YAAoBC,gBAAkC,EAC5CC,MAAc,EACdC,SAAwB;IAFd,qBAAgB,GAAhBF,gBAAgB;IAC1B,WAAM,GAANC,MAAM;IACN,cAAS,GAATC,SAAS;IAEjB,sBAAiB,GAAkB,IAAIL,aAAa,EAAE;IAEtD,0BAAqB,GAAc,IAAIF,SAAS,CAAC;MAC9CQ,IAAI,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAC/CC,WAAW,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC;KACvD,CAAC;EAPkC;EASpCE,QAAQ;IACN,IAAI,CAACJ,SAAS,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACzC,IAAI,CAACP,gBAAgB,CAACS,gBAAgB,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAACC,SAAS,CAACE,MAAM,IAAG;QACtE,IAAI,CAACC,iBAAiB,GAAGD,MAAuB;QAChD,IAAI,CAACE,qBAAqB,CAACC,QAAQ,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACH,iBAAiB,CAACR,IAAI,CAAC;QACjF,IAAI,CAACS,qBAAqB,CAACC,QAAQ,CAAC,aAAa,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACH,iBAAiB,CAACN,WAAW,CAAC;MACjG,CAAC,CAAC;IACF,CAAC,CAAC;EAEJ;EAEAU,MAAM;IACJ,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC;EAChD;EAEAC,QAAQ;IACN,IAAIC,aAAa,GAAG,IAAIrB,aAAa,EAAE;IACvCqB,aAAa,CAACf,IAAI,GAAG,IAAI,CAACS,qBAAqB,CAACO,KAAK,CAAChB,IAAI;IAC1De,aAAa,CAACb,WAAW,GAAG,IAAI,CAACO,qBAAqB,CAACO,KAAK,CAACd,WAAW;IAExE,IAAI,CAACL,gBAAgB,CAACoB,iBAAiB,CAAC,IAAI,CAACT,iBAAiB,CAACU,gBAAgB,EAAEH,aAAa,CAAC,CAACV,SAAS,CAAEE,MAAU,IAAI;MAEzH,IAAI,CAACT,MAAM,CAACe,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;IAC7C,CAAC,CAAC;EACJ;;AApCSlB,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAwB;EAAAC;EAAAC;EAAAC;IAAA;MCXxCC,yBAAG;MAAAA,0CAA0B;MAAAA,iBAAI","names":["FormControl","FormGroup","Validators","InventoryType","EditIntventorytypeComponent","constructor","inventoryservice","router","activated","name","required","description","ngOnInit","params","subscribe","GetInventoryType","result","editInventoryType","editInventoryTypeForm","controls","setValue","cancel","navigate","onSubmit","inventorytype","value","EditInventoryType","inventory_TypeId","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Types\\edit-intventorytype\\edit-intventorytype.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Types\\edit-intventorytype\\edit-intventorytype.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryType } from 'src/app/shared/inventorytype';\n\n@Component({\n  selector: 'app-edit-intventorytype',\n  templateUrl: './edit-intventorytype.component.html',\n  styleUrls: ['./edit-intventorytype.component.css']\n})\nexport class EditIntventorytypeComponent {\n  constructor(private inventoryservice: InventoryService, \n    private router: Router, \n    private activated:ActivatedRoute) { }\n  \n    editInventoryType: InventoryType = new InventoryType();\n  \n    editInventoryTypeForm: FormGroup = new FormGroup({\n       name: new FormControl('',[Validators.required]),\n       description: new FormControl('',[Validators.required])\n    })\n  \n    ngOnInit(): void {\n      this.activated.params.subscribe(params =>{\n      this.inventoryservice.GetInventoryType(params['id']).subscribe(result =>{\n        this.editInventoryType = result as InventoryType;\n        this.editInventoryTypeForm.controls['name'].setValue(this.editInventoryType.name);\n        this.editInventoryTypeForm.controls['description'].setValue(this.editInventoryType.description);\n      })\n      })\n  \n    }\n  \n    cancel(){\n      this.router.navigate(['/view-inventorytypes'])\n    }\n  \n    onSubmit(){\n      let inventorytype = new InventoryType();\n      inventorytype.name = this.editInventoryTypeForm.value.name;\n      inventorytype.description = this.editInventoryTypeForm.value.description;\n  \n      this.inventoryservice.EditInventoryType(this.editInventoryType.inventory_TypeId, inventorytype).subscribe((result:any) => {\n  \n      this.router.navigate(['view-inventorytypes'])\n      });\n    }\n\n}\n","<p>edit-intventorytype works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}