{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inventory.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../navbar/navbar.component\";\nfunction ChecklistComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.inventory_ItemId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.itemName);\n  }\n}\nexport class ChecklistComponent {\n  constructor(inventoryService) {\n    this.inventoryService = inventoryService;\n    this.checklistItems = [];\n    this.predefinedLevel = 3; // Predefined level for the quantity\n  }\n\n  ngOnInit() {\n    this.checkInventory();\n  }\n  checkInventory() {\n    this.inventoryService.GetAllInventoryItems().subscribe(inventoryItems => {\n      for (let item of inventoryItems) {\n        if (item.quantity < this.predefinedLevel) {\n          this.addToChecklist(item);\n        }\n      }\n    });\n  }\n  addToChecklist(item) {\n    this.checklistItems.push(item);\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value.toLowerCase();\n    this.checklistItems = this.checklistItems.filter(item => {\n      const column2Value = item.itemName.toLowerCase() || item.itemName.toUpperCase();\n      return column2Value.includes(filterValue);\n    });\n  }\n}\nChecklistComponent.ɵfac = function ChecklistComponent_Factory(t) {\n  return new (t || ChecklistComponent)(i0.ɵɵdirectiveInject(i1.InventoryService));\n};\nChecklistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChecklistComponent,\n  selectors: [[\"app-checklist\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\", \"font-weight\", \"bolder\"], [\"type\", \"text\", \"placeholder\", \"Search Columns\", 1, \"form-control\", 3, \"input\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-container\", \"outlined-table\"], [1, \"tableColor\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ChecklistComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h3\", 4);\n      i0.ɵɵtext(6, \"Supplier Listing \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"label\");\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"input\", function ChecklistComponent_Template_input_input_8_listener($event) {\n        return ctx.applyFilter($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"table\", 6)(10, \"thead\", 7)(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Name\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, ChecklistComponent_tr_17_Template, 5, 2, \"tr\", 8);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.checklistItems);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAqBMA,0BAAwC;IAClCA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;;;;IADxBA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAmB;IAAnBA,sCAAmB;;;ACb/B,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAHpC,mBAAc,GAAoB,EAAE;IACpC,oBAAe,GAAW,CAAC,CAAC,CAAC;EAE4B;;EAEzDC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACF,gBAAgB,CAACG,oBAAoB,EAAE,CAACC,SAAS,CAAEC,cAA+B,IAAI;MACzF,KAAK,IAAIC,IAAI,IAAID,cAAc,EAAE;QAC/B,IAAIC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,eAAe,EAAE;UACxC,IAAI,CAACC,cAAc,CAACH,IAAI,CAAC;;;IAG/B,CAAC,CAAC;EACJ;EAEAG,cAAc,CAACH,IAAmB;IAChC,IAAI,CAACI,cAAc,CAACC,IAAI,CAACL,IAAI,CAAC;EAChC;EAEAM,WAAW,CAACC,KAAY;IACtB,MAAMC,WAAW,GAAID,KAAK,CAACE,MAA2B,CAACC,KAAK,CAACC,WAAW,EAAE;IAE1E,IAAI,CAACP,cAAc,GAAG,IAAI,CAACA,cAAc,CAACQ,MAAM,CAACZ,IAAI,IAAG;MACtD,MAAMa,YAAY,GAAGb,IAAI,CAACc,QAAQ,CAACH,WAAW,EAAE,IAAIX,IAAI,CAACc,QAAQ,CAACC,WAAW,EAAE;MAE/E,OAAOF,YAAY,CAACG,QAAQ,CAACR,WAAW,CAAC;IAC3C,CAAC,CAAC;EACJ;;AAhCWhB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT/B9B,8BAA6B;MAGjBA,6BAAyB;MAC7BA,iBAAM;MACVA,8BAAkC;MACkFA,iCAAiB;MAAAA,iBAAK;MAExIA,wBAAe;MACfA,gCAAmG;MAA3DA;QAAA,OAAS+B,uBAAmB;MAAA,EAAC;MAArE/B,iBAAmG;MAErGA,gCAA8E;MAGtEA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MAIjBA,8BAAO;MACLA,mEAIK;MACPA,iBAAQ;;;MALeA,gBAAiB;MAAjBA,4CAAiB","names":["i0","ChecklistComponent","constructor","inventoryService","ngOnInit","checkInventory","GetAllInventoryItems","subscribe","inventoryItems","item","quantity","predefinedLevel","addToChecklist","checklistItems","push","applyFilter","event","filterValue","target","value","toLowerCase","filter","column2Value","itemName","toUpperCase","includes","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\checklist\\checklist.component.html","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\checklist\\checklist.component.ts"],"sourcesContent":["\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <app-navbar></app-navbar>\n        </div>\n    <div class=\"col-md-10 order-md-1\">\n    <h3 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px; font-weight: bolder;\">Supplier Listing </h3>\n\n      <label></label>\n      <input type=\"text\" class=\"form-control\" (input)=\"applyFilter($event)\" placeholder=\"Search Columns\">\n\n    <table class=\"table table-striped table-hover table-container outlined-table\">\n    <thead class=\"tableColor\">\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <!-- Add more columns as needed -->\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of checklistItems\">\n        <td>{{ item.inventory_ItemId }}</td>\n        <td>{{ item.itemName }}</td>\n        <!-- Display more item details as needed -->\n      </tr>\n    </tbody>\n  </table>\n  \n","import { Component } from '@angular/core';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport { EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-checklist',\n  templateUrl: './checklist.component.html',\n  styleUrls: ['./checklist.component.css']\n})\nexport class ChecklistComponent {\n  checklistItems: InventoryItem[] = [];\n  predefinedLevel: number = 3; // Predefined level for the quantity\n\n  constructor(private inventoryService: InventoryService) {}\n\n  ngOnInit() {\n    this.checkInventory();\n  }\n\n  checkInventory() {\n    this.inventoryService.GetAllInventoryItems().subscribe((inventoryItems: InventoryItem[]) => {\n      for (let item of inventoryItems) {\n        if (item.quantity < this.predefinedLevel) {\n          this.addToChecklist(item);\n        }\n      }\n    });\n  }\n\n  addToChecklist(item: InventoryItem) {\n    this.checklistItems.push(item);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value.toLowerCase();\n  \n    this.checklistItems = this.checklistItems.filter(item => {\n      const column2Value = item.itemName.toLowerCase() || item.itemName.toUpperCase();\n  \n      return column2Value.includes(filterValue);\n    });\n  }\n  \n\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}