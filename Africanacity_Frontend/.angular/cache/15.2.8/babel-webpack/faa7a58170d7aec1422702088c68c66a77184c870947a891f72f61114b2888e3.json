{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/service/supplier.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ReceiveOrderComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r6.inventory_ItemId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r6.itemName);\n  }\n}\nfunction ReceiveOrderComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please select an item.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReceiveOrderComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const supplier_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", supplier_r7.supplierId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(supplier_r7.supplierName);\n  }\n}\nfunction ReceiveOrderComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please select a supplier.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReceiveOrderComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please enter the ordered date.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReceiveOrderComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please enter a valid quantity (minimum 1).\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ReceiveOrderComponent {\n  constructor(http, supplierservice) {\n    this.http = http;\n    this.supplierservice = supplierservice;\n    this.supplierData = [];\n    this.inventoryItems = [];\n    this.receiveOrderForm = new FormGroup({\n      inventoryItemId: new FormControl('', Validators.required),\n      supplierId: new FormControl('', Validators.required),\n      ordered_Date: new FormControl('', Validators.required),\n      received_Date: new FormControl(new Date().toISOString().slice(0, 10)),\n      ordered_Quantity: new FormControl('', [Validators.required, Validators.min(1)])\n    });\n  }\n  GetAllSuppliers() {\n    this.supplierservice.GetAllSupplierTypes().subscribe(result => {\n      let supplierTypeList = result;\n      supplierTypeList.forEach(element => {\n        this.supplierData.push(element);\n      });\n    });\n  }\n  onSubmit() {\n    if (this.receiveOrderForm.valid) {\n      const formData = this.receiveOrderForm.value;\n      this.http.post('/api/InventoryItem/AddReceivedOrder', formData).subscribe(response => {\n        // Handle successful response\n        console.log('Order received successfully:', response);\n      }, error => {\n        // Handle error\n        console.error('Error receiving order:', error);\n      });\n    }\n  }\n}\nReceiveOrderComponent.ɵfac = function ReceiveOrderComponent_Factory(t) {\n  return new (t || ReceiveOrderComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.SupplierService));\n};\nReceiveOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReceiveOrderComponent,\n  selectors: [[\"app-receive-order\"]],\n  decls: 35,\n  vars: 9,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"inventoryItemId\"], [\"formControlName\", \"inventoryItemId\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"for\", \"supplierId\"], [\"formControlName\", \"supplierId\"], [\"for\", \"orderedDate\"], [\"type\", \"date\", \"formControlName\", \"orderedDate\"], [\"for\", \"receivedDate\"], [\"type\", \"date\", \"formControlName\", \"receivedDate\", 3, \"readonly\"], [\"for\", \"orderedQuantity\"], [\"type\", \"number\", \"formControlName\", \"orderedQuantity\", \"min\", \"1\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n  template: function ReceiveOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Receive Order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ReceiveOrderComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Select Inventory Item:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"select\", 2)(7, \"option\", 3);\n      i0.ɵɵtext(8, \"-- Select an item --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, ReceiveOrderComponent_option_9_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, ReceiveOrderComponent_div_10_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Select Supplier:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"select\", 7)(15, \"option\", 3);\n      i0.ɵɵtext(16, \"-- Select a supplier --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, ReceiveOrderComponent_option_17_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, ReceiveOrderComponent_div_18_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\")(20, \"label\", 8);\n      i0.ɵɵtext(21, \"Ordered Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵtemplate(23, ReceiveOrderComponent_div_23_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\")(25, \"label\", 10);\n      i0.ɵɵtext(26, \"Received Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\")(29, \"label\", 12);\n      i0.ɵɵtext(30, \"Ordered Quantity:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 13);\n      i0.ɵɵtemplate(32, ReceiveOrderComponent_div_32_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"button\", 14);\n      i0.ɵɵtext(34, \"Receive Order\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.receiveOrderForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.inventoryItems);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.receiveOrderForm.get(\"inventoryItemId\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.supplierData);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.receiveOrderForm.get(\"supplierId\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.receiveOrderForm.get(\"orderedDate\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"readonly\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.receiveOrderForm.get(\"orderedQuantity\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.receiveOrderForm.invalid);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MinValidator, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","ReceiveOrderComponent","constructor","http","supplierservice","receiveOrderForm","inventoryItemId","required","supplierId","ordered_Date","received_Date","Date","toISOString","slice","ordered_Quantity","min","GetAllSuppliers","GetAllSupplierTypes","subscribe","result","supplierTypeList","forEach","element","supplierData","push","onSubmit","valid","formData","value","post","response","console","log","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\receive-order\\receive-order.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\receive-order\\receive-order.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms'; // Import the ReactiveFormsModule\nimport { SupplierService } from 'src/app/service/supplier.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport { Supplier } from 'src/app/shared/supplier';\n\n\n@Component({\n  selector: 'app-receive-order',\n  templateUrl: './receive-order.component.html',\n  styleUrls: ['./receive-order.component.css']\n})\nexport class ReceiveOrderComponent {\n\n  supplierData:Supplier[]=[]\n  inventoryItems: InventoryItem[] = [];\n  \n  receiveOrderForm: FormGroup;\n\n  constructor(private http: HttpClient, private supplierservice: SupplierService ) {\n    this.receiveOrderForm = new FormGroup({\n      inventoryItemId: new FormControl('', Validators.required),\n      supplierId: new FormControl('', Validators.required),\n      ordered_Date: new FormControl('', Validators.required),\n      received_Date: new FormControl(new Date().toISOString().slice(0, 10)), // Set the received date to the current date\n      ordered_Quantity: new FormControl('', [Validators.required, Validators.min(1)])\n    });\n  }\n  GetAllSuppliers(){\n    this.supplierservice.GetAllSupplierTypes().subscribe(result => {\n      let supplierTypeList:any[] = result\n      supplierTypeList.forEach((element) => {\n        this.supplierData.push(element)\n     });\n    });\n  }\n\n  onSubmit() {\n    if (this.receiveOrderForm.valid) {\n      const formData = this.receiveOrderForm.value;\n      this.http.post('/api/InventoryItem/AddReceivedOrder', formData).subscribe(\n        (response) => {\n          // Handle successful response\n          console.log('Order received successfully:', response);\n        },\n        (error) => {\n          // Handle error\n          console.error('Error receiving order:', error);\n        }\n      );\n    }\n  }\n\n}\n","<h1>Receive Order</h1>\n\n<form [formGroup]=\"receiveOrderForm\" (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label for=\"inventoryItemId\">Select Inventory Item:</label>\n    <select formControlName=\"inventoryItemId\">\n      <option value=\"\">-- Select an item --</option>\n      <!-- Populate the options with inventory items from the backend -->\n      <option *ngFor=\"let item of inventoryItems\" [value]=\"item.inventory_ItemId\">{{ item.itemName }}</option>\n    </select>\n    <div *ngIf=\"receiveOrderForm.get('inventoryItemId')\">Please select an item.</div>\n  </div>\n\n  <div>\n    <label for=\"supplierId\">Select Supplier:</label>\n    <select formControlName=\"supplierId\">\n      <option value=\"\">-- Select a supplier --</option>\n      <!-- Populate the options with suppliers from the backend -->\n      <option *ngFor=\"let supplier of supplierData\" [value]=\"supplier.supplierId\">{{ supplier.supplierName }}</option>\n    </select>\n    <div *ngIf=\"receiveOrderForm.get('supplierId')\">Please select a supplier.</div>\n  </div>\n\n  <div>\n    <label for=\"orderedDate\">Ordered Date:</label>\n    <input type=\"date\" formControlName=\"orderedDate\">\n    <div *ngIf=\"receiveOrderForm.get('orderedDate')\">Please enter the ordered date.</div>\n  </div>\n\n  <div>\n    <label for=\"receivedDate\">Received Date:</label>\n    <input type=\"date\" formControlName=\"receivedDate\" [readonly]=\"true\">\n  </div>\n\n  <div>\n    <label for=\"orderedQuantity\">Ordered Quantity:</label>\n    <input type=\"number\" formControlName=\"orderedQuantity\" min=\"1\">\n    <div *ngIf=\"receiveOrderForm.get('orderedQuantity')\">Please enter a valid quantity (minimum 1).</div>\n  </div>\n\n  <button type=\"submit\" [disabled]=\"receiveOrderForm.invalid\">Receive Order</button>\n</form>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}