{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Help } from 'src/app/shared/help';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let EditHelpComponent = /*#__PURE__*/(() => {\n  class EditHelpComponent {\n    constructor(employeeservice, router, activated) {\n      this.employeeservice = employeeservice;\n      this.router = router;\n      this.activated = activated;\n      this.editHelp = new Help();\n      this.helpForm = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        description: new FormControl('', [Validators.required])\n      });\n    }\n    ngOnInit() {\n      this.activated.params.subscribe(params => {\n        this.employeeservice.getHelp(params['id']).subscribe(res => {\n          this.editHelp = res;\n          this.helpForm.controls['name'].setValue(this.editHelp.name);\n          this.helpForm.controls['description'].setValue(this.editHelp.description);\n        });\n      });\n    }\n    cancel() {\n      this.router.navigate(['/view-help-list']);\n    }\n    updateHelp() {\n      let help = new Help();\n      help.name = this.helpForm.value.name;\n      help.description = this.helpForm.value.description;\n      this.employeeservice.editHelp(this.editHelp.helpId, help).subscribe(response => {\n        if (response.statusCode == 200) {\n          this.router.navigate(['/view-help-list']);\n        } else {\n          alert(response.message);\n        }\n      });\n    }\n  }\n  EditHelpComponent.ɵfac = function EditHelpComponent_Factory(t) {\n    return new (t || EditHelpComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  EditHelpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditHelpComponent,\n    selectors: [[\"app-edit-help\"]],\n    decls: 22,\n    vars: 4,\n    consts: [[2, \"text-align\", \"center\"], [1, \"container\"], [1, \"row\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"col-sm-1\"], [1, \"col-sm-6\"], [\"id\", \"name\", \"placeholder\", \"Enter Question\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"required\"], [\"for\", \"description\", 1, \"col-sm-1\"], [\"id\", \"description\", \"placeholder\", \"Enter Answer\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n    template: function EditHelpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\", 0);\n        i0.ɵɵtext(1, \"Edit Help\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function EditHelpComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.updateHelp();\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Question:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Answer:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 6);\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"div\", 10)(18, \"button\", 11);\n        i0.ɵɵtext(19, \"Confirm\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function EditHelpComponent_Template_button_click_20_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(21, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.helpForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.helpForm.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName]\n  });\n  return EditHelpComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}