{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/data.Service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/material/snack-bar\";\nconst _c0 = function (a1) {\n  return [\"/edit-menu-type\", a1];\n};\nfunction MenuTypesComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 16);\n    i0.ɵɵelement(7, \"i\", 17);\n    i0.ɵɵtext(8, \" Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function MenuTypesComponent_tr_24_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteMenuType(item_r1.menu_TypeId));\n    });\n    i0.ɵɵelement(10, \"i\", 19);\n    i0.ɵɵtext(11, \" Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.menu_TypeId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, item_r1.menu_TypeId));\n  }\n}\nconst _c1 = function () {\n  return [\"/add-menu-type\"];\n};\nexport class MenuTypesComponent {\n  constructor(dataService, router, http, snackBar) {\n    this.dataService = dataService;\n    this.router = router;\n    this.http = http;\n    this.snackBar = snackBar;\n    this.menuTypes = [];\n  }\n  deleteItem() {\n    const confirmationSnackBar = this.snackBar.open('Are you sure you want to delete the menu type?', 'Delete', {\n      duration: 5000\n    });\n    confirmationSnackBar.onAction().subscribe(() => {\n      this.deleteItemFromServer();\n      window.location.reload();\n    });\n  }\n  deleteItemFromServer() {\n    this.deleteMenuType;\n  }\n  ngOnInit() {\n    this.GetAllMenuTypes();\n    console.log(this.menuTypes);\n  }\n  //get all the menu types\n  GetAllMenuTypes() {\n    this.dataService.GetAllMenuTypes().subscribe(result => {\n      let typesList = result;\n      typesList.forEach(element => {\n        this.menuTypes.push(element);\n      });\n    });\n  }\n  //Delete menu type\n  deleteMenuType(menu_TypeId) {\n    this.dataService.deleteMenuType(menu_TypeId).subscribe(result => {\n      this.deleteItem();\n    });\n  }\n}\nMenuTypesComponent.ɵfac = function MenuTypesComponent_Factory(t) {\n  return new (t || MenuTypesComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n};\nMenuTypesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MenuTypesComponent,\n  selectors: [[\"app-menu-types\"]],\n  decls: 25,\n  vars: 3,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [1, \"container\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"form-control\"], [1, \"btn\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-search\"], [1, \"addButton\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-left\", \"1em\", 3, \"routerLink\"], [1, \"table\", \"table-striped\", \"table-hover\", \"outlined-table\", \"table-container\"], [1, \"tableColor\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 2, \"margin-right\", \"1em\", 3, \"routerLink\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-pencil\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash\"]],\n  template: function MenuTypesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"h3\", 5);\n      i0.ɵɵtext(7, \"Menu Types\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementStart(10, \"button\", 8);\n      i0.ɵɵelement(11, \"i\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"button\", 11);\n      i0.ɵɵtext(14, \"New Menu Type\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"table\", 12)(16, \"thead\", 13)(17, \"tr\")(18, \"th\", 14);\n      i0.ɵɵtext(19, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 14);\n      i0.ɵɵtext(21, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"th\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"tbody\");\n      i0.ɵɵtemplate(24, MenuTypesComponent_tr_24_Template, 12, 5, \"tr\", 15);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c1));\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.menuTypes);\n    }\n  },\n  styles: [\".heading[_ngcontent-%COMP%]{\\r\\n    \\r\\n    height: 50px;\\r\\n    text-align: center;\\r\\n    padding-top: 7px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\n\\r\\n.edit-form[_ngcontent-%COMP%]{\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.label[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 5px;\\r\\n    padding-bottom: 5px;\\r\\n} */\\r\\n\\r\\ntable[_ngcontent-%COMP%]{\\r\\n    padding-top: 60px;\\r\\n}\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n    \\r\\n    background-color: rgba(250, 246, 246, 0.966);\\r\\n    border-radius: 8px;\\r\\n    border-color: black;\\r\\n}\\r\\n.input-group[_ngcontent-%COMP%]{\\r\\n    width: 400px;\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-child(odd) > td[_ngcontent-%COMP%], .table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-child(odd) > th[_ngcontent-%COMP%] {\\r\\n  background-color: lightgray;\\r\\n  color: rgb(3, 3, 3);\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]{\\r\\n    border-radius: 50px;\\r\\n    border-color: black;\\r\\n}\\r\\n.table-striped[_ngcontent-%COMP%]{\\r\\n    padding-top: 200px;\\r\\n}\\r\\n.tableColor[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(165, 113, 207);\\r\\n}\\r\\n.outlined-table[_ngcontent-%COMP%]{\\r\\n    border: 1px solid #000; \\r\\n    border-collapse: collapse;\\r\\n\\r\\n}\\r\\n.input-group[_ngcontent-%COMP%]{\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.outlined-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .outlined-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\r\\n  border: 1px solid rgb(165, 113, 207);; \\r\\n  padding: 10px; \\r\\n}\\r\\n.table-container[_ngcontent-%COMP%]{\\r\\n    margin-top: 60px\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vbWVudS10eXBlcy9tZW51LXR5cGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQ0FBbUM7SUFDbkMsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsNENBQTRDO0FBQ2hEOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2QixFQUFFOzs7SUFHRSxpQkFBaUI7QUFDckI7QUFDQTs7SUFFSSw0Q0FBNEM7SUFDNUMsa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksWUFBWTs7QUFFaEI7OztBQUdBOztFQUVFLDJCQUEyQjtFQUMzQixtQkFBbUI7QUFDckI7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxzQkFBc0I7SUFDdEIseUJBQXlCOztBQUU3QjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBOztFQUVFLG9DQUFvQztFQUNwQyxhQUFhO0FBQ2Y7QUFDQTtJQUNJO0FBQ0o7QUFDQTs7O0dBR0ciLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGluZ3tcclxuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IGRhcmttYWdlbnRhOyAqL1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDdweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG59XHJcblxyXG4uZWRpdC1mb3Jte1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmxhYmVse1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcclxufSAqL1xyXG5cclxudGFibGV7XHJcbiAgICBwYWRkaW5nLXRvcDogNjBweDtcclxufVxyXG4uZm9ybS1jb250cm9sIHtcclxuICAgIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTAsIDI0NiwgMjQ2LCAwLjk2Nik7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG59XHJcbi5pbnB1dC1ncm91cHtcclxuICAgIHdpZHRoOiA0MDBweDtcclxuICAgIFxyXG59XHJcblxyXG5cclxuLnRhYmxlLXN0cmlwZWQ+dGJvZHk+dHI6bnRoLWNoaWxkKG9kZCk+dGQsXHJcbi50YWJsZS1zdHJpcGVkPnRib2R5PnRyOm50aC1jaGlsZChvZGQpPnRoIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XHJcbiAgY29sb3I6IHJnYigzLCAzLCAzKTtcclxufVxyXG5idXR0b257XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxufVxyXG4udGFibGUtc3RyaXBlZHtcclxuICAgIHBhZGRpbmctdG9wOiAyMDBweDtcclxufVxyXG4udGFibGVDb2xvcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxNjUsIDExMywgMjA3KTtcclxufVxyXG4ub3V0bGluZWQtdGFibGV7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwOyBcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcblxyXG59XHJcbi5pbnB1dC1ncm91cHtcclxuICAgIG1hcmdpbi10b3A6IDI1cHg7XHJcbn1cclxuXHJcbi5vdXRsaW5lZC10YWJsZSB0aCxcclxuLm91dGxpbmVkLXRhYmxlIHRkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMTY1LCAxMTMsIDIwNyk7OyBcclxuICBwYWRkaW5nOiAxMHB4OyBcclxufVxyXG4udGFibGUtY29udGFpbmVye1xyXG4gICAgbWFyZ2luLXRvcDogNjBweFxyXG59XHJcbi8qIC5hZGRCdXR0b257XHJcblxyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMDBweDtcclxufSAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IA0BQA,0BAAmC;IAC3BA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAA2HA,wBAA+C;IAACA,qBAAI;IAAAA,iBAAS;IAC5LA,kCAAwF;IAA3CA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAgC;IAAA,EAAC;IAACA,yBAA8C;IAACA,wBAAM;IAAAA,iBAAS;;;;IAHlJA,eAAoB;IAApBA,yCAAoB;IACpBA,eAAe;IAAfA,kCAAe;IACuDA,eAAoD;IAApDA,4EAAoD;;;;;;ACV1I,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,WAAwB,EAClCC,MAAc,EACdC,IAAgB,EAChBC,QAAqB;IAHX,gBAAW,GAAXH,WAAW;IACrB,WAAM,GAANC,MAAM;IACN,SAAI,GAAJC,IAAI;IACJ,aAAQ,GAARC,QAAQ;IAPlB,cAAS,GAAe,EAAE;EAOO;EAE/BC,UAAU;IAEV,MAAMC,oBAAoB,GAAG,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC,gDAAgD,EAAC,QAAQ,EAAC;MACtGC,QAAQ,EAAE;KACX,CAAC;IAEFF,oBAAoB,CAACG,QAAQ,EAAE,CAACC,SAAS,CAAC,MAAK;MAC7C,IAAI,CAACC,oBAAoB,EAAE;MAC3BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,CAAC;EAEJ;EAEAH,oBAAoB;IAClB,IAAI,CAACI,cAAc;EACrB;EAGFC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;IAEtBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC;EAC7B;EAGA;EACAH,eAAe;IAEb,IAAI,CAAChB,WAAW,CAACgB,eAAe,EAAE,CAACP,SAAS,CAACW,MAAM,IAAG;MACpD,IAAIC,SAAS,GAASD,MAAM;MAC5BC,SAAS,CAACC,OAAO,CAAEC,OAAO,IAAI;QAC5B,IAAI,CAACJ,SAAS,CAACK,IAAI,CAACD,OAAO,CAAC;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA;EACAT,cAAc,CAACW,WAAmB;IAChC,IAAI,CAACzB,WAAW,CAACc,cAAc,CAACW,WAAW,CAAC,CAAChB,SAAS,CAACW,MAAM,IAAG;MAC9D,IAAI,CAAChB,UAAU,EAAE;IACnB,CAAC,CAAC;EACJ;;AAnDWN,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDlB/BjC,8BAA6B;MAGnBA,6BAAyB;MAC7BA,iBAAM;MACVA,8BAAkC;MAE6DA,0BAAU;MAAAA,iBAAK;MAC9GA,8BAAyB;MACvBA,2BAA6D;MAC7DA,kCAAoB;MAChBA,wBAA+C;MACjDA,iBAAS;MACTA,gCAAuB;MACyFA,8BAAa;MAAAA,iBAAS;MAExIA,kCAA8E;MAGxDA,mBAAE;MAAAA,iBAAK;MACvBA,+BAAgB;MAAAA,qBAAI;MAAAA,iBAAK;MACzBA,0BAAqB;MACvBA,iBAAK;MAEPA,8BAAO;MACLA,qEAMO;MACTA,iBAAQ;;;MAlBsEA,gBAAiC;MAAjCA,uDAAiC;MAWxFA,gBAAY;MAAZA,uCAAY","names":["i0","MenuTypesComponent","constructor","dataService","router","http","snackBar","deleteItem","confirmationSnackBar","open","duration","onAction","subscribe","deleteItemFromServer","window","location","reload","deleteMenuType","ngOnInit","GetAllMenuTypes","console","log","menuTypes","result","typesList","forEach","element","push","menu_TypeId","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\menu-types\\menu-types.component.html","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\menu-types\\menu-types.component.ts"],"sourcesContent":["<!--MENU TYPES PAGE-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n      <div class=\"col-md-2\">\r\n          <app-navbar></app-navbar>\r\n      </div>\r\n  <div class=\"col-md-10 order-md-1\">\r\n<div class=\"container\">  \r\n  <h3 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px;\">Menu Types</h3>\r\n  <div class=\"input-group\">\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\r\n    <button class=\"btn\">\r\n        <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n      </button>\r\n      <div class=\"addButton\">\r\n      <button style=\"margin-left: 1em;\" type=\"button\" class=\"btn btn-sm btn-success\"[routerLink]=\"['/add-menu-type']\">New Menu Type</button>\r\n      </div>\r\n    <table class=\"table table-striped table-hover outlined-table table-container\">\r\n      <thead class=\"tableColor\">\r\n        <tr>\r\n          <th scope=\"col\">ID</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let item of menuTypes\">\r\n            <td>{{item.menu_TypeId}}</td>\r\n            <td>{{ item.name }}</td>\r\n            <td><button style=\"margin-right: 1em;\" type=\"button\" class=\"btn btn-info\" [routerLink]=\"['/edit-menu-type', item.menu_TypeId]\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Edit</button>\r\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteMenuType(item.menu_TypeId)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete</button>\r\n          </td>\r\n          </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n","import { Component, OnInit} from '@angular/core';\r\nimport { DataService } from 'src/app/service/data.Service';\r\nimport { MenuTypes } from 'src/app/shared/menu-types';\r\nimport {Router} from '@angular/router';\r\nimport { EditMenuTypeComponent } from './edit-menu-type/edit-menu-type.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ConfirmationDialogComponent } from './add-menu-type/confirmation-dialog/confirmation-dialog.component';\r\nimport { MenuItem } from 'src/app/shared/menu-item';\r\nimport { FoodType } from 'src/app/shared/food-type';\r\nimport { MenuItemCategory } from 'src/app/shared/menu-item-category';\r\n\r\n@Component({\r\n  selector: 'app-menu-types',\r\n  templateUrl: './menu-types.component.html',\r\n  /*template: `<button (click)=\"deleteItem()\">Delete</button>`,*/\r\n  \r\n  styleUrls: ['./menu-types.component.css']\r\n})\r\nexport class MenuTypesComponent implements OnInit{\r\n  menuTypes:MenuTypes[] = []\r\n\r\n\r\n\r\n  constructor(private dataService: DataService, \r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private snackBar: MatSnackBar){}\r\n\r\n    deleteItem(): void{\r\n \r\n    const confirmationSnackBar = this.snackBar.open('Are you sure you want to delete the menu type?','Delete',{\r\n        duration: 5000,\r\n      });\r\n\r\n      confirmationSnackBar.onAction().subscribe(() => {\r\n        this.deleteItemFromServer();\r\n        window.location.reload();\r\n      })\r\n\r\n    }\r\n\r\n    deleteItemFromServer(): void{\r\n      this.deleteMenuType;\r\n    }\r\n\r\n   \r\n  ngOnInit(): void{\r\n    this.GetAllMenuTypes()\r\n    \r\n    console.log(this.menuTypes)\r\n  }\r\n\r\n\r\n  //get all the menu types\r\n  GetAllMenuTypes()\r\n  {\r\n    this.dataService.GetAllMenuTypes().subscribe(result => {\r\n      let typesList:any[] = result\r\n      typesList.forEach((element) => {\r\n        this.menuTypes.push(element)\r\n      });\r\n    })\r\n  }\r\n\r\n  //Delete menu type\r\n  deleteMenuType(menu_TypeId: Number){\r\n    this.dataService.deleteMenuType(menu_TypeId).subscribe(result => {\r\n      this.deleteItem();\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}