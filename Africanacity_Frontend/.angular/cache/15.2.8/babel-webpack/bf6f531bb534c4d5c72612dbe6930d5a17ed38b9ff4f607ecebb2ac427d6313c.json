{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Help } from 'src/app/shared/help';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/employee.service\";\nimport * as i2 from \"@angular/router\";\nexport class EditHelpComponent {\n  constructor(employeeservice, router, activated) {\n    this.employeeservice = employeeservice;\n    this.router = router;\n    this.activated = activated;\n    this.editHelp = new Help();\n    this.updateEmployeeForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.activated.params.subscribe(params => {\n      this.employeeservice.getEmployee(params['id']).subscribe(res => {\n        this.editHelp = res;\n        this.updateEmployeeForm.controls['name'].setValue(this.editHelp.name);\n        this.updateEmployeeForm.controls['description'].setValue(this.editHelp.description);\n      });\n    });\n  }\n  cancel() {\n    this.router.navigate(['/view-help-list']);\n  }\n  updateHelp() {\n    let help = new Help();\n    help.name = this.updateEmployeeForm.value.name;\n    help.description = this.updateEmployeeForm.value.description;\n    ;\n    this.employeeservice.editHelp(this.editHelp.helpId, help).subscribe(response => {\n      if (response.statusCode == 200) {\n        this.router.navigate(['/view-help-list']);\n      } else {\n        alert(response.message);\n      }\n    });\n  }\n}\nEditHelpComponent.ɵfac = function EditHelpComponent_Factory(t) {\n  return new (t || EditHelpComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditHelpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditHelpComponent,\n  selectors: [[\"app-edit-help\"]],\n  decls: 0,\n  vars: 0,\n  template: function EditHelpComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,IAAI,QAAQ,qBAAqB;;;;AAO1C,OAAM,MAAOC,iBAAiB;EAC5BC,YACUC,eAA+B,EAC/BC,MAAe,EACfC,SAAwB;IAFxB,oBAAe,GAAfF,eAAe;IACf,WAAM,GAANC,MAAM;IACN,cAAS,GAATC,SAAS;IAEnB,aAAQ,GAAS,IAAIL,IAAI,EAAE;IAE3B,uBAAkB,GAAc,IAAIF,SAAS,CAAC;MAC5CQ,IAAI,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAC/CC,WAAW,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC;KACtD,CAAC;EAPoC;EAUtCE,QAAQ;IAEN,IAAI,CAACJ,SAAS,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACvC,IAAI,CAACP,eAAe,CAACS,WAAW,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAACC,SAAS,CAACE,GAAG,IAAG;QAC/D,IAAI,CAACC,QAAQ,GAAGD,GAAW;QAE3B,IAAI,CAACE,kBAAkB,CAACC,QAAQ,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACH,QAAQ,CAACR,IAAI,CAAC;QACrE,IAAI,CAACS,kBAAkB,CAACC,QAAQ,CAAC,aAAa,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACH,QAAQ,CAACN,WAAW,CAAC;MAEnF,CAAC,CAAC;IAEH,CAAC,CAAC;EACL;EAEAU,MAAM;IACJ,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC3C;EAEAC,UAAU;IAER,IAAIC,IAAI,GAAG,IAAIrB,IAAI,EAAE;IACrBqB,IAAI,CAACf,IAAI,GAAG,IAAI,CAACS,kBAAkB,CAACO,KAAK,CAAChB,IAAI;IAC9Ce,IAAI,CAACb,WAAW,GAAG,IAAI,CAACO,kBAAkB,CAACO,KAAK,CAACd,WAAW;IAC5D;IAID,IAAI,CAACL,eAAe,CAACW,QAAQ,CAAC,IAAI,CAACA,QAAQ,CAACS,MAAM,EAACF,IAAI,CAAC,CAACV,SAAS,CAAEa,QAAY,IAAI;MAEnF,IAAGA,QAAQ,CAACC,UAAU,IAAI,GAAG,EAC7B;QACE,IAAI,CAACrB,MAAM,CAACe,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;OAC1C,MAED;QACEO,KAAK,CAACF,QAAQ,CAACG,OAAO,CAAC;;IAE1B,CAAC,CAAC;EAEH;;AArDW1B,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["FormControl","FormGroup","Validators","Help","EditHelpComponent","constructor","employeeservice","router","activated","name","required","description","ngOnInit","params","subscribe","getEmployee","res","editHelp","updateEmployeeForm","controls","setValue","cancel","navigate","updateHelp","help","value","helpId","response","statusCode","alert","message","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Help Management\\view-help-list\\edit-help\\edit-help.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EmployeeService } from 'src/app/service/employee.service';\nimport { Help } from 'src/app/shared/help';\n\n@Component({\n  selector: 'app-edit-help',\n  templateUrl: './edit-help.component.html',\n  styleUrls: ['./edit-help.component.css']\n})\nexport class EditHelpComponent {\n  constructor(\n    private employeeservice:EmployeeService, \n    private router : Router , \n    private activated:ActivatedRoute) { }\n\n  editHelp: Help = new Help();\n\n  updateEmployeeForm: FormGroup = new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    description: new FormControl('',[Validators.required]),\n  })\n  \n\n  ngOnInit(): void {\n\n    this.activated.params.subscribe(params => { \n      this.employeeservice.getEmployee(params['id']).subscribe(res => { \n      this.editHelp = res as Help;\n\n      this.updateEmployeeForm.controls['name'].setValue(this.editHelp.name);\n      this.updateEmployeeForm.controls['description'].setValue(this.editHelp.description);\n     \n      })\n \n     })\n  }\n\n  cancel(){\n    this.router.navigate(['/view-help-list'])\n  }\n\n  updateHelp()\n  {\n    let help = new Help();\n    help.name = this.updateEmployeeForm.value.name;\n    help.description = this.updateEmployeeForm.value.description;\n    ;\n  \n\n\n   this.employeeservice.editHelp(this.editHelp.helpId,help).subscribe((response:any) => {\n\n    if(response.statusCode == 200)\n    {\n      this.router.navigate(['/view-help-list'])\n    }\n    else\n    {\n      alert(response.message);\n    }\n   });\n\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}