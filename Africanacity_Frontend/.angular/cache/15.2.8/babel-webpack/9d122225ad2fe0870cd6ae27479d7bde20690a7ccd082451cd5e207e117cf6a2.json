{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inventory.service\";\nimport * as i2 from \"@angular/common\";\nfunction SelectedInventorytypeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function SelectedInventorytypeComponent_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const type_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSelectType(type_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r1.name, \" \");\n  }\n}\nexport class SelectedInventorytypeComponent {\n  constructor(inventoryservice) {\n    this.inventoryservice = inventoryservice;\n    this.inventoryTypes = [];\n    this.selectedType = null;\n  }\n  ngOnInit() {\n    this.GetAllInventoryTypes();\n  }\n  GetAllInventoryTypes() {\n    this.inventoryservice.GetAllInventoryTypes().subscribe(types => {\n      this.inventoryTypes = types;\n    }, error => {\n      console.error('Failed to fetch inventory types:', error);\n    });\n  }\n  onSelectType(type) {\n    this.selectedType = type;\n  }\n}\nSelectedInventorytypeComponent.ɵfac = function SelectedInventorytypeComponent_Factory(t) {\n  return new (t || SelectedInventorytypeComponent)(i0.ɵɵdirectiveInject(i1.InventoryService));\n};\nSelectedInventorytypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SelectedInventorytypeComponent,\n  selectors: [[\"app-selected-inventorytype\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[2, \"text-align\", \"center\"], [1, \"inventory-type-cards-container\"], [\"class\", \"inventory-type-card\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"inventory-type-card\", 3, \"click\"]],\n  template: function SelectedInventorytypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 0);\n      i0.ɵɵtext(2, \"Inventory Types\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵtemplate(4, SelectedInventorytypeComponent_div_4_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.inventoryTypes);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".inventory-type-cards-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n  }\\r\\n  \\r\\n  .inventory-type-card[_ngcontent-%COMP%] {\\r\\n    border: 1px solid #ccc;\\r\\n    padding: 10px;\\r\\n    cursor: pointer;\\r\\n    margin: 5px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vSW52ZW50b3J5IE1hbmFnZW1lbnQvSW52ZW50b3J5IEl0ZW1zL3ZpZXctaW52ZW50b3J5aXRlbXMvc2VsZWN0ZWQtaW52ZW50b3J5dHlwZS9zZWxlY3RlZC1pbnZlbnRvcnl0eXBlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2IsZUFBZTtJQUNmLFdBQVc7RUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi5pbnZlbnRvcnktdHlwZS1jYXJkcy1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICB9XHJcbiAgXHJcbiAgLmludmVudG9yeS10eXBlLWNhcmQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBtYXJnaW46IDVweDtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAGMA,8BAAkG;IAA7BA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IAC/FA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,6CACF;;;ACIN,OAAM,MAAOC,8BAA8B;EAIzCC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAHpC,mBAAc,GAAoB,EAAE;IACpC,iBAAY,GAAyB,IAAI;EAEgB;EAEzDC,QAAQ;IACN,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoB;IAClB,IAAI,CAACF,gBAAgB,CAACE,oBAAoB,EAAE,CAACC,SAAS,CACnDC,KAAK,IAAI;MACR,IAAI,CAACC,cAAc,GAAGD,KAAK;IAC7B,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CACF;EACL;EACAE,YAAY,CAACC,IAAmB;IAC9B,IAAI,CAACC,YAAY,GAAGD,IAAI;EAC1B;;AAtBaX,8BAA8B;mBAA9BA,8BAA8B;AAAA;AAA9BA,8BAA8B;QAA9BA,8BAA8B;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT3ClB,2BAAK;MAC+BA,+BAAe;MAAAA,iBAAK;MACpDA,8BAA4C;MAC1CA,+EAEM;MACRA,iBAAM;;;MAH8CA,eAAiB;MAAjBA,4CAAiB","names":["i0","SelectedInventorytypeComponent","constructor","inventoryservice","ngOnInit","GetAllInventoryTypes","subscribe","types","inventoryTypes","error","console","onSelectType","type","selectedType","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\view-inventoryitems\\selected-inventorytype\\selected-inventorytype.component.html","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\view-inventoryitems\\selected-inventorytype\\selected-inventorytype.component.ts"],"sourcesContent":["<div>\n    <h2 style=\"text-align: center;\">Inventory Types</h2>\n    <div class=\"inventory-type-cards-container\">\n      <div class=\"inventory-type-card\" *ngFor=\"let type of inventoryTypes\" (click)=\"onSelectType(type)\">\n        {{ type.name }}\n      </div>\n    </div>\n  </div>\n  \n  \n","import { Component } from '@angular/core';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryType } from 'src/app/shared/inventorytype';\n\n@Component({\n  selector: 'app-selected-inventorytype',\n  templateUrl: './selected-inventorytype.component.html',\n  styleUrls: ['./selected-inventorytype.component.css']\n})\nexport class SelectedInventorytypeComponent {\n  inventoryTypes: InventoryType[] = [];\n  selectedType: InventoryType | null = null;\n\n  constructor(private inventoryservice: InventoryService) {}\n\n  ngOnInit(): void {\n    this.GetAllInventoryTypes();\n  }\n\n  GetAllInventoryTypes(): void {\n    this.inventoryservice.GetAllInventoryTypes().subscribe(\n      (types) => {\n        this.inventoryTypes = types;\n      },\n      (error) => {\n        console.error('Failed to fetch inventory types:', error);\n      }\n    );\n}\nonSelectType(type: InventoryType): void {\n  this.selectedType = type;\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}