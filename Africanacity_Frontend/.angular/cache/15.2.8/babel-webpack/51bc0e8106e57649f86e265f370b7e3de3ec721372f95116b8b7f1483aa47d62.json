{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Help } from '../../../shared/help';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"../../../navbar/navbar.component\";\nfunction AddHelpComponent_mat_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const catergoryName_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", catergoryName_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", catergoryName_r1, \" \");\n  }\n}\nexport class AddHelpComponent {\n  constructor(employeeservice, router) {\n    this.employeeservice = employeeservice;\n    this.router = router;\n    this.helpForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required])\n    });\n    this.Category = ['Restaurant', 'Entertainment', 'Login'];\n  }\n  ngOnInit() {}\n  cancel() {\n    this.router.navigate(['/home']);\n  }\n  onSubmit() {\n    let help = new Help();\n    help.name = this.helpForm.value.name;\n    help.description = this.helpForm.value.description;\n    help.categoryName = this.helpForm.value.categoryName;\n    this.employeeservice.AddHelp(help).subscribe(result => {\n      this.router.navigate(['/view-help-list']);\n    });\n    this.employeeservice.AddHelp(help).subscribe(res => {\n      if (res.statusCode == 200) {\n        this.router.navigate(['view-help-list']);\n      } else {\n        alert(res.message);\n      }\n    });\n  }\n}\nAddHelpComponent.ɵfac = function AddHelpComponent_Factory(t) {\n  return new (t || AddHelpComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddHelpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddHelpComponent,\n  selectors: [[\"app-add-help\"]],\n  decls: 37,\n  vars: 5,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"col-sm-1\"], [1, \"col-sm-6\"], [\"placeholder\", \"Enter Question\", \"name\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"required\"], [\"for\", \"description\", 1, \"col-sm-1\"], [\"placeholder\", \"Enter Answer\", \"name\", \"description\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-2\"], [\"type\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [3, \"value\"]],\n  template: function AddHelpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\");\n      i0.ɵɵtext(6, \"Add Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 1)(10, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AddHelpComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Question:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Answer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 8);\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Employee Role:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 8)(25, \"div\", 13)(26, \"mat-form-field\")(27, \"mat-label\");\n      i0.ɵɵtext(28, \"Select a name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"mat-select\");\n      i0.ɵɵtemplate(30, AddHelpComponent_mat_option_30_Template, 2, 2, \"mat-option\", 14);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(31, \"div\", 6)(32, \"div\", 15)(33, \"button\", 16);\n      i0.ɵɵtext(34, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function AddHelpComponent_Template_button_click_35_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(36, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.helpForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Category);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.helpForm.valid);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i5.MatOption, i6.MatFormField, i6.MatLabel, i7.MatSelect, i8.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Help","i0","AddHelpComponent","constructor","employeeservice","router","name","required","description","ngOnInit","cancel","navigate","onSubmit","help","helpForm","value","categoryName","AddHelp","subscribe","result","res","statusCode","alert","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Help Management\\add-help\\add-help.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Help Management\\add-help\\add-help.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EmployeeService } from '../../../service/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Help } from '../../../shared/help';\n\n@Component({\n  selector: 'app-add-help',\n  templateUrl: './add-help.component.html',\n  styleUrls: ['./add-help.component.css']\n})\nexport class AddHelpComponent {\n  constructor(private employeeservice: EmployeeService, private router: Router) { }\n\n  helpForm: FormGroup = new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    description: new FormControl('',[Validators.required]),\n \n  })\n\n ngOnInit(): void {\n \n }\n Category: string[] = ['Restaurant', 'Entertainment', 'Login'];\n\n cancel(){\n   this.router.navigate(['/home'])\n }\n\n    onSubmit(){\n\n     let help = new Help();\n     help.name = this.helpForm.value.name;\n     help.description = this.helpForm.value.description;\n     help.categoryName = this.helpForm.value.categoryName;\n         this.employeeservice.AddHelp(help).subscribe(result => {\n               this.router.navigate(['/view-help-list'])\n         })\n \n  this.employeeservice.AddHelp(help).subscribe((res:any) => {\n\n   if(res.statusCode == 200)\n   {\n     this.router.navigate(['view-help-list'])\n   }\n   else\n   {\n     alert(res.message);\n   }\n  });\n      }\n\n}\n","\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <app-navbar></app-navbar>\n        </div>\n    <div class=\"col-md-10 order-md-1\">\n  <h4>Add Employee</h4>\n  <hr>\n  <div class=\"container\">\n  <div class=\"row\">  \n  <form [formGroup]=\"helpForm\" class=\"form-horizontal\"  (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n          <label class=\" col-sm-1\" for=\"name\">Question:</label>\n          <div class=\"col-sm-6\">\n            <input class=\"form-control\" placeholder=\"Enter Question\" [required]=\"true\" name=\"name\" formControlName=\"name\">\n          </div>\n      </div>\n\n      <div class=\"form-group\">\n          <label class=\"col-sm-1\" for=\"description\">Answer:</label>\n          <div class=\"col-sm-6\">\n            <input class=\"form-control\"  placeholder=\"Enter Answer\" [required]=\"true\" name=\"description\" formControlName=\"description\">\n          </div>\n          <div class=\"form-group\">\n            <label class=\"col-sm-2\">Employee Role:</label>\n            <div class=\"col-sm-6\">\n              <div class=\"form-control\" type=\"\">\n                <mat-form-field>\n                  <mat-label>Select a name</mat-label>\n                  <mat-select>\n                    <mat-option *ngFor=\"let catergoryName of Category\" [value]=\"catergoryName\">\n                      {{ catergoryName }}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div>\n            </div>\n        </div>\n\n\n\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-1 col-sm-6\">\n          <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!helpForm.valid\" class=\"btn btn-sm btn-success\">Add</button>\n          <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\n        </div>\n      </div>\n    </form>\n    </div>\n  </div> \n    </div>\n    </div>\n  </div>\n  \n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}