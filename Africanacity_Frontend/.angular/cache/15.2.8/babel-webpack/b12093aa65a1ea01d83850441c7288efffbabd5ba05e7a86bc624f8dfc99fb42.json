{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Help } from '../../../shared/help';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/employee.service\";\nimport * as i2 from \"@angular/router\";\nfunction AddHelpComponent_mat_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const catergoryName_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", catergoryName_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", catergoryName_r1, \" \");\n  }\n}\nexport class AddHelpComponent {\n  constructor(employeeservice, router) {\n    this.employeeservice = employeeservice;\n    this.router = router;\n    this.helpForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required])\n    });\n    this.Category = ['Restaurant', 'Entertainment', 'Login'];\n  }\n  //EmailVerification\n  checkEmail() {\n    this.employeeservice.checkEmail(this.email).subscribe(response => {\n      this.message = response.message;\n    }, error => {\n      console.error('Error checking email:', error);\n    });\n  }\n  ngOnInit() {}\n  cancel() {\n    this.router.navigate(['/home']);\n  }\n  onSubmit() {\n    let help = new Help();\n    help.name = this.helpForm.value.name;\n    help.description = this.helpForm.value.description;\n    help.categoryName = this.helpForm.value.categoryName;\n    this.employeeservice.AddHelp(help).subscribe(result => {\n      this.router.navigate(['/view-help-list']);\n    });\n    this.employeeservice.AddHelp(help).subscribe(res => {\n      if (res.statusCode == 200) {\n        this.router.navigate(['view-help-list']);\n      } else {\n        alert(res.message);\n      }\n    });\n  }\n}\nAddHelpComponent.ɵfac = function AddHelpComponent_Factory(t) {\n  return new (t || AddHelpComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddHelpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddHelpComponent,\n  selectors: [[\"app-add-help\"]],\n  decls: 37,\n  vars: 5,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"placeholder\", \"Enter Question\", \"name\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"required\"], [\"for\", \"description\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"placeholder\", \"Enter Answer\", \"name\", \"description\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-2\"], [\"type\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [3, \"value\"]],\n  template: function AddHelpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\");\n      i0.ɵɵtext(6, \"Add Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 1)(10, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AddHelpComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Question:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Answer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 8);\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Employee Role:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 8)(25, \"div\", 13)(26, \"mat-form-field\")(27, \"mat-label\");\n      i0.ɵɵtext(28, \"Select a name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"mat-select\");\n      i0.ɵɵtemplate(30, AddHelpComponent_mat_option_30_Template, 2, 2, \"mat-option\", 14);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(31, \"div\", 6)(32, \"div\", 15)(33, \"button\", 16);\n      i0.ɵɵtext(34, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function AddHelpComponent_Template_button_click_35_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(36, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.helpForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Category);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.helpForm.valid);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \".message[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  background-color: lightgray;\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vSGVscCBNYW5hZ2VtZW50L2FkZC1oZWxwL2FkZC1oZWxwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsMkJBQTJCO0VBQzNCLGdCQUFnQjtBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1lc3NhZ2Uge1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Help","i0","AddHelpComponent","constructor","employeeservice","router","name","required","description","checkEmail","email","subscribe","response","message","error","console","ngOnInit","cancel","navigate","onSubmit","help","helpForm","value","categoryName","AddHelp","result","res","statusCode","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Help Management\\add-help\\add-help.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Help Management\\add-help\\add-help.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { EmployeeService } from '../../../service/employee.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Help } from '../../../shared/help';\r\n\r\n@Component({\r\n  selector: 'app-add-help',\r\n  templateUrl: './add-help.component.html',\r\n  styleUrls: ['./add-help.component.css'],\r\n  template: `\r\n  <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\" required>\r\n  <button (click)=\"checkEmail()\">Check Email</button>\r\n\r\n  <div *ngIf=\"message\" class=\"message\">\r\n    {{ message }}\r\n  </div>\r\n`,\r\nstyles: [`\r\n.message {\r\n  padding: 10px;\r\n  background-color: lightgray;\r\n  margin-top: 10px;\r\n}\r\n`]\r\n\r\n})\r\n\r\nexport class AddHelpComponent {\r\n  email!: string;\r\n  message!: string;\r\n\r\n  constructor(private employeeservice: EmployeeService, private router: Router) { }\r\n\r\n  helpForm: FormGroup = new FormGroup({\r\n    name: new FormControl('',[Validators.required]),\r\n    description: new FormControl('',[Validators.required]),\r\n \r\n  })\r\n\r\n  //EmailVerification\r\n\r\n  checkEmail() {\r\n    this.employeeservice.checkEmail(this.email).subscribe(\r\n      (response) => {\r\n        this.message = response.message;\r\n      },\r\n      (error) => {\r\n        console.error('Error checking email:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n ngOnInit(): void {\r\n \r\n }\r\n Category: string[] = ['Restaurant', 'Entertainment', 'Login'];\r\n\r\n cancel(){\r\n   this.router.navigate(['/home'])\r\n }\r\n\r\n    onSubmit(){\r\n\r\n     let help = new Help();\r\n     help.name = this.helpForm.value.name;\r\n     help.description = this.helpForm.value.description;\r\n     help.categoryName = this.helpForm.value.categoryName;\r\n         this.employeeservice.AddHelp(help).subscribe(result => {\r\n               this.router.navigate(['/view-help-list'])\r\n         })\r\n \r\n  this.employeeservice.AddHelp(help).subscribe((res:any) => {\r\n\r\n   if(res.statusCode == 200)\r\n   {\r\n     this.router.navigate(['view-help-list'])\r\n   }\r\n   else\r\n   {\r\n     alert(res.message);\r\n   }\r\n  });\r\n      }\r\n\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <app-navbar></app-navbar>\r\n        </div>\r\n    <div class=\"col-md-10 order-md-1\">\r\n  <h4>Add Employee</h4>\r\n  <hr>\r\n  <div class=\"container\">\r\n  <div class=\"row\">  \r\n  <form [formGroup]=\"helpForm\" class=\"form-horizontal\"  (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n          <label class=\" col-sm-1\" style=\"font-weight: bold;\" for=\"name\">Question:</label>\r\n          <div class=\"col-sm-6\">\r\n            <input class=\"form-control\"  placeholder=\"Enter Question\" [required]=\"true\" name=\"name\" formControlName=\"name\">\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n          <label class=\"col-sm-1\"  style=\"font-weight: bold;\" for=\"description\">Answer:</label>\r\n          <div class=\"col-sm-6\">\r\n            <input class=\"form-control\"  placeholder=\"Enter Answer\" [required]=\"true\" name=\"description\" formControlName=\"description\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-2\">Employee Role:</label>\r\n            <div class=\"col-sm-6\">\r\n              <div class=\"form-control\" type=\"\">\r\n                <mat-form-field>\r\n                  <mat-label>Select a name</mat-label>\r\n                  <mat-select>\r\n                    <mat-option *ngFor=\"let catergoryName of Category\" [value]=\"catergoryName\">\r\n                      {{ catergoryName }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div class=\"col-sm-offset-1 col-sm-6\">\r\n          <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!helpForm.valid\" class=\"btn btn-sm btn-success\">Add</button>\r\n          <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    </div>\r\n  </div> \r\n    </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}