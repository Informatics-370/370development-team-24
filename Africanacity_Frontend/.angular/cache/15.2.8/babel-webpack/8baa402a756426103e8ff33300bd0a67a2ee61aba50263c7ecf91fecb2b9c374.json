{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.apiUrl = 'http://localhost:49991/api/';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          ContentType: 'application/json'\n        })\n      };\n    }\n    // Register user\n    RegisterUser(registerUser) {\n      return this.httpClient.post(`${this.apiUrl}Authentication/Register`, registerUser, this.httpOptions);\n    }\n    //Login user\n    LoginUser(loginUser) {\n      let user = new UserCredentials();\n      return this.httpClient.post(`${this.apiUrl}Authentication/Login`, loginUser, this.httpOptions);\n    }\n    //Change user password\n    ChangePassword(loginUser) {\n      let user = new UserCredentials();\n      return this.httpClient.post(`${this.apiUrl}Authentication/Forgotpassword`, loginUser, this.httpOptions);\n    }\n    // Generate otp \n    ValidateOtp(user) {\n      return this.httpClient.post(`${this.apiUrl}Authentication/Otp`, user, this.httpOptions);\n    }\n    //Code Related to employee role\n    GetEmployeeRole(employee_RoleId) {\n      return this.httpClient.get(`${this.apiUrl}EmployeeRole/GetEmployeeRole` + \"/\" + employee_RoleId).pipe(map(result => result));\n    }\n    GetAllEmployeeRoles() {\n      return this.httpClient.get(`${this.apiUrl}EmployeeRole/GetAllEmployeeRoles`).pipe(map(results => results));\n    }\n    AddEmployeeRole(employeeRole) {\n      return this.httpClient.post(`${this.apiUrl}EmployeeRole/AddEmployeeRole`, employeeRole, this.httpOptions);\n    }\n    DeleteEmployeeRole(employee_RoleId) {\n      return this.httpClient.delete(`${this.apiUrl}EmployeeRole/DeleteEmployeeRole` + \"/\" + employee_RoleId, this.httpOptions);\n    }\n    EditEmployeeRole(employee_RoleId, employeeRole) {\n      return this.httpClient.put(`${this.apiUrl}EmployeeRole/EditEmployeeRole/${employee_RoleId}`, employeeRole, this.httpOptions);\n    }\n    /***************Menu Types************/\n    //Create menu type\n    AddMenuType(menuType) {\n      return this.httpClient.post(`${this.apiUrl}MenuType/AddMenuType`, menuType);\n    }\n    GetAllMenuTypes() {\n      return this.httpClient.get(`${this.apiUrl}MenuType/GetAllMenuTypes`).pipe(map(result => result));\n    }\n    //Edit menu type\n    GetMenuTypeById(menu_TypeId) {\n      return this.httpClient.get(`${this.apiUrl}MenuType/GetMenuType/${menu_TypeId}`);\n    }\n    //Update function\n    EditMenuType(Menu_TypeId, menuType) {\n      //send put request to update a single course\n      // return this.httpClient.put(this.apiUrl + 'MenuType/EditMenuType/' + menu_TypeId,menuType);\n      return this.httpClient.put(`${this.apiUrl}MenuType/EditMenuType/${Menu_TypeId}`, menuType, this.httpOptions);\n      console.log();\n    }\n    //Delete Menu type\n    deleteMenuType(menu_TypeId) {\n      return this.httpClient.delete(`${this.apiUrl}MenuType/DeleteMenuType` + \"/\" + menu_TypeId, this.httpOptions);\n    }\n    /********************************MENU ITEM******************************/\n    //GET MENU ITEMS\n    GetAllMenuItems() {\n      return this.httpClient.get(`${this.apiUrl}MenuItems/GetAllMenuItems`).pipe(map(result => result));\n    }\n    //fetch menu item food\n    GetMenuItemById(menu_ItemId) {\n      return this.httpClient.get(`${this.apiUrl}MenuItems/GetMenuItem/${menu_ItemId}`);\n    }\n    /*Delete Menu type*/\n    deleteMenuItem(menu_ItemId) {\n      return this.httpClient.delete(`${this.apiUrl}MenuItems/DeleteMenuItem` + \"/\" + menu_ItemId, this.httpOptions);\n    }\n    /******************FOOD TYPE**************/\n    // GetAllFoodTypes(): Observable<any>{\n    //   return this.httpClient.get(`${this.apiUrl}FoodType/GetAllFoodTypes`)\n    //   .pipe(map(result => result));\n    // }\n    // fetch food type name\n    // GetFoodTypeById(foodTypeId: Number): Observable<any>{\n    //   return this.httpClient.get(`${this.apiUrl}foodTypeController/GetFoodType/${foodTypeId}`);\n    // }\n    /********** MENU CATEGORY***************/\n    // GetAllMenuItemCategories(): Observable<any>{\n    //   return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetAllMenuItemCategories`)\n    //   .pipe(map(result => result));\n    // }\n    // fetch food type name\n    // GetMenuItemCategoryById(menuItemCategory_Id: Number): Observable<any>{\n    //   return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetMenuItemCategory/${menuItemCategory_Id}`);\n    // }\n    // food type\n    GetAllFoodTypes() {\n      return this.httpClient.get(`${this.apiUrl}foodTypeController/GetAllFoodTypes`).pipe(map(result => result));\n    }\n    GetFoodType(foodTypeId) {\n      return this.httpClient.get(`${this.apiUrl}foodTypeController/GetFoodType` + \"/\" + foodTypeId).pipe(map(result => result));\n    }\n    AddFoodType(foodType) {\n      return this.httpClient.post(`${this.apiUrl}foodTypeController/AddFoodType`, foodType, this.httpOptions);\n    }\n    EditFoodType(foodTypeId, foodType) {\n      return this.httpClient.put(`${this.apiUrl}foodTypeController/EditFoodType/${foodTypeId}`, foodType, this.httpOptions);\n    }\n    DeleteFoodType(foodTypeId) {\n      return this.httpClient.delete(`${this.apiUrl}foodTypeController/DeleteFoodType` + \"/\" + foodTypeId, this.httpOptions);\n    }\n    // menu item category\n    GetAllMenuItemCategories() {\n      return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetAllMenuItemCategories`).pipe(map(result => result));\n    }\n    GetMenuItemCategory(menu_CategoryId) {\n      return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetMenuItemCategory/${menu_CategoryId}`);\n      //return this.httpClient.get(`${this.apiUrl}MenuItem_Category/GetMenuItemCategory` + \"/\" + Menu_CategoryId) //.pipe(map(result => result))\n    }\n\n    AddMenuItemCategory(menuItemCategory) {\n      return this.httpClient.post(`${this.apiUrl}MenuItem_Category/AddMenuItemCategory`, menuItemCategory, this.httpOptions);\n    }\n    EditMenuItemCategory(menu_CategoryId, menuItemCategory) {\n      return this.httpClient.put(`${this.apiUrl}MenuItem_Category/EditMenuItemCategory/${menu_CategoryId}`, menuItemCategory, this.httpOptions);\n    }\n    DeleteMenuItemCategory(menu_CategoryId) {\n      //return this.httpClient.delete<string>(`${this.apiUrl}MenuItem_Category/DeleteMenuItemCategory` + \"/\" + Menu_CategoryId, this.httpOptions)\n      return this.httpClient.delete(`${this.apiUrl}MenuItem_Category/DeleteMenuItemCategory` + \"/\" + menu_CategoryId, this.httpOptions);\n    }\n    /******************************SCHEDULE**********************/\n    //Get All Schedules\n    ScheduleDisplay() {\n      return this.httpClient.get(`${this.apiUrl}Schedule/ScheduleDisplay`).pipe(map(results => results));\n    }\n    GetSchedule(scheduleId) {\n      return this.httpClient.get(`${this.apiUrl}ScheduleController/GetSchedule` + \"/\" + scheduleId).pipe(map(result => result));\n    }\n    AddSchedule(schedule) {\n      return this.httpClient.post(`${this.apiUrl}Schedule/AddSchedule`, schedule, this.httpOptions);\n    }\n    EditSchedule(scheduleId, schedule) {\n      return this.httpClient.put(`${this.apiUrl}ScheduleController/EditSchedule/${scheduleId}`, schedule, this.httpOptions);\n    }\n    DeleteSchedule(scheduleId) {\n      return this.httpClient.delete(`${this.apiUrl}ScheduleController/DeleteSchedule` + \"/\" + scheduleId, this.httpOptions);\n    }\n    /************************************EVENTS******************************/\n    GetAllEvents() {\n      return this.httpClient.get(`${this.apiUrl}Event/GetAllEvents`).pipe(map(results => results));\n    }\n    GetEvent(eventId) {\n      return this.httpClient.get(`${this.apiUrl}EventController/GetEvent` + \"/\" + eventId).pipe(map(result => result));\n    }\n    AddNewEvent(bookingevent) {\n      return this.httpClient.post(`${this.apiUrl}Event/AddNewEvent`, bookingevent, this.httpOptions);\n    }\n    EditEvent(eventId, bookingevent) {\n      return this.httpClient.put(`${this.apiUrl}EventController/EditEvent/${eventId}`, bookingevent, this.httpOptions);\n    }\n    DeleteEvent(eventId) {\n      return this.httpClient.delete(`${this.apiUrl}EventController/DeleteEvent` + \"/\" + eventId, this.httpOptions);\n    }\n    /*******************ENTERTAINMENT TYPE********************/\n    GetEntertainmentTypes() {\n      return this.httpClient.get(`${this.apiUrl}EntertainmentType/GetEntertainmentTypes`).pipe(map(results => results));\n    }\n    GetEntertainmentType(entertainment_TypeId) {\n      return this.httpClient.get(`${this.apiUrl}EntertainmentTypeController/GetEntertainmentType` + \"/\" + entertainment_TypeId).pipe(map(result => result));\n    }\n    AddEntertainmentType(entertainmentType) {\n      return this.httpClient.post(`${this.apiUrl}EntertainmentType/AddEntertainment`, entertainmentType, this.httpOptions);\n    }\n    EditEntertainment(entertainment_TypeId, entertainmentType) {\n      return this.httpClient.put(`${this.apiUrl}EntertainmentTypeController/EditEntertainmentType/${entertainment_TypeId}`, entertainmentType, this.httpOptions);\n    }\n    DeleteEntertainmentType(entertainment_TypeId) {\n      return this.httpClient.delete(`${this.apiUrl}EntertainmentTypeController/DeleteEntertainmentType` + \"/\" + entertainment_TypeId, this.httpOptions);\n    }\n  }\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();\nclass UserCredentials {\n  constructor() {\n    this.EmailAddress = 'Addyouremailaddresshere';\n    this.Password = 'Addyourpasswordhere';\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}