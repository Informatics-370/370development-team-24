{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inventory.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../../navbar/navbar.component\";\nfunction SelectedInventorytypeComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵlistener(\"click\", function SelectedInventorytypeComponent_div_10_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const type_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSelectType(type_r1));\n    });\n    i0.ɵɵelementStart(1, \"div\", 8)(2, \"div\", 9)(3, \"h5\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 12);\n    i0.ɵɵtext(8, \"Go somewhere\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(type_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Additional content related to \", type_r1.name, \" goes here.\");\n  }\n}\nexport class SelectedInventorytypeComponent {\n  constructor(inventoryservice) {\n    this.inventoryservice = inventoryservice;\n    this.inventoryTypes = [];\n    this.selectedType = null;\n  }\n  ngOnInit() {\n    this.GetAllInventoryTypes();\n  }\n  GetAllInventoryTypes() {\n    this.inventoryservice.GetAllInventoryTypes().subscribe(types => {\n      this.inventoryTypes = types;\n    }, error => {\n      console.error('Failed to fetch inventory types:', error);\n    });\n  }\n  onSelectType(type) {\n    this.selectedType = type;\n  }\n}\nSelectedInventorytypeComponent.ɵfac = function SelectedInventorytypeComponent_Factory(t) {\n  return new (t || SelectedInventorytypeComponent)(i0.ɵɵdirectiveInject(i1.InventoryService));\n};\nSelectedInventorytypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SelectedInventorytypeComponent,\n  selectors: [[\"app-selected-inventorytype\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\"], [1, \"inventory-type-cards-container\"], [\"class\", \"col-sm-6\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-6\", 3, \"click\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"href\", \"#\", 1, \"btn\", \"btn-primary\"]],\n  template: function SelectedInventorytypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\")(6, \"h4\", 4);\n      i0.ɵɵtext(7, \"Inventory Types\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1);\n      i0.ɵɵtemplate(10, SelectedInventorytypeComponent_div_10_Template, 9, 2, \"div\", 6);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.inventoryTypes);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NavbarComponent],\n  styles: [\".inventory-type-cards-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    justify-content: center; \\r\\n    align-items: center; \\r\\n    margin-top: 100px; \\r\\n  }\\r\\n  \\r\\n  .inventory-type-card[_ngcontent-%COMP%] {\\r\\n    border: 1px solid #ccc;\\r\\n    padding: 10px;\\r\\n    cursor: pointer;\\r\\n    margin: 5px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vSW52ZW50b3J5IE1hbmFnZW1lbnQvSW52ZW50b3J5IEl0ZW1zL3ZpZXctaW52ZW50b3J5aXRlbXMvc2VsZWN0ZWQtaW52ZW50b3J5dHlwZS9zZWxlY3RlZC1pbnZlbnRvcnl0eXBlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLHVCQUF1QixFQUFFLDhCQUE4QjtJQUN2RCxtQkFBbUIsRUFBRSw0QkFBNEI7SUFDakQsaUJBQWlCLEVBQUUsZ0RBQWdEO0VBQ3JFOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixlQUFlO0lBQ2YsV0FBVztFQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmludmVudG9yeS10eXBlLWNhcmRzLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IC8qIENlbnRlciBjYXJkcyBob3Jpem9udGFsbHkgKi9cclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlciBjYXJkcyB2ZXJ0aWNhbGx5ICovXHJcbiAgICBtYXJnaW4tdG9wOiAxMDBweDsgLyogQWRkIGEgbWFyZ2luIHRvIG1vdmUgdGhlIGNhcmRzIGZ1cnRoZXIgZG93biAqL1xyXG4gIH1cclxuICBcclxuICAuaW52ZW50b3J5LXR5cGUtY2FyZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG1hcmdpbjogNXB4O1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAUUA,8BAAuF;IAA7BA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IACpFA,8BAAkB;IAESA,YAAe;IAAAA,iBAAK;IAC3CA,6BAAqB;IAAAA,YAAwD;IAAAA,iBAAI;IACjFA,6BAAoC;IAAAA,4BAAY;IAAAA,iBAAI;;;;IAF7BA,eAAe;IAAfA,kCAAe;IACjBA,eAAwD;IAAxDA,oFAAwD;;;ACL7F,OAAM,MAAOC,8BAA8B;EAIzCC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAHpC,mBAAc,GAAoB,EAAE;IACpC,iBAAY,GAAyB,IAAI;EAEgB;EAEzDC,QAAQ;IACN,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoB;IAClB,IAAI,CAACF,gBAAgB,CAACE,oBAAoB,EAAE,CAACC,SAAS,CACnDC,KAAK,IAAI;MACR,IAAI,CAACC,cAAc,GAAGD,KAAK;IAC7B,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CACF;EACL;EACAE,YAAY,CAACC,IAAmB;IAC9B,IAAI,CAACC,YAAY,GAAGD,IAAI;EAC1B;;AAtBaX,8BAA8B;mBAA9BA,8BAA8B;AAAA;AAA9BA,8BAA8B;QAA9BA,8BAA8B;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT3ClB,8BAA6B;MAGjBA,6BAAyB;MAC7BA,iBAAM;MACVA,8BAAkC;MAEFA,+BAAe;MAAAA,iBAAK;MACpDA,8BAA4C;MAEtCA,iFAQM;MACRA,iBAAM;;;MATmCA,gBAAiB;MAAjBA,4CAAiB","names":["i0","SelectedInventorytypeComponent","constructor","inventoryservice","ngOnInit","GetAllInventoryTypes","subscribe","types","inventoryTypes","error","console","onSelectType","type","selectedType","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\view-inventoryitems\\selected-inventorytype\\selected-inventorytype.component.html","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\view-inventoryitems\\selected-inventorytype\\selected-inventorytype.component.ts"],"sourcesContent":["<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <app-navbar></app-navbar>\n        </div>\n    <div class=\"col-md-10 order-md-1\">\n<div>\n    <h4 style=\"text-align: center;\">Inventory Types</h4>\n    <div class=\"inventory-type-cards-container\">\n        <div class=\"row\">\n          <div class=\"col-sm-6\" *ngFor=\"let type of inventoryTypes\" (click)=\"onSelectType(type)\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ type.name }}</h5>\n                <p class=\"card-text\">Additional content related to {{ type.name }} goes here.</p>\n                <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n\n  \n  \n","import { Component } from '@angular/core';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryType } from 'src/app/shared/inventorytype';\n\n@Component({\n  selector: 'app-selected-inventorytype',\n  templateUrl: './selected-inventorytype.component.html',\n  styleUrls: ['./selected-inventorytype.component.css']\n})\nexport class SelectedInventorytypeComponent {\n  inventoryTypes: InventoryType[] = [];\n  selectedType: InventoryType | null = null;\n\n  constructor(private inventoryservice: InventoryService) {}\n\n  ngOnInit(): void {\n    this.GetAllInventoryTypes();\n  }\n\n  GetAllInventoryTypes(): void {\n    this.inventoryservice.GetAllInventoryTypes().subscribe(\n      (types) => {\n        this.inventoryTypes = types;\n      },\n      (error) => {\n        console.error('Failed to fetch inventory types:', error);\n      }\n    );\n}\nonSelectType(type: InventoryType): void {\n  this.selectedType = type;\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}