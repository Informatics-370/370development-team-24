{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FoodType } from 'src/app/shared/food-type';\nimport { ConfirmationDialogComponent } from 'src/app/administration/menu-types/add-menu-type/confirmation-dialog/confirmation-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/data.Service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = [\"toastContainer\"];\nexport class CreateFoodTypeComponent {\n  constructor(dataService, router, dialog, snackBar, fb) {\n    this.dataService = dataService;\n    this.router = router;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.fb = fb;\n    this.FoodTypeId = 0;\n    //creating a form\n    {\n      this.AddFoodTypeForm = this.fb.group({\n        FoodTypeId: [0, [Validators.required]],\n        name: ['', [Validators.required]],\n        description: ['', [Validators.required]]\n      });\n    }\n  }\n  //confirmation dialog method\n  openDialog() {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      width: '250px',\n      data: 'Add New Menu Type?'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'Yes') {\n        this.AddFoodType();\n      }\n    });\n  }\n  ngOnInit() {}\n  cancel() {\n    this.router.navigate(['/food-type']);\n  }\n  AddFoodType() {\n    let foodType = new FoodType();\n    foodType.name = this.AddFoodTypeForm.value.name;\n    foodType.description = this.AddFoodTypeForm.value.description;\n    this.dataService.AddFoodType(foodType).subscribe(add => {\n      this.router.navigate(['/food-type']);\n    });\n    this.showSuccessMessage('Food Type added successfully!');\n  }\n  // success message\n  showSuccessMessage(message) {\n    const snackBarRef = this.snackBar.open(message, 'Ok', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n    snackBarRef.afterDismissed().subscribe(() => {\n      this.toastContainer.clear();\n    });\n  }\n}\nCreateFoodTypeComponent.ɵfac = function CreateFoodTypeComponent_Factory(t) {\n  return new (t || CreateFoodTypeComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.FormBuilder));\n};\nCreateFoodTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateFoodTypeComponent,\n  selectors: [[\"app-create-food-type\"]],\n  viewQuery: function CreateFoodTypeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toastContainer = _t.first);\n    }\n  },\n  decls: 29,\n  vars: 4,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [1, \"heading\"], [1, \"container\", \"edit-form\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"col-sm-3\", \"label\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-4\"], [\"id\", \"name\", \"placeholder\", \"Enter Name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"required\"], [\"for\", \"description\", 1, \"col-sm-3\", \"label\", 2, \"font-weight\", \"bold\"], [\"id\", \"description\", \"placeholder\", \"Enter Description\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", \"onclick\", \"cancel()\", 1, \"btn\", \"btn-sm\", \"btn-danger\"]],\n  template: function CreateFoodTypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\")(6, \"h1\", 4);\n      i0.ɵɵtext(7, \"Create Food Type\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateFoodTypeComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.AddFoodType();\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Food Type Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Food Type Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 9);\n      i0.ɵɵelement(21, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"div\", 7)(24, \"div\", 13)(25, \"button\", 14);\n      i0.ɵɵtext(26, \"Confirm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 15);\n      i0.ɵɵtext(28, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.AddFoodTypeForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.AddFoodTypeForm.valid);\n    }\n  },\n  styles: [\".heading[_ngcontent-%COMP%]{\\r\\n    \\r\\n    text-align: center;\\r\\n    padding-top: 7px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-weight: bolder;\\r\\n}\\r\\n\\r\\n.edit-form[_ngcontent-%COMP%]{\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.label[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 5px;\\r\\n    padding-bottom: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vRm9vZCBUeXBlL2NyZWF0ZS1mb29kLXR5cGUvY3JlYXRlLWZvb2QtdHlwZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7bUJBQ2U7SUFDZixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLDRDQUE0QztJQUM1QyxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRpbmd7XHJcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrbWFnZW50YTtcclxuICAgIGhlaWdodDogNTBweDsgKi9cclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiA3cHg7XHJcbiAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbn1cclxuXHJcbi5lZGl0LWZvcm17XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ubGFiZWx7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ViewContainerRef","Validators","FoodType","ConfirmationDialogComponent","CreateFoodTypeComponent","constructor","dataService","router","dialog","snackBar","fb","AddFoodTypeForm","group","FoodTypeId","required","name","description","openDialog","dialogRef","open","width","data","afterClosed","subscribe","result","AddFoodType","ngOnInit","cancel","navigate","foodType","value","add","showSuccessMessage","message","snackBarRef","duration","horizontalPosition","verticalPosition","afterDismissed","toastContainer","clear","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Food Type\\create-food-type\\create-food-type.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Food Type\\create-food-type\\create-food-type.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/service/data.Service';\r\nimport { FoodType } from 'src/app/shared/food-type';\r\nimport { ActivatedRoute} from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ConfirmationDialogComponent } from 'src/app/administration/menu-types/add-menu-type/confirmation-dialog/confirmation-dialog.component'\r\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar'\r\n\r\n@Component({\r\n  selector: 'app-create-food-type',\r\n  templateUrl: './create-food-type.component.html',\r\n  styleUrls: ['./create-food-type.component.css']\r\n})\r\nexport class CreateFoodTypeComponent {\r\n  @ViewChild('toastContainer', { read: ViewContainerRef })\r\n  toastContainer!: ViewContainerRef;\r\n  FoodTypeId: number = 0;\r\n  AddFoodTypeForm!: FormGroup;\r\n\r\n  constructor(private dataService: DataService, \r\n    private router: Router, \r\n    private dialog: MatDialog, \r\n    private snackBar: MatSnackBar, \r\n    private fb: FormBuilder) \r\n  {\r\n\r\n    //creating a form\r\n    {\r\n        this.AddFoodTypeForm = this.fb.group({\r\n        FoodTypeId: [0, [Validators.required]],\r\n        name: ['', [Validators.required]],\r\n        description: ['', [Validators.required]] \r\n      })\r\n    }\r\n  }\r\n    //confirmation dialog method\r\n    openDialog():void{\r\n      const dialogRef = this.dialog.open(ConfirmationDialogComponent,{\r\n        width: '250px',\r\n        data: 'Add New Menu Type?'\r\n      });\r\n  \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result == 'Yes'){\r\n        this.AddFoodType();\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  cancel()\r\n  {\r\n    this.router.navigate(['/food-type'])\r\n  }\r\n\r\n  AddFoodType()\r\n  {\r\n    let foodType = new FoodType();\r\n    foodType.name = this.AddFoodTypeForm.value.name;\r\n    foodType.description = this.AddFoodTypeForm.value.description;\r\n\r\n    this.dataService.AddFoodType(foodType).subscribe((add:any) => {\r\n      this.router.navigate(['/food-type'])\r\n    });\r\n    this.showSuccessMessage('Food Type added successfully!');\r\n  }\r\n\r\n  // success message\r\n  showSuccessMessage(message: string): void {\r\n    const snackBarRef: MatSnackBarRef<any> = this.snackBar.open(message, 'Ok', {\r\n      duration: 3000, // Duration in milliseconds\r\n      horizontalPosition: 'center',\r\n      verticalPosition: 'bottom'\r\n    });\r\n  \r\n  \r\n    snackBarRef.afterDismissed().subscribe(() => {\r\n      this.toastContainer.clear();\r\n    });\r\n  }\r\n\r\n}","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <app-navbar></app-navbar>\r\n        </div>\r\n\r\n        <div class=\"col-md-10 order-md-1\">\r\n            <!-- heading -->\r\n            <div>\r\n                <h1 class=\"heading\">Create Food Type</h1>\r\n            </div>  \r\n\r\n            <div class=\"container edit-form\">\r\n                <div class=\"row\">  \r\n                    <form [formGroup]=\"AddFoodTypeForm\" class=\"form-horizontal\" (ngSubmit)=\"AddFoodType()\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"col-sm-3 label\" style=\"font-weight: bold;\" for=\"name\">Food Type Name:</label>\r\n                            <div class=\"col-sm-4\">\r\n                                <input class=\"form-control\" id=\"name\" placeholder=\"Enter Name\" [required]=\"true\" formControlName=\"name\">\r\n                            </div>\r\n                        </div> <br />\r\n                        <div class=\"form-group\">\r\n                            <label class=\"col-sm-3 label\" style=\"font-weight: bold;\" for=\"description\">Food Type Description:</label>\r\n                            <div class=\"col-sm-4\">\r\n                                <input class=\"form-control\" id=\"description\" placeholder=\"Enter Description\" [required]=\"true\" formControlName=\"description\">\r\n                            </div>\r\n                        </div> <br />\r\n\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-sm-offset-1 col-sm-6\">\r\n                                <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!AddFoodTypeForm.valid\" class=\"btn btn-sm btn-success\">Confirm</button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-danger\" onclick=\"cancel()\">Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}