{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from 'src/app/shared/employee';\nimport { NotificationDialogComponent } from '../notification-dialog/notification-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/employee.service\";\nimport * as i2 from \"src/app/service/email.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../../navbar/navbar.component\";\nconst _c0 = [\"toastContainer\"];\nfunction AddEmployeeComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\nexport class AddEmployeeComponent {\n  constructor(employeeservice, emailservice, router, dialog, snackBar) {\n    this.employeeservice = employeeservice;\n    this.router = router;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.employeeForm = new FormGroup({\n      surname: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required]),\n      email_Address: new FormControl('', [Validators.required]),\n      physical_Address: new FormControl('', [Validators.required]),\n      phoneNumber: new FormControl('', [Validators.required])\n    });\n    //EmailVerification\n    // checkEmail() {\n    //   this.employeeservice.checkEmail(this.email).subscribe(\n    //     (response) => {\n    //       this.message = response.message;\n    //     },\n    //     (error) => {\n    //       console.error('Error checking email:', error);\n    //     }\n    //   );\n    // }\n    this.Roles = ['Driver', 'Administrator', 'Waiter'];\n  }\n  // Display Notifcations\n  openDialog() {\n    const dialogRef = this.dialog.open(NotificationDialogComponent, {\n      width: '250px',\n      data: 'Add new Employee?'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'Yes') {\n        this.onSubmit();\n      }\n    });\n  }\n  ngOnInit() {}\n  cancel() {\n    this.router.navigate(['/home']);\n  }\n  onSubmit() {\n    let employee = new Employee();\n    employee.surname = this.employeeForm.value.surname;\n    employee.firstName = this.employeeForm.value.firstName;\n    employee.email_Address = this.employeeForm.value.email_Address;\n    employee.physical_Address = this.employeeForm.value.physical_Address;\n    employee.phoneNumber = this.employeeForm.value.phoneNumber;\n    this.employeeservice.AddEmployee(employee).subscribe(result => {\n      this.router.navigate(['/view-employees']);\n    });\n    // checkEmail() {\n    //   this.employeeservice.checkEmail(this.email).subscribe(\n    //     (response) => {\n    //       this.message = response.message;\n    //     },\n    //     (error) => {\n    //       console.error('Error checking email:', error);\n    //     }\n    //   );\n    // }\n    this.showSuccessMessage('Employee Added successfully');\n  }\n  // Success notification\n  showSuccessMessage(message) {\n    const snackBarRef = this.snackBar.open(message, 'Ok', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n}\nAddEmployeeComponent.ɵfac = function AddEmployeeComponent_Factory(t) {\n  return new (t || AddEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.EmailService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n};\nAddEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEmployeeComponent,\n  selectors: [[\"app-add-employee\"]],\n  viewQuery: function AddEmployeeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toastContainer = _t.first);\n    }\n  },\n  decls: 50,\n  vars: 8,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-2\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-body\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"surname\", 1, \"col-md-1\", 2, \"font-weight\", \"bold\"], [1, \"col-md-6\"], [\"placeholder\", \"Enter Surname\", \"name\", \"surname\", \"formControlName\", \"surname\", 1, \"form-control\", 3, \"required\"], [\"for\", \"firstName\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"placeholder\", \"Enter First Name\", \"name\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"email_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"placeholder\", \"xxxxx@gmail.com\", \"name\", \"email_Address\", \"formControlName\", \"email_Address\", 1, \"form-control\", 3, \"required\"], [\"class\", \"message\", 4, \"ngIf\"], [\"for\", \"physical_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"physical_Address\", \"placeholder\", \"Enter Address\", \"name\", \"physical_Address\", \"formControlName\", \"physical_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"phoneNumber\", 1, \"col-sm-2\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"placeholder\", \"Enter 10-digit number\", \"name\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"message\"]],\n  template: function AddEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"div\", 0)(7, \"div\", 4)(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 7)(11, \"h4\", 8);\n      i0.ɵɵtext(12, \"Add Employee \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"hr\");\n      i0.ɵɵelementStart(14, \"div\", 9)(15, \"div\", 1)(16, \"form\", 10);\n      i0.ɵɵlistener(\"ngSubmit\", function AddEmployeeComponent_Template_form_ngSubmit_16_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(17, \"div\", 11)(18, \"label\", 12);\n      i0.ɵɵtext(19, \"Surname:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 13);\n      i0.ɵɵelement(21, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 11)(23, \"span\")(24, \"label\", 15);\n      i0.ɵɵtext(25, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 16);\n      i0.ɵɵelement(27, \"input\", 17);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"div\", 11)(29, \"label\", 18);\n      i0.ɵɵtext(30, \"Email Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 16);\n      i0.ɵɵelement(32, \"input\", 19);\n      i0.ɵɵtemplate(33, AddEmployeeComponent_div_33_Template, 2, 1, \"div\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 11)(35, \"label\", 21);\n      i0.ɵɵtext(36, \"Physical Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 16);\n      i0.ɵɵelement(38, \"input\", 22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\", 11)(40, \"label\", 23);\n      i0.ɵɵtext(41, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\", 16);\n      i0.ɵɵelement(43, \"input\", 24);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 11)(45, \"div\", 25)(46, \"button\", 26);\n      i0.ɵɵtext(47, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"button\", 27);\n      i0.ɵɵlistener(\"click\", function AddEmployeeComponent_Template_button_click_48_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(49, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.employeeForm.valid);\n    }\n  },\n  dependencies: [i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.FormGroupDirective, i7.FormControlName, i8.NavbarComponent],\n  styles: [\".form-group[_ngcontent-%COMP%] {\\r\\n    .label{\\r\\n        font-size: 100px;\\r\\n    }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vRW1wbG95ZWVzL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO1FBQ0ksZ0JBQWdCO0lBQ3BCO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1ncm91cCB7XHJcbiAgICAubGFiZWx7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMDBweDtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\", \".message[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  background-color: lightgray;\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vRW1wbG95ZWVzL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLGFBQWE7RUFDYiwyQkFBMkI7RUFDM0IsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubWVzc2FnZSB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ViewContainerRef","FormControl","FormGroup","Validators","Employee","NotificationDialogComponent","i0","AddEmployeeComponent","constructor","employeeservice","emailservice","router","dialog","snackBar","surname","required","firstName","email_Address","physical_Address","phoneNumber","openDialog","dialogRef","open","width","data","afterClosed","subscribe","result","onSubmit","ngOnInit","cancel","navigate","employee","employeeForm","value","AddEmployee","showSuccessMessage","message","snackBarRef","duration","horizontalPosition","verticalPosition","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\add-employee\\add-employee.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\add-employee\\add-employee.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EmailService } from 'src/app/service/email.service';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { EmployeeService } from 'src/app/service/employee.service';\nimport { Employee } from 'src/app/shared/employee';\nimport { NotificationDialogComponent } from '../notification-dialog/notification-dialog.component';\n\n\n\n\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.css'],\n//   template: `\n//   <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\" required>\n//   <button (click)=\"checkEmail()\">Check Email</button>\n\n//   <div *ngIf=\"message\" class=\"message\">\n//     {{ message }}\n//   </div>\n// `,\nstyles: [`\n.message {\n  padding: 10px;\n  background-color: lightgray;\n  margin-top: 10px;\n}\n`]\n\n})\nexport class AddEmployeeComponent implements OnInit {\n  @ViewChild('toastContainer', { read: ViewContainerRef })\n  toastContainer!: ViewContainerRef;\n  email!: string;\n  message!: string;\n\n   constructor(private employeeservice: EmployeeService, emailservice: EmailService,  private router: Router, private dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n     employeeForm: FormGroup = new FormGroup({\n       surname: new FormControl('',[Validators.required]),\n       firstName: new FormControl('',[Validators.required]),\n       email_Address: new FormControl('',[Validators.required]),\n       physical_Address: new FormControl('',[Validators.required]),\n       phoneNumber: new FormControl('',[Validators.required])\n    \n     })\n  //EmailVerification\n\n  // checkEmail() {\n  //   this.employeeservice.checkEmail(this.email).subscribe(\n  //     (response) => {\n  //       this.message = response.message;\n  //     },\n  //     (error) => {\n  //       console.error('Error checking email:', error);\n  //     }\n  //   );\n  // }\n\n\n     Roles: string[] = ['Driver', 'Administrator', 'Waiter'];\n\n     // Display Notifcations\n\n     openDialog():void{\n      const dialogRef = this.dialog.open(NotificationDialogComponent,{\n        width: '250px',\n        data: 'Add new Employee?'\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        if(result == 'Yes'){\n          this.onSubmit();\n        }\n      })\n    }\n    \n\n    ngOnInit(): void {\n    \n    }\n\n    cancel(){\n      this.router.navigate(['/home'])\n    }\n  \n       onSubmit(){\n\n        let employee = new Employee();\n        employee.surname = this.employeeForm.value.surname;\n        employee.firstName = this.employeeForm.value.firstName;\n        employee.email_Address = this.employeeForm.value.email_Address;\n        employee.physical_Address = this.employeeForm.value.physical_Address;\n        employee.phoneNumber = this.employeeForm.value.phoneNumber;\n            this.employeeservice.AddEmployee(employee).subscribe(result => {\n                  this.router.navigate(['/view-employees'])\n            });\n            // checkEmail() {\n            //   this.employeeservice.checkEmail(this.email).subscribe(\n            //     (response) => {\n            //       this.message = response.message;\n            //     },\n            //     (error) => {\n            //       console.error('Error checking email:', error);\n            //     }\n            //   );\n            // }\n            this.showSuccessMessage('Employee Added successfully');\n\n          }\n          // Success notification\n          showSuccessMessage(message:string) : void {\n            const snackBarRef: MatSnackBarRef<any> = this.snackBar.open(message, 'Ok', {\n              duration: 3000, // Duration in milliseconds\n              horizontalPosition: 'center',\n              verticalPosition: 'bottom'\n            });\n          }\n\n}\n","\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n      <div class=\"col-md-2\">\r\n          <app-navbar></app-navbar>\r\n      </div>\r\n  <div class=\"col-md-10 order-md-2\">\r\n<hr>\r\n<div class=\"container-fluid\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-8\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px;\">Add Employee\r\n          </h4>\r\n          <hr>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <form [formGroup]=\"employeeForm\" class=\"form-horizontal\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-1\" style=\"font-weight: bold;\" for=\"surname\">Surname:</label>\r\n                  <div class=\"col-md-6\">\r\n                    <input class=\"form-control\" placeholder=\"Enter Surname\" [required]=\"true\" name=\"surname\"\r\n                      formControlName=\"surname\">\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <span>\r\n                    <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"firstName\">First Name:</label>\r\n                    <div class=\"col-sm-6\">\r\n                      <input class=\"form-control\" placeholder=\"Enter First Name\" [required]=\"true\" name=\"firstName\"\r\n                        formControlName=\"firstName\">\r\n                    </div>\r\n                  </span>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"email_Address\">Email Address:</label>\r\n                  <div class=\"col-sm-6\">\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"xxxxx@gmail.com\" [required]=\"true\"\r\n                      name=\"email_Address\" formControlName=\"email_Address\">\r\n                    <div *ngIf=\"message\" class=\"message\">\r\n                      {{ message }}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"physical_Address\">Physical Address:</label>\r\n                  <div class=\"col-sm-6\">\r\n                    <input class=\"form-control\" type=\"text\" id=\"physical_Address\" placeholder=\"Enter Address\"\r\n                      name=\"physical_Address\" [required]=\"true\" formControlName=\"physical_Address\">\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-sm-2\" style=\"font-weight: bold;\" for=\"phoneNumber\">Phone Number:</label>\r\n                  <div class=\"col-sm-6\">\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Enter 10-digit number\" [required]=\"true\"\r\n                      name=\"phoneNumber\" formControlName=\"phoneNumber\">\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-sm-offset-1 col-sm-6\">\r\n                    <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!employeeForm.valid\"\r\n                      class=\"btn btn-sm btn-success\">Add</button>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  </div>\r\n</div>\r\n  </div>\r\n</div>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}