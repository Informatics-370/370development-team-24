{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/inventory.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../../../navbar/navbar.component\";\nfunction ViewInventoryitemsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function ViewInventoryitemsComponent_div_10_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const type_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSelectType(type_r2));\n    });\n    i0.ɵɵelementStart(1, \"div\", 9)(2, \"div\", 10)(3, \"h3\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 12);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ViewInventoryitemsComponent_div_10_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const type_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onViewItemsClick(type_r2));\n    });\n    i0.ɵɵtext(8, \" View Items \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const type_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"selected\", (ctx_r0.selectedType == null ? null : ctx_r0.selectedType.inventory_TypeId) === type_r2.inventory_TypeId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", type_r2.inventoryTypeName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", type_r2.description, \" \");\n  }\n}\nfunction ViewInventoryitemsComponent_div_11_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r7.inventory_ItemId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r7.itemName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r7.description);\n  }\n}\nfunction ViewInventoryitemsComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"table\", 15)(4, \"thead\")(5, \"tr\")(6, \"th\");\n    i0.ɵɵtext(7, \"Item ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Item Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Description\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"tbody\");\n    i0.ɵɵtemplate(13, ViewInventoryitemsComponent_div_11_tr_13_Template, 7, 3, \"tr\", 16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Inventory Items of \", ctx_r1.selectedType.name, \"\");\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.inventoryItems);\n  }\n}\nexport class ViewInventoryitemsComponent {\n  constructor(route, inventoryService) {\n    this.route = route;\n    this.inventoryService = inventoryService;\n    this.inventoryItems = [];\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.typeId = +params['typeId'];\n      this.GetInventoryItemsByType(this.typeId);\n    });\n  }\n  GetInventoryItemsByType(typeId) {\n    this.inventoryService.GetInventoryItemsByType(typeId).subscribe(items => {\n      this.inventoryItems = items;\n    }, error => {\n      console.error('Failed to fetch inventory items:', error);\n    });\n  }\n}\nViewInventoryitemsComponent.ɵfac = function ViewInventoryitemsComponent_Factory(t) {\n  return new (t || ViewInventoryitemsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.InventoryService));\n};\nViewInventoryitemsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ViewInventoryitemsComponent,\n  selectors: [[\"app-view-inventoryitems\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\", \"font-weight\", \"bolder\"], [1, \"inventory-type-cards-container\"], [\"class\", \"col-sm-6\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"table-container\", 4, \"ngIf\"], [1, \"col-sm-6\", 3, \"click\"], [1, \"card\", \"my-3\", 2, \"background-color\", \"lightgrey\", \"border-radius\", \"15px\", \"border-color\", \"rgb(182, 99, 182)\"], [1, \"card-body\"], [1, \"card-title\", 2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\"], [1, \"card-text\", 2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\"], [1, \"btn\", \"btn-dark\", 2, \"margin-left\", \"210px\", \"border-radius\", \"20px\", 3, \"click\"], [1, \"table-container\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ViewInventoryitemsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\")(6, \"h3\", 4);\n      i0.ɵɵtext(7, \" Inventory Types \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1);\n      i0.ɵɵtemplate(10, ViewInventoryitemsComponent_div_10_Template, 9, 4, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(11, ViewInventoryitemsComponent_div_11_Template, 14, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.inventoryTypes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedType && ctx.inventoryItems.length > 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAYcA,8BAIC;IADCA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IAE5BA,8BAIC;IAMKA,YACF;IAAAA,iBAAK;IACLA,6BAGC;IACCA,YACF;IAAAA,iBAAI;IACJA,kCAIC;IADCA;MAAA;MAAA;MAAA;MAAA,OAASA,+CAAsB;IAAA,EAAC;IAEhCA,4BACF;IAAAA,iBAAS;;;;;IAtBXA,eAA2E;IAA3EA,oIAA2E;IAQvEA,eACF;IADEA,0DACF;IAKEA,eACF;IADEA,oDACF;;;;;IA2BNA,0BAAwC;IAClCA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;;;;IAF3BA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAAsB;IAAtBA,yCAAsB;;;;;IAflCA,+BAA+E;IACzEA,YAA0C;IAAAA,iBAAK;IACnDA,iCAAqB;IAGXA,uBAAO;IAAAA,iBAAK;IAChBA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,2BAAI;IAAAA,4BAAW;IAAAA,iBAAK;IAIxBA,8BAAO;IACLA,oFAKK;IACPA,iBAAQ;;;;IAjBNA,eAA0C;IAA1CA,0EAA0C;IAWrBA,gBAAiB;IAAjBA,+CAAiB;;;ACnDpD,OAAM,MAAOC,2BAA2B;EAKtCC,YACUC,KAAqB,EACrBC,gBAAkC;IADlC,UAAK,GAALD,KAAK;IACL,qBAAgB,GAAhBC,gBAAgB;IAJ1B,mBAAc,GAAoB,EAAE;EAKjC;EAEHC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACE,MAAM,GAAG,CAACF,MAAM,CAAC,QAAQ,CAAC;MAC/B,IAAI,CAACG,uBAAuB,CAAC,IAAI,CAACD,MAAM,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAC,uBAAuB,CAACD,MAAc;IACpC,IAAI,CAACJ,gBAAgB,CAACK,uBAAuB,CAACD,MAAM,CAAC,CAACD,SAAS,CAC5DG,KAAK,IAAI;MACR,IAAI,CAACC,cAAc,GAAGD,KAAK;IAC7B,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CACF;EACH;;AA1BWX,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVxClB,8BAA6B;MAGrBA,6BAAyB;MAC3BA,iBAAM;MACNA,8BAAkC;MAG5BA,iCACF;MAAAA,iBAAK;MACLA,8BAA4C;MAExCA,8EAgCM;MACRA,iBAAM;MAIVA,+EAoBM;MACRA,iBAAM;;;MAxDqBA,gBAAiB;MAAjBA,4CAAiB;MAmCZA,eAA+C;MAA/CA,wEAA+C","names":["i0","ViewInventoryitemsComponent","constructor","route","inventoryService","ngOnInit","params","subscribe","typeId","GetInventoryItemsByType","items","inventoryItems","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\view-inventoryitems\\view-inventoryitems.component.html","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\view-inventoryitems\\view-inventoryitems.component.ts"],"sourcesContent":["<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <app-navbar></app-navbar>\n      </div>\n      <div class=\"col-md-10 order-md-1\">\n        <div>\n          <h3 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px; font-weight: bolder;\">\n            Inventory Types\n          </h3>\n          <div class=\"inventory-type-cards-container\">\n            <div class=\"row\">\n              <div\n                class=\"col-sm-6\"\n                *ngFor=\"let type of inventoryTypes\"\n                (click)=\"onSelectType(type)\"\n              >\n                <div\n                  class=\"card my-3\"\n                  [class.selected]=\"selectedType?.inventory_TypeId === type.inventory_TypeId\"\n                  style=\"background-color: lightgrey; border-radius: 15px; border-color: rgb(182, 99, 182);\"\n                >\n                  <div class=\"card-body\">\n                    <h3\n                      class=\"card-title\"\n                      style=\"text-align: center; font-family: 'Times New Roman', Times, serif;\"\n                    >\n                      {{ type.inventoryTypeName }}\n                    </h3>\n                    <p\n                      class=\"card-text\"\n                      style=\"text-align: center; font-family: 'Times New Roman', Times, serif;\"\n                    >\n                      {{ type.description }}\n                    </p>\n                    <button\n                      class=\"btn btn-dark\"\n                      style=\"margin-left: 210px; border-radius: 20px;\"\n                      (click)=\"onViewItemsClick(type)\"\n                    >\n                      View Items\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"table-container\" *ngIf=\"selectedType && inventoryItems.length > 0\">\n          <h2>Inventory Items of {{ selectedType.name }}</h2>\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th>Item ID</th>\n                <th>Item Name</th>\n                <th>Description</th>\n                <!-- Add additional table headers as needed -->\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let item of inventoryItems\">\n                <td>{{ item.inventory_ItemId }}</td>\n                <td>{{ item.itemName }}</td>\n                <td>{{ item.description }}</td>\n                <!-- Add additional table cells as needed -->\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\n\n@Component({\n  selector: 'app-view-inventoryitems',\n  templateUrl: './view-inventoryitems.component.html',\n  styleUrls: ['./view-inventoryitems.component.css']\n})\nexport class ViewInventoryitemsComponent {\n\n  typeId!: number;\n  inventoryItems: InventoryItem[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private inventoryService: InventoryService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.typeId = +params['typeId'];\n      this.GetInventoryItemsByType(this.typeId);\n    });\n  }\n\n  GetInventoryItemsByType(typeId: number): void {\n    this.inventoryService.GetInventoryItemsByType(typeId).subscribe(\n      (items) => {\n        this.inventoryItems = items;\n      },\n      (error) => {\n        console.error('Failed to fetch inventory items:', error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}