{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/data.Service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/icon\";\nfunction RegisterComponent_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const title_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", title_r4.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", title_r4.viewValue, \" \");\n  }\n}\nfunction RegisterComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_p_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Password match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_p_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Password do not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    PasswordVisibility() {\n      this.visablePassword = !this.visablePassword;\n    }\n    passwordMatchValidator(formGroup) {\n      const Password = formGroup.get('Password')?.value;\n      const ConfirmPassword = formGroup.get('ConfirmPassword')?.value;\n      if (Password !== ConfirmPassword) {\n        return {\n          'mismatch': true\n        };\n      }\n      return null;\n    }\n    constructor(router, dataService, fb, snackBar) {\n      this.router = router;\n      this.dataService = dataService;\n      this.fb = fb;\n      this.snackBar = snackBar;\n      this.password = '';\n      this.Confirmpassword = '';\n      this.passwordsMatch = false;\n      this.visablePassword = false;\n      this.hide = false;\n      this.titles = [{\n        value: '0',\n        viewValue: 'MISS'\n      }, {\n        value: '1',\n        viewValue: 'MR'\n      }, {\n        value: '2',\n        viewValue: 'DR'\n      }, {\n        value: '3',\n        viewValue: 'MRS'\n      }, {\n        value: '4',\n        viewValue: 'Other'\n      }];\n      this.registerFormGroup = this.fb.group({\n        UserName: ['', [Validators.required, Validators.email]],\n        Name: ['', [Validators.required]],\n        Surname: ['', [Validators.required]],\n        PhysicalAddress: ['', [Validators.required]],\n        PhoneNumber: ['', [Validators.required, Validators.maxLength(10)]],\n        Password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n        ConfirmPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]]\n      }, {\n        validators: this.passwordMatchValidator\n      });\n    }\n    ngOnInit() {}\n    RegisterUser() {\n      if (this.registerFormGroup.valid) {\n        this.snackBar.open(`Registered successfully`, 'X', {\n          duration: 5000\n        });\n      } else {\n        this.snackBar.open(`New password and confirm password do not match`, 'X', {\n          duration: 5000\n        });\n      }\n      this.passwordsMatch = this.password === this.Confirmpassword;\n      if (this.registerFormGroup.valid) {\n        this.dataService.RegisterUser(this.registerFormGroup.value).subscribe(() => {\n          this.registerFormGroup.reset();\n          this.router.navigate(['/login']).then(navigated => {\n            if (navigated) {\n              this.snackBar.open(`Registered successfully`, 'X', {\n                duration: 5000\n              });\n            }\n          });\n        }, response => {\n          if (response.status === 403) {\n            this.snackBar.open(response.error, 'X', {\n              duration: 5000\n            });\n          }\n          if (response.status === 500) {\n            this.snackBar.open('Inavild email address', 'X', {\n              duration: 5000\n            });\n          }\n        });\n      }\n    }\n  }\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 59,\n    vars: 11,\n    consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"login-wrapper\", \"container\"], [1, \"box\"], [\"mat-card-avatar\", \"\", \"src\", \"../../assets/Nav_image/Africanacity.png\", \"alt\", \"\", \"width\", \"40\", \"height\", \"40\", 1, \"d-inline-block\", \"align-text-top\"], [1, \"form\", 3, \"formGroup\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"floatLabel\", \"always\", 1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Enter your name\", \"formControlName\", \"Name\"], [1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Enter your surname\", \"formControlName\", \"Surname\"], [\"matInput\", \"\", \"placeholder\", \"Enter a valid Email address\", \"formControlName\", \"UserName\"], [\"matInput\", \"\", \"placeholder\", \"Enter a valid Phone Number\", \"formControlName\", \"PhoneNumber\"], [\"matInput\", \"\", \"placeholder\", \"Enter your address\", \"formControlName\", \"PhysicalAddress\"], [\"matInput\", \"\", \"name\", \"Password\", \"formControlName\", \"Password\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"matSuffix\", \"\", 3, \"click\"], [\"matInput\", \"\", \"name\", \"Confirmpassword\", \"formControlName\", \"ConfirmPassword\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn-block\", 2, \"margin-right\", \"1em\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"routerLink\", \"../login\", 1, \"btn-block\"], [4, \"nglf\"], [3, \"value\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \" MMINO \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"img\", 2);\n        i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n        i0.ɵɵtext(7, \"Register \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"form\", 3)(9, \"mat-card-content\")(10, \"mat-form-field\")(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-select\");\n        i0.ɵɵtemplate(14, RegisterComponent_mat_option_14_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"mat-form-field\", 5)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-form-field\", 7)(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Surname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"br\");\n        i0.ɵɵelementStart(25, \"mat-form-field\")(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"mat-form-field\", 7)(30, \"mat-label\");\n        i0.ɵɵtext(31, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelementStart(34, \"mat-form-field\", 7)(35, \"mat-label\");\n        i0.ɵɵtext(36, \"Physical Address \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"textarea\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵelementStart(39, \"mat-form-field\", 7)(40, \"mat-label\");\n        i0.ɵɵtext(41, \"Password \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_42_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"mat-icon\", 13);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_mat_icon_click_43_listener() {\n          return ctx.PasswordVisibility();\n        });\n        i0.ɵɵtext(44);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(45, \"br\");\n        i0.ɵɵelementStart(46, \"mat-form-field\", 7)(47, \"mat-label\");\n        i0.ɵɵtext(48, \"Confirm Password \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_49_listener($event) {\n          return ctx.Confirmpassword = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"mat-icon\", 13);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_mat_icon_click_50_listener() {\n          return ctx.PasswordVisibility();\n        });\n        i0.ɵɵtext(51);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(52, RegisterComponent_div_52_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_53_listener() {\n          return ctx.RegisterUser();\n        });\n        i0.ɵɵtext(54, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"button\", 17);\n        i0.ɵɵtext(56, \"Cancel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(57, RegisterComponent_p_57_Template, 2, 0, \"p\", 18);\n        i0.ɵɵtemplate(58, RegisterComponent_p_58_Template, 2, 0, \"p\", 18);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_8_0;\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerFormGroup);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.titles);\n        i0.ɵɵadvance(28);\n        i0.ɵɵproperty(\"type\", ctx.visablePassword ? \"text\" : \"password\")(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.visablePassword ? \"visibility_off\" : \"visibility\", \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.visablePassword ? \"text\" : \"password\")(\"ngModel\", ctx.Confirmpassword);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.visablePassword ? \"visibility_off\" : \"visibility\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.registerFormGroup.get(\"ConfirmPassword\")) == null ? null : tmp_8_0.errors == null ? null : tmp_8_0.errors[\"mismatch\"]) && ((tmp_8_0 = ctx.registerFormGroup.get(\"ConfirmPassword\")) == null ? null : tmp_8_0.dirty));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"nglf\", ctx.passwordsMatch);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nglf\", !ctx.passwordsMatch);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i6.MatOption, i7.MatFormField, i7.MatLabel, i7.MatSuffix, i8.MatInput, i9.MatSelect, i10.MatCard, i10.MatCardAvatar, i10.MatCardContent, i10.MatCardHeader, i10.MatCardSubtitle, i10.MatCardTitle, i11.MatButton, i12.MatIcon]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}