{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = 'https://localhost:5116/api/';\n    // private apiURL = 'http://localhost:49991/api/Employee';\n    // private apiUrl = 'http://localhost:5000/api/email';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        ContentType: 'application/json'\n      })\n    };\n  }\n  checkEmail(email) {\n    return this.httpClient.post(`${this.apiUrl}`, {\n      email\n    });\n  }\n  //  searchFunctions(searchTerm: string): Observable<Employee[]> {\n  //    return this.httpClient.get<Employee[]>(`${this.apiUrl}Employee/search=${searchTerm}`);}\n  searchFunctions(searchTerm) {\n    return this.httpClient.get(`${this.apiUrl}Employee/search` + \"/\" + searchTerm).pipe(map(result => result));\n  }\n  /* For Employee Function */\n  getEmployee(employeeId) {\n    return this.httpClient.get(`${this.apiUrl}Employee/GetEmployee` + \"/\" + employeeId).pipe(map(result => result));\n  }\n  GetAllEmployees() {\n    return this.httpClient.get(`${this.apiUrl}Employee/GetAllEmployees`).pipe(map(result => result));\n  }\n  AddEmployee(employee) {\n    return this.httpClient.post(`${this.apiUrl}Employee/AddEmployee`, employee, this.httpOptions);\n  }\n  deleteEmployee(employeeId) {\n    return this.httpClient.delete(`${this.apiUrl}Employee/DeleteEmployee` + \"/\" + employeeId, this.httpOptions);\n  }\n  EditEmployee(employeeId, employee) {\n    return this.httpClient.put(`${this.apiUrl}Employee/EditEmployee/${employeeId}`, employee, this.httpOptions);\n  }\n  /* For Help Function */\n  getHelp(helpId) {\n    return this.httpClient.get(`${this.apiUrl}Controller/GetHelp` + \"/\" + helpId).pipe(map(result => result));\n  }\n  GetAllHelp() {\n    return this.httpClient.get(`${this.apiUrl}Controller/GetAllHelp`).pipe(map(result => result));\n  }\n  AddHelp(help) {\n    return this.httpClient.post(`${this.apiUrl}Controller/AddHelp`, help, this.httpOptions);\n  }\n  deleteHelp(helpId) {\n    return this.httpClient.delete(`${this.apiUrl}Controller/DeleteHelp` + \"/\" + helpId, this.httpOptions);\n  }\n  editHelp(helpId, help) {\n    return this.httpClient.put(`${this.apiUrl}Controller/EditHelp/${helpId}`, help, this.httpOptions);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","map","EmployeeService","constructor","httpClient","headers","ContentType","checkEmail","email","post","apiUrl","searchFunctions","searchTerm","get","pipe","result","getEmployee","employeeId","GetAllEmployees","AddEmployee","employee","httpOptions","deleteEmployee","delete","EditEmployee","put","getHelp","helpId","GetAllHelp","AddHelp","help","deleteHelp","editHelp","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\service\\employee.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, Subject } from 'rxjs';\r\nimport { ViewEmployeesComponent } from '../administration/Employees/view-employees/view-employees.component';\r\nimport { Help } from '../shared/help';\r\nimport { Employee } from '../shared/employee';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  apiUrl = 'https://localhost:5116/api/'\r\n  // private apiURL = 'http://localhost:49991/api/Employee';\r\n  // private apiUrl = 'http://localhost:5000/api/email';\r\n\r\n\r\n  httpOptions ={\r\n    headers: new HttpHeaders({\r\n      ContentType: 'application/json'\r\n    })\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient) { \r\n  }\r\n  checkEmail(email: string) {\r\n    return this.httpClient.post<any>(`${this.apiUrl}`, { email });\r\n  }\r\n  \r\n  //  searchFunctions(searchTerm: string): Observable<Employee[]> {\r\n  //    return this.httpClient.get<Employee[]>(`${this.apiUrl}Employee/search=${searchTerm}`);}\r\n  searchFunctions(searchTerm: string){\r\n    return this.httpClient.get<Employee[]>(`${this.apiUrl}Employee/search`+ \"/\" + searchTerm)\r\n    .pipe(map(result => result))\r\n  }\r\n\r\n  \r\n\r\n\r\n/* For Employee Function */\r\n  getEmployee(employeeId: number) {\r\n    return this.httpClient.get(`${this.apiUrl}Employee/GetEmployee` + \"/\" + employeeId)\r\n    .pipe(map(result => result))\r\n  }\r\n\r\n  GetAllEmployees(): Observable<any>{\r\n    return this.httpClient.get(`${this.apiUrl}Employee/GetAllEmployees`)\r\n    .pipe(map(result => result))\r\n  }\r\n\r\n\r\n  AddEmployee(employee: Employee)\r\n  {\r\n     return this.httpClient.post(`${this.apiUrl}Employee/AddEmployee`, employee, this.httpOptions)\r\n  }\r\n\r\n\r\n  deleteEmployee(employeeId: Number)\r\n  {\r\n    return this.httpClient.delete<string>(`${this.apiUrl}Employee/DeleteEmployee` + \"/\" + employeeId, this.httpOptions)\r\n  }\r\n\r\n  EditEmployee(employeeId: number, employee: Employee)\r\n   {\r\n     return this.httpClient.put(`${this.apiUrl}Employee/EditEmployee/${employeeId}`,employee, this.httpOptions)\r\n   }\r\n\r\n \r\n   \r\n  /* For Help Function */\r\n\r\n  \r\n  getHelp(helpId: Number) {\r\n    return this.httpClient.get(`${this.apiUrl}Controller/GetHelp` + \"/\" + helpId)\r\n    .pipe(map(result => result))\r\n  }\r\n\r\n  GetAllHelp(): Observable<any>{\r\n    return this.httpClient.get(`${this.apiUrl}Controller/GetAllHelp`)\r\n    .pipe(map(result => result))\r\n  }\r\n\r\n  AddHelp(help: Help)\r\n  {\r\n    return this.httpClient.post(`${this.apiUrl}Controller/AddHelp`, help, this.httpOptions)\r\n  }\r\n\r\n  deleteHelp(helpId: Number)\r\n  {\r\n    return this.httpClient.delete<string>(`${this.apiUrl}Controller/DeleteHelp` + \"/\" + helpId, this.httpOptions)\r\n  }\r\n\r\n  editHelp(helpId: Number, help: Help)\r\n  {\r\n    return this.httpClient.put(`${this.apiUrl}Controller/EditHelp/${helpId}`,help, this.httpOptions)\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}