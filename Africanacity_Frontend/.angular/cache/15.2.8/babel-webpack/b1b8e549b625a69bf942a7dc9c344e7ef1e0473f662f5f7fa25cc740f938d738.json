{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MenuItemCategory } from 'src/app/shared/menu-item-category';\nimport { ConfirmationDialogComponent } from 'src/app/administration/menu-types/add-menu-type/confirmation-dialog/confirmation-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/data.Service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"../../../../navbar/navbar.component\";\nconst _c0 = [\"toastContainer\"];\nexport let CreateMenuItemCategoryComponent = /*#__PURE__*/(() => {\n  class CreateMenuItemCategoryComponent {\n    constructor(dataService, router, route, fb, dialog, snackBar) {\n      this.dataService = dataService;\n      this.router = router;\n      this.route = route;\n      this.fb = fb;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.MenuItemCategoryId = 0;\n      this.AddMenuItemCategoryForm = this.fb.group({\n        MenuItemCategoryId: [0, [Validators.required]],\n        name: ['', [Validators.required]],\n        description: ['', [Validators.required]]\n      });\n    }\n    //confirmation dialog method\n    openDialog() {\n      const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n        width: '250px',\n        data: 'Add New Menu Item Category?'\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result == 'Yes') {\n          this.AddMenuItemCategory();\n        }\n      });\n    }\n    ngOnInit() {}\n    cancel() {\n      this.router.navigate(['/menu-item-category']);\n    }\n    AddMenuItemCategory() {\n      let menuItemCategory = new MenuItemCategory();\n      menuItemCategory.name = this.AddMenuItemCategoryForm.value.name;\n      menuItemCategory.description = this.AddMenuItemCategoryForm.value.description;\n      this.dataService.AddMenuItemCategory(menuItemCategory).subscribe(add => {\n        this.router.navigate(['/menu-item-category']);\n      });\n      this.showSuccessMessage('Menu Item Category added successfully!');\n    }\n    //success message\n    showSuccessMessage(message) {\n      const snackBarRef = this.snackBar.open(message, 'Ok', {\n        duration: 3000,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n      snackBarRef.afterDismissed().subscribe(() => {\n        this.toastContainer.clear();\n      });\n    }\n  }\n  CreateMenuItemCategoryComponent.ɵfac = function CreateMenuItemCategoryComponent_Factory(t) {\n    return new (t || CreateMenuItemCategoryComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n  };\n  CreateMenuItemCategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateMenuItemCategoryComponent,\n    selectors: [[\"app-create-menu-item-category\"]],\n    viewQuery: function CreateMenuItemCategoryComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toastContainer = _t.first);\n      }\n    },\n    decls: 29,\n    vars: 4,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [1, \"heading\"], [1, \"container\", \"edit-form\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"col-sm-3\", \"label\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-4\"], [\"id\", \"name\", \"placeholder\", \"Enter Name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"required\"], [\"for\", \"description\", 1, \"col-sm-3\", \"label\", 2, \"font-weight\", \"bold\"], [\"id\", \"description\", \"placeholder\", \"Enter Description\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n    template: function CreateMenuItemCategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"app-navbar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\")(6, \"h1\", 4);\n        i0.ɵɵtext(7, \"Create Menu Item Category\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateMenuItemCategoryComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.AddMenuItemCategory();\n        });\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Menu Item Category Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 11);\n        i0.ɵɵtext(19, \"Menu Item Category Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 9);\n        i0.ɵɵelement(21, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵelementStart(23, \"div\", 7)(24, \"div\", 13)(25, \"button\", 14);\n        i0.ɵɵtext(26, \"Confirm\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function CreateMenuItemCategoryComponent_Template_button_click_27_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(28, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.AddMenuItemCategoryForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.AddMenuItemCategoryForm.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i6.NavbarComponent],\n    styles: [\".heading[_ngcontent-%COMP%]{height:50px;padding-top:7px;font-family:Times New Roman,Times,serif;text-align:center}.edit-form[_ngcontent-%COMP%]{align-items:center}.label[_ngcontent-%COMP%]{margin-bottom:5px;padding-bottom:5px}\"]\n  });\n  return CreateMenuItemCategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}