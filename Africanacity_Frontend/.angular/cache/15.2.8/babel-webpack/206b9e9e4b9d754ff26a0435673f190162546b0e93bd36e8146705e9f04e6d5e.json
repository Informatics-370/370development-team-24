{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SupplierType } from 'src/app/shared/SupplierTypes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/supplier.service\";\nimport * as i2 from \"@angular/router\";\nexport class EditSuppliertypeComponent {\n  constructor(supplierservice, router, activated) {\n    this.supplierservice = supplierservice;\n    this.router = router;\n    this.activated = activated;\n    this.editSupplierType = new SupplierType();\n    this.editSupplierTypeForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.activated.params.subscribe(params => {\n      this.supplierservice.GetSupplierType(params['id']).subscribe(result => {\n        this.editSupplierType = result;\n        this.editSupplierTypeForm.controls['name'].setValue(this.editSupplierType.name);\n        this.editSupplierTypeForm.controls['description'].setValue(this.editSupplierType.description);\n      });\n    });\n  }\n  cancel() {\n    this.router.navigate(['/view-suppliertypes']);\n  }\n  onSubmit() {\n    let suppliertype = new SupplierType();\n    suppliertype.name = this.editSupplierTypeForm.value.name;\n    suppliertype.description = this.editSupplierTypeForm.value.description;\n    this.supplierservice.EditSupplierType(this.editSupplierType.supplier_TypeId, suppliertype).subscribe(result => {\n      this.router.navigate(['view-suppliertypes']);\n    });\n  }\n}\nEditSuppliertypeComponent.ɵfac = function EditSuppliertypeComponent_Factory(t) {\n  return new (t || EditSuppliertypeComponent)(i0.ɵɵdirectiveInject(i1.SupplierService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditSuppliertypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditSuppliertypeComponent,\n  selectors: [[\"app-edit-suppliertype\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditSuppliertypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-suppliertype works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAGnE,SAASC,YAAY,QAAQ,8BAA8B;;;;AAO3D,OAAM,MAAOC,yBAAyB;EAEpCC,YAAoBC,eAAgC,EAC1CC,MAAc,EACdC,SAAwB;IAFd,oBAAe,GAAfF,eAAe;IACzB,WAAM,GAANC,MAAM;IACN,cAAS,GAATC,SAAS;IAEjB,qBAAgB,GAAiB,IAAIL,YAAY,EAAE;IAEnD,yBAAoB,GAAc,IAAIF,SAAS,CAAC;MAC7CQ,IAAI,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAC/CC,WAAW,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,CAAC;KACvD,CAAC;EAPkC;EASpCE,QAAQ;IACN,IAAI,CAACJ,SAAS,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACzC,IAAI,CAACP,eAAe,CAACS,eAAe,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAACC,SAAS,CAACE,MAAM,IAAG;QACpE,IAAI,CAACC,gBAAgB,GAAGD,MAAsB;QAC9C,IAAI,CAACE,oBAAoB,CAACC,QAAQ,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACH,gBAAgB,CAACR,IAAI,CAAC;QAC/E,IAAI,CAACS,oBAAoB,CAACC,QAAQ,CAAC,aAAa,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACH,gBAAgB,CAACN,WAAW,CAAC;MAC/F,CAAC,CAAC;IACF,CAAC,CAAC;EAEJ;EAEAU,MAAM;IACJ,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;EAC/C;EAEAC,QAAQ;IACN,IAAIC,YAAY,GAAG,IAAIrB,YAAY,EAAE;IACrCqB,YAAY,CAACf,IAAI,GAAG,IAAI,CAACS,oBAAoB,CAACO,KAAK,CAAChB,IAAI;IACxDe,YAAY,CAACb,WAAW,GAAG,IAAI,CAACO,oBAAoB,CAACO,KAAK,CAACd,WAAW;IAEtE,IAAI,CAACL,eAAe,CAACoB,gBAAgB,CAAC,IAAI,CAACT,gBAAgB,CAACU,eAAe,EAAEH,YAAY,CAAC,CAACV,SAAS,CAAEE,MAAU,IAAI;MAEpH,IAAI,CAACT,MAAM,CAACe,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAC5C,CAAC,CAAC;EACJ;;AArCSlB,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAwB;EAAAC;EAAAC;EAAAC;IAAA;MCXtCC,yBAAG;MAAAA,wCAAwB;MAAAA,iBAAI","names":["FormControl","FormGroup","Validators","SupplierType","EditSuppliertypeComponent","constructor","supplierservice","router","activated","name","required","description","ngOnInit","params","subscribe","GetSupplierType","result","editSupplierType","editSupplierTypeForm","controls","setValue","cancel","navigate","onSubmit","suppliertype","value","EditSupplierType","supplier_TypeId","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Supplier Management\\Supplier Types\\edit-suppliertype\\edit-suppliertype.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Supplier Management\\Supplier Types\\edit-suppliertype\\edit-suppliertype.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SupplierService } from 'src/app/service/supplier.service';\nimport { SupplierType } from 'src/app/shared/SupplierTypes';\n\n@Component({\n  selector: 'app-edit-suppliertype',\n  templateUrl: './edit-suppliertype.component.html',\n  styleUrls: ['./edit-suppliertype.component.css']\n})\nexport class EditSuppliertypeComponent implements OnInit {\n\n  constructor(private supplierservice: SupplierService, \n    private router: Router, \n    private activated:ActivatedRoute) { }\n  \n    editSupplierType: SupplierType = new SupplierType();\n  \n    editSupplierTypeForm: FormGroup = new FormGroup({\n       name: new FormControl('',[Validators.required]),\n       description: new FormControl('',[Validators.required])\n    })\n  \n    ngOnInit(): void {\n      this.activated.params.subscribe(params =>{\n      this.supplierservice.GetSupplierType(params['id']).subscribe(result =>{\n        this.editSupplierType = result as SupplierType;\n        this.editSupplierTypeForm.controls['name'].setValue(this.editSupplierType.name);\n        this.editSupplierTypeForm.controls['description'].setValue(this.editSupplierType.description);\n      })\n      })\n  \n    }\n  \n    cancel(){\n      this.router.navigate(['/view-suppliertypes'])\n    }\n  \n    onSubmit(){\n      let suppliertype = new SupplierType();\n      suppliertype.name = this.editSupplierTypeForm.value.name;\n      suppliertype.description = this.editSupplierTypeForm.value.description;\n  \n      this.supplierservice.EditSupplierType(this.editSupplierType.supplier_TypeId, suppliertype).subscribe((result:any) => {\n  \n      this.router.navigate(['view-suppliertypes'])\n      });\n    }\n\n}\n","<p>edit-suppliertype works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}