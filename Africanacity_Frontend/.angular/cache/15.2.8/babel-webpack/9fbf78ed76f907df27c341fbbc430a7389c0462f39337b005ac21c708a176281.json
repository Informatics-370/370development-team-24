{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EmployeeService = /*#__PURE__*/(() => {\n  class EmployeeService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.apiUrl = 'https://localhost:5116/api/';\n      // private apiURL = 'http://localhost:49991/api/Employee';\n      // private apiUrl = 'http://localhost:5000/api/email';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          ContentType: 'application/json'\n        })\n      };\n    }\n    checkEmail(email) {\n      return this.httpClient.post(`${this.apiUrl}`, {\n        email\n      });\n    }\n    //  searchFunctions(searchTerm: string): Observable<Employee[]> {\n    //    return this.httpClient.get<Employee[]>(`${this.apiUrl}Employee/search=${searchTerm}`);}\n    searchFunctions(searchTerm) {\n      return this.httpClient.get(`${this.apiUrl}Employee/search` + \"/\" + searchTerm).pipe(map(result => result));\n    }\n    /* For Employee Function */\n    getEmployee(employeeId) {\n      return this.httpClient.get(`${this.apiUrl}Employee/GetEmployee` + \"/\" + employeeId).pipe(map(result => result));\n    }\n    GetAllEmployees() {\n      return this.httpClient.get(`${this.apiUrl}Employee/GetAllEmployees`).pipe(map(result => result));\n    }\n    AddEmployee(employee) {\n      return this.httpClient.post(`${this.apiUrl}Employee/AddEmployee`, employee, this.httpOptions);\n    }\n    deleteEmployee(employeeId) {\n      return this.httpClient.delete(`${this.apiUrl}Employee/DeleteEmployee` + \"/\" + employeeId, this.httpOptions);\n    }\n    EditEmployee(employeeId, employee) {\n      return this.httpClient.put(`${this.apiUrl}Employee/EditEmployee/${employeeId}`, employee, this.httpOptions);\n    }\n    /* For Help Function */\n    getHelp(helpId) {\n      return this.httpClient.get(`${this.apiUrl}Controller/GetHelp` + \"/\" + helpId).pipe(map(result => result));\n    }\n    GetAllHelp() {\n      return this.httpClient.get(`${this.apiUrl}Controller/GetAllHelp`).pipe(map(result => result));\n    }\n    AddHelp(help) {\n      return this.httpClient.post(`${this.apiUrl}Controller/AddHelp`, help, this.httpOptions);\n    }\n    deleteHelp(helpId) {\n      return this.httpClient.delete(`${this.apiUrl}Controller/DeleteHelp` + \"/\" + helpId, this.httpOptions);\n    }\n    editHelp(helpId, help) {\n      return this.httpClient.put(`${this.apiUrl}Controller/EditHelp/${helpId}`, help, this.httpOptions);\n    }\n  }\n  EmployeeService.ɵfac = function EmployeeService_Factory(t) {\n    return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  EmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeService,\n    factory: EmployeeService.ɵfac,\n    providedIn: 'root'\n  });\n  return EmployeeService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}