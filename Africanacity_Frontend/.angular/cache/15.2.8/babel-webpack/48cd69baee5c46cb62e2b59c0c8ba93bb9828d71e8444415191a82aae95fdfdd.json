{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MenuTypes } from 'src/app/shared/menu-types';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/data.Service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../../../navbar/navbar.component\";\nconst _c0 = function (a1) {\n  return {\n    \"form-control\": true,\n    \"is-invalid\": a1\n  };\n};\nconst _c1 = function () {\n  return [\"/menu-types\"];\n};\nexport let EditMenuTypeComponent = /*#__PURE__*/(() => {\n  class EditMenuTypeComponent {\n    // menu_TypeId!: number;\n    constructor(dataService, activated, router, dialog, snackBar) {\n      this.dataService = dataService;\n      this.activated = activated;\n      this.router = router;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.MenuTypes = new MenuTypes();\n      //the form\n      //ensure all edit  forms are filled in\n      this.editMenuTypeForm = new FormGroup({\n        name: new FormControl('', [Validators.required])\n      });\n    }\n    ngOnInit() {\n      this.activated.params.subscribe(params => {\n        this.dataService.GetMenuTypeById(params['id']).subscribe(edit => {\n          this.MenuTypes = edit;\n          this.editMenuTypeForm.controls['name'].setValue(this.MenuTypes.name);\n        });\n      });\n    }\n    /*after submission of edit*/\n    editMenuType() {\n      let menuType = new MenuTypes();\n      menuType.name = this.editMenuTypeForm.value.name;\n      this.dataService.EditMenuType(this.MenuTypes.menu_TypeId, menuType).subscribe(edit => {\n        this.router.navigate(['/menu-types']);\n      });\n      this.showSuccessMessage('Menu Type edited successfully!');\n    }\n    showSuccessMessage(message) {\n      const snackBarRef = this.snackBar.open(message, 'Ok', {\n        duration: 3000,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n  }\n  EditMenuTypeComponent.ɵfac = function EditMenuTypeComponent_Factory(t) {\n    return new (t || EditMenuTypeComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n  EditMenuTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditMenuTypeComponent,\n    selectors: [[\"app-edit-menu-type\"]],\n    decls: 19,\n    vars: 7,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-size\", \"50px\", \"font-family\", \"'Times New Roman', Times, serif\"], [1, \"container-md\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-1\"], [\"for\", \"name\", 1, \"form-label\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"Menu_TypeId\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Name\", 2, \"width\", \"300px\", 3, \"ngClass\"], [\"name\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-basic\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 2, \"margin-left\", \"2px\", 3, \"routerLink\"]],\n    template: function EditMenuTypeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"app-navbar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"h1\", 4);\n        i0.ɵɵtext(6, \"Edit Menu Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function EditMenuTypeComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.editMenuType();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9, 10)(14, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function EditMenuTypeComponent_Template_button_click_15_listener() {\n          return ctx.editMenuType();\n        });\n        i0.ɵɵtext(16, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 12);\n        i0.ɵɵtext(18, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.editMenuTypeForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ((tmp_1_0 = ctx.editMenuTypeForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.editMenuTypeForm.get(\"name\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.editMenuTypeForm.get(\"name\")) == null ? null : tmp_1_0.touched))));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.editMenuTypeForm.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c1));\n      }\n    },\n    dependencies: [i5.NgClass, i2.RouterLink, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i7.NavbarComponent]\n  });\n  return EditMenuTypeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}