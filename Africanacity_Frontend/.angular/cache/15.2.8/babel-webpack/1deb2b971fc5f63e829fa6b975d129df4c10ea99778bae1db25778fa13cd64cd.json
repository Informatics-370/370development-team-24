{"ast":null,"code":"import dayGridPlugin from '@fullcalendar/daygrid'; // Import the dayGrid plugin\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@fullcalendar/angular\";\nexport class ScheduleDisplayComponent {\n  constructor(dialog) {\n    this.dialog = dialog;\n    // openEventDialog(): void {\n    //   const dialogRef = this.dialog.open(AddScheduleComponent, {\n    //     width: '400px',\n    //     data: {\n    //       title: 'Create Schedule', // You can change the title accordingly (Create or Edit)\n    //     },\n    //   });\n    //   dialogRef.afterClosed().subscribe(result => {\n    //     // 'result' contains the form data when the dialog is closed with 'Save'.\n    //     // Handle the data here (e.g., add it to the calendar, save to backend, etc.).\n    //   });\n    // }\n    this.calendarOptions = {\n      initialView: 'dayGridMonth',\n      plugins: [dayGridPlugin]\n    };\n  }\n  // @ViewChild('fullcalendar') fullcalendar: any; // Get a reference to the calendar element\n  // calendarPlugins = [dayGridPlugin, interactionPlugin];\n  ngOnInit() {\n    // Fetch events from a service or local storage and populate the calendarEvents array\n    // For demonstration purposes, let's add a sample event:\n  }\n}\nScheduleDisplayComponent.ɵfac = function ScheduleDisplayComponent_Factory(t) {\n  return new (t || ScheduleDisplayComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n};\nScheduleDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScheduleDisplayComponent,\n  selectors: [[\"app-schedule-display\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-weight\", \"bolder\", \"font-size\", \"50px\"], [3, \"options\"]],\n  template: function ScheduleDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Schedule\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"full-calendar\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"options\", ctx.calendarOptions);\n    }\n  },\n  dependencies: [i2.FullCalendarComponent],\n  styles: [\".calendar-container[_ngcontent-%COMP%] {\\r\\n    max-width: 800px;\\r\\n    margin: 0 auto;\\r\\n    padding: 20px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYm9va2luZy9zY2hlZHVsZS9zY2hlZHVsZS1kaXNwbGF5L3NjaGVkdWxlLWRpc3BsYXkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkI7QUFDM0I7SUFDSSxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLGFBQWE7RUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGNhbGVuZGFyLmNvbXBvbmVudC5jc3MgKi9cclxuLmNhbGVuZGFyLWNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,OAAOA,aAAa,MAAM,uBAAuB,CAAC,CAAC;;;;AAYnD,OAAM,MAAOC,wBAAwB;EAEnCC,YAAoBC,MAAiB;IAAjB,WAAM,GAANA,MAAM;IAa1B;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA,oBAAe,GAAoB;MACjCC,WAAW,EAAE,cAAc;MAC3BC,OAAO,EAAE,CAACL,aAAa;KACxB;EA9BsC;EAGvC;EACA;EAGAM,QAAQ;IACN;IACA;EAAA;;AAXSL,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdrCC,6BAAoH;MAAAA,wBAAQ;MAAAA,iBAAK;MAEjIA,mCAA2D;;;MAA5CA,eAA2B;MAA3BA,6CAA2B","names":["dayGridPlugin","ScheduleDisplayComponent","constructor","dialog","initialView","plugins","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\booking\\schedule\\schedule-display\\schedule-display.component.ts","C:\\Users\\User\\Documents\\GitHub\\370development-team-24\\Africanacity_Frontend\\src\\app\\booking\\schedule\\schedule-display\\schedule-display.component.html"],"sourcesContent":["import { Component, ViewChild, OnInit } from '@angular/core';\nimport { CalendarOptions } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid'; // Import the dayGrid plugin\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { AddScheduleComponent } from '../add-schedule/add-schedule.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-schedule-display',\n  templateUrl: './schedule-display.component.html',\n  styleUrls: ['./schedule-display.component.css']\n})\n\nexport class ScheduleDisplayComponent implements OnInit {\n \n  constructor(private dialog: MatDialog){}\n\n\n  // @ViewChild('fullcalendar') fullcalendar: any; // Get a reference to the calendar element\n  // calendarPlugins = [dayGridPlugin, interactionPlugin];\n  \n  \n  ngOnInit() {\n    // Fetch events from a service or local storage and populate the calendarEvents array\n    // For demonstration purposes, let's add a sample event:\n \n  }\n\n  // openEventDialog(): void {\n  //   const dialogRef = this.dialog.open(AddScheduleComponent, {\n  //     width: '400px',\n  //     data: {\n  //       title: 'Create Schedule', // You can change the title accordingly (Create or Edit)\n  //     },\n  //   });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     // 'result' contains the form data when the dialog is closed with 'Save'.\n  //     // Handle the data here (e.g., add it to the calendar, save to backend, etc.).\n  //   });\n  // }\n\n  calendarOptions: CalendarOptions = {\n    initialView: 'dayGridMonth',\n    plugins: [dayGridPlugin]\n  };\n\n}\n","<h3 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-weight: bolder; font-size: 50px;\">Schedule</h3>\n\n<full-calendar [options]=\"calendarOptions\"></full-calendar>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}