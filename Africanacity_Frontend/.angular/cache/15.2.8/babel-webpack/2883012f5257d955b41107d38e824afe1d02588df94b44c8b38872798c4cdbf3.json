{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../../../shared/employee';\nimport { NotificationDialogComponent } from '../notification-dialog/notification-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/employee.service\";\nimport * as i2 from \"src/app/service/email.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"../../../navbar/navbar.component\";\nconst _c0 = [\"toastContainer\"];\nfunction AddEmployeeComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\nfunction AddEmployeeComponent_mat_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", name_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", name_r2, \" \");\n  }\n}\nexport let AddEmployeeComponent = /*#__PURE__*/(() => {\n  class AddEmployeeComponent {\n    constructor(employeeservice, emailservice, router, dialog, snackBar) {\n      this.employeeservice = employeeservice;\n      this.router = router;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.employeeForm = new FormGroup({\n        surname: new FormControl('', [Validators.required]),\n        firstName: new FormControl('', [Validators.required]),\n        email_Address: new FormControl('', [Validators.required]),\n        physical_Address: new FormControl('', [Validators.required]),\n        phoneNumber: new FormControl('', [Validators.required])\n      });\n      this.Roles = ['Driver', 'Administrator', 'Waiter'];\n    }\n    //EmailVerification\n    checkEmail() {\n      this.employeeservice.checkEmail(this.email).subscribe(response => {\n        this.message = response.message;\n      }, error => {\n        console.error('Error checking email:', error);\n      });\n    }\n    // Display Notifcations\n    openDialog() {\n      const dialogRef = this.dialog.open(NotificationDialogComponent, {\n        width: '250px',\n        data: 'Add new Employee?'\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result == 'Yes') {\n          this.onSubmit();\n        }\n      });\n    }\n    ngOnInit() {}\n    cancel() {\n      this.router.navigate(['/home']);\n    }\n    onSubmit() {\n      let employee = new Employee();\n      employee.surname = this.employeeForm.value.surname;\n      employee.firstName = this.employeeForm.value.firstName;\n      employee.email_Address = this.employeeForm.value.email_Address;\n      employee.physical_Address = this.employeeForm.value.physical_Address;\n      employee.phoneNumber = this.employeeForm.value.phoneNumber;\n      this.employeeservice.AddEmployee(employee).subscribe(result => {\n        this.router.navigate(['/view-employees']);\n      });\n      this.employeeservice.AddEmployee(employee).subscribe(res => {\n        if (res.statusCode == 200) {\n          this.router.navigate(['/']);\n        } else {}\n      });\n      this.showSuccessMessage('Enter valid phone number!');\n    }\n    showSuccessMessage(message) {\n      const snackBarRef = this.snackBar.open(message, 'Ok', {\n        duration: 5000,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n      snackBarRef.afterDismissed().subscribe(() => {\n        this.toastContainer.clear();\n      });\n    }\n  }\n  AddEmployeeComponent.ɵfac = function AddEmployeeComponent_Factory(t) {\n    return new (t || AddEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.EmailService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n  };\n  AddEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEmployeeComponent,\n    selectors: [[\"app-add-employee\"]],\n    viewQuery: function AddEmployeeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toastContainer = _t.first);\n      }\n    },\n    decls: 54,\n    vars: 9,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-2\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"surname\", 1, \"col-md-1\", 2, \"font-weight\", \"bold\"], [1, \"col-md-8\"], [\"placeholder\", \"Enter Surname\", \"name\", \"surname\", \"formControlName\", \"surname\", 1, \"form-control\", 3, \"required\"], [\"for\", \"firstName\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"placeholder\", \"Enter First Name\", \"name\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"email_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"placeholder\", \"xxxxx@gmail.com\", \"name\", \"email_Address\", \"formControlName\", \"email_Address\", 1, \"form-control\", 3, \"required\"], [\"class\", \"message\", 4, \"ngIf\"], [\"for\", \"physical_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"physical_Address\", \"placeholder\", \"Enter Address\", \"name\", \"physical_Address\", \"formControlName\", \"physical_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"phoneNumber\", 1, \"col-sm-2\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"placeholder\", \"Enter 10-digit number\", \"name\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-2\", 2, \"font-weight\", \"bold\"], [\"type\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"message\"], [3, \"value\"]],\n    template: function AddEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"app-navbar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\", 4);\n        i0.ɵɵtext(6, \"Add Employee \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEmployeeComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Surname:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"span\")(18, \"label\", 11);\n        i0.ɵɵtext(19, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 12);\n        i0.ɵɵelement(21, \"input\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"div\", 7)(23, \"label\", 14);\n        i0.ɵɵtext(24, \"Email Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 12);\n        i0.ɵɵelement(26, \"input\", 15);\n        i0.ɵɵtemplate(27, AddEmployeeComponent_div_27_Template, 2, 1, \"div\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 7)(29, \"label\", 17);\n        i0.ɵɵtext(30, \"Physical Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 12);\n        i0.ɵɵelement(32, \"input\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 7)(34, \"label\", 19);\n        i0.ɵɵtext(35, \"Phone Number:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 12);\n        i0.ɵɵelement(37, \"input\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"div\", 7)(39, \"label\", 21);\n        i0.ɵɵtext(40, \"Employee Role:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 12)(42, \"div\", 22)(43, \"mat-form-field\")(44, \"mat-label\");\n        i0.ɵɵtext(45, \"Select a name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"mat-select\");\n        i0.ɵɵtemplate(47, AddEmployeeComponent_mat_option_47_Template, 2, 2, \"mat-option\", 23);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(48, \"div\", 7)(49, \"div\", 24)(50, \"button\", 25);\n        i0.ɵɵtext(51, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function AddEmployeeComponent_Template_button_click_52_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(53, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.message);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Roles);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.employeeForm.valid);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.FormGroupDirective, i7.FormControlName, i8.MatOption, i9.MatFormField, i9.MatLabel, i10.MatSelect, i11.NavbarComponent],\n    styles: [\".form-group[_ngcontent-%COMP%]{.label{font-size: 100px;}}\", \".message[_ngcontent-%COMP%]{padding:10px;background-color:#d3d3d3;margin-top:10px}\"]\n  });\n  return AddEmployeeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}