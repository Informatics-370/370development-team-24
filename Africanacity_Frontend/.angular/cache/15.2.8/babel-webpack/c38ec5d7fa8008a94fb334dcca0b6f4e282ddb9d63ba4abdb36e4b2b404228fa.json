{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from 'src/app/shared/employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"src/app/service/data.Service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../../navbar/navbar.component\";\nfunction AddEmployeeComponent_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1.employee_RoleId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.name);\n  }\n}\nexport class AddEmployeeComponent {\n  constructor(employeeservice, router, dialog, snackBar, dataService) {\n    this.employeeservice = employeeservice;\n    this.router = router;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.employeeRoleData = [];\n    this.employeeForm = new FormGroup({\n      surname: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required]),\n      employeeRole: new FormControl([Validators.required]),\n      email_Address: new FormControl('', [Validators.required]),\n      physical_Address: new FormControl('', [Validators.required]),\n      phoneNumber: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.GetAllEmployeeRoles();\n  }\n  cancel() {\n    this.router.navigate(['/view-employees']);\n  }\n  GetAllEmployeeRoles() {\n    this.employeeservice.GetAllEmployeeRoles().subscribe(result => {\n      let employeeRoleList = result;\n      employeeRoleList.forEach(element => {\n        this.employeeRoleData.push(element);\n      });\n    });\n  }\n  onSubmit() {\n    if (this.employeeForm.invalid) {\n      return;\n    }\n    let employee = new Employee();\n    employee.supplierName = this.supplierForm.value.supplierName;\n    employee.supplierType = this.supplierForm.value.supplierType;\n    employee.email_Address = this.supplierForm.value.email_Address;\n    employee.physical_Address = this.supplierForm.value.physical_Address;\n    employee.phoneNumber = this.supplierForm.value.phoneNumber;\n    this.employeeservice.AddSupplier(supplier).subscribe(result => {\n      this.router.navigate(['/view-suppliers']);\n    });\n    this.snackBar.open(this.supplierForm.get('name').value + ` created successfully`, 'X', {\n      duration: 5000\n    });\n  }\n}\nAddEmployeeComponent.ɵfac = function AddEmployeeComponent_Factory(t) {\n  return new (t || AddEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.DataService));\n};\nAddEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEmployeeComponent,\n  selectors: [[\"app-add-employee\"]],\n  decls: 49,\n  vars: 8,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-2\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"surname\", 1, \"col-md-1\", 2, \"font-weight\", \"bold\"], [1, \"col-md-6\"], [\"placeholder\", \"Enter Surname\", \"name\", \"surname\", \"formControlName\", \"surname\", 1, \"form-control\", 3, \"required\"], [\"for\", \"firstName\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"placeholder\", \"Enter First Name\", \"name\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"employeeRole\", 1, \"col-md-1\", 2, \"font-weight\", \"bold\"], [\"id\", \"employeeRole\", \"formControlName\", \"employeeRole\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"email_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"placeholder\", \"xxxxx@gmail.com\", \"name\", \"email_Address\", \"formControlName\", \"email_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"physical_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"physical_Address\", \"placeholder\", \"Enter Address\", \"name\", \"physical_Address\", \"formControlName\", \"physical_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"phoneNumber\", 1, \"col-sm-2\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"placeholder\", \"Enter 10-digit number\", \"name\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [3, \"value\"]],\n  template: function AddEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\", 4);\n      i0.ɵɵtext(6, \"Add Employee \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function AddEmployeeComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Surname:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"span\")(18, \"label\", 11);\n      i0.ɵɵtext(19, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 12);\n      i0.ɵɵelement(21, \"input\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"label\", 14);\n      i0.ɵɵtext(24, \"Employee Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 9)(26, \"select\", 15);\n      i0.ɵɵtemplate(27, AddEmployeeComponent_option_27_Template, 2, 2, \"option\", 16);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"div\", 7)(29, \"label\", 17);\n      i0.ɵɵtext(30, \"Email Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 12);\n      i0.ɵɵelement(32, \"input\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 7)(34, \"label\", 19);\n      i0.ɵɵtext(35, \"Physical Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 12);\n      i0.ɵɵelement(37, \"input\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 7)(39, \"label\", 21);\n      i0.ɵɵtext(40, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 12);\n      i0.ɵɵelement(42, \"input\", 22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 7)(44, \"div\", 23)(45, \"button\", 24);\n      i0.ɵɵtext(46, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function AddEmployeeComponent_Template_button_click_47_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(48, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employeeRoleData);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.employeeForm.valid);\n    }\n  },\n  dependencies: [i6.NgForOf, i7.ɵNgNoValidate, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.FormGroupDirective, i7.FormControlName, i8.NavbarComponent],\n  styles: [\".form-group[_ngcontent-%COMP%] {\\r\\n    .label{\\r\\n        font-size: 100px;\\r\\n    }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vRW1wbG95ZWVzL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO1FBQ0ksZ0JBQWdCO0lBQ3BCO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1ncm91cCB7XHJcbiAgICAubGFiZWx7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMDBweDtcclxuICAgIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\", \".message[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  background-color: lightgray;\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vRW1wbG95ZWVzL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLGFBQWE7RUFDYiwyQkFBMkI7RUFDM0IsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubWVzc2FnZSB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAMnE,SAASC,QAAQ,QAAQ,yBAAyB;;;;;;;;;;;;IC2B1CC,kCAA6E;IAAAA,YAAe;IAAAA,iBAAS;;;;IAAvDA,+CAA8B;IAACA,eAAe;IAAfA,kCAAe;;;ADGpG,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,eAAgC,EAAUC,MAAc,EAAUC,MAAiB,EAAUC,QAAqB,EAAEC,WAAwB;IAA5I,oBAAe,GAAfJ,eAAe;IAA2B,WAAM,GAANC,MAAM;IAAkB,WAAM,GAANC,MAAM;IAAqB,aAAQ,GAARC,QAAQ;IAHzH,qBAAgB,GAAiB,EAAE;IAKnC,iBAAY,GAAc,IAAIT,SAAS,CAAC;MACtCW,OAAO,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACW,QAAQ,CAAC,CAAC;MAClDC,SAAS,EAAE,IAAId,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACW,QAAQ,CAAC,CAAC;MACpDE,YAAY,EAAE,IAAIf,WAAW,CAAC,CAACE,UAAU,CAACW,QAAQ,CAAC,CAAC;MACpDG,aAAa,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACW,QAAQ,CAAC,CAAC;MACxDI,gBAAgB,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACW,QAAQ,CAAC,CAAC;MAC3DK,WAAW,EAAE,IAAIlB,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACW,QAAQ,CAAC;KAEtD,CAAC;EAVkK;EAYpKM,QAAQ;IACN,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EAEAC,MAAM;IACJ,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC3C;EAEAF,mBAAmB;IACjB,IAAI,CAACb,eAAe,CAACa,mBAAmB,EAAE,CAACG,SAAS,CAACC,MAAM,IAAG;MAC5D,IAAIC,gBAAgB,GAASD,MAAM;MACnCC,gBAAgB,CAACC,OAAO,CAAEC,OAAO,IAAI;QACnC,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAACF,OAAO,CAAC;MACtC,CAAC,CAAC;IACH,CAAC,CAAC;EACJ;EAEAG,QAAQ;IACP,IAAI,IAAI,CAACC,YAAY,CAACC,OAAO,EAAE;MAC7B;;IAGF,IAAIC,QAAQ,GAAG,IAAI9B,QAAQ,EAAE;IAC7B8B,QAAQ,CAACC,YAAY,GAAG,IAAI,CAACC,YAAY,CAACC,KAAK,CAACF,YAAY;IAC5DD,QAAQ,CAACI,YAAY,GAAG,IAAI,CAACF,YAAY,CAACC,KAAK,CAACC,YAAY;IAC5DJ,QAAQ,CAACjB,aAAa,GAAG,IAAI,CAACmB,YAAY,CAACC,KAAK,CAACpB,aAAa;IAC9DiB,QAAQ,CAAChB,gBAAgB,GAAG,IAAI,CAACkB,YAAY,CAACC,KAAK,CAACnB,gBAAgB;IACpEgB,QAAQ,CAACf,WAAW,GAAG,IAAI,CAACiB,YAAY,CAACC,KAAK,CAAClB,WAAW;IAE1D,IAAI,CAACX,eAAe,CAAC+B,WAAW,CAACC,QAAQ,CAAC,CAAChB,SAAS,CAACC,MAAM,IAAG;MAC5D,IAAI,CAAChB,MAAM,CAACc,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;IAC9C,CAAC,CAAC;IAEC,IAAI,CAACZ,QAAQ,CAAC8B,IAAI,CAChB,IAAI,CAACL,YAAY,CAACM,GAAG,CAAC,MAAM,CAAE,CAACL,KAAK,GAAG,uBAAuB,EAC9D,GAAG,EACH;MAAEM,QAAQ,EAAE;IAAI,CAAE,CACnB;EACH;;AAtDYrC,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAsC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCpCjC3C,8BAA6B;MAGnBA,6BAAyB;MAC7BA,iBAAM;MACVA,8BAAkC;MAC2DA,6BAAa;MAAAA,iBAAK;MACjHA,qBAAI;MACJA,8BAAuB;MAEmCA;QAAA,OAAY4C,cAAU;MAAA,EAAC;MAC7E5C,+BAAwB;MAC8CA,yBAAQ;MAAAA,iBAAQ;MAClFA,+BAAsB;MACpBA,6BAAmH;MACrHA,iBAAM;MAIVA,+BAAwB;MAE+CA,4BAAW;MAAAA,iBAAQ;MACtFA,gCAAsB;MACpBA,6BAA2H;MAC7HA,iBAAM;MAKVA,+BAAwB;MACgDA,8BAAa;MAAAA,iBAAQ;MAC3FA,+BAAsB;MAEpBA,8EAAqG;MACvGA,iBAAS;MAMXA,+BAAwB;MACiDA,+BAAc;MAAAA,iBAAQ;MAC7FA,gCAAsB;MACpBA,6BAA6I;MAE/IA,iBAAM;MAGVA,+BAAwB;MACoDA,kCAAiB;MAAAA,iBAAQ;MACnGA,gCAAsB;MACpBA,6BAAuK;MACzKA,iBAAM;MAGNA,+BAAwB;MACiDA,8BAAa;MAAAA,iBAAQ;MAC1FA,gCAAsB;MACpBA,6BAAgJ;MAClJA,iBAAM;MAGVA,+BAAwB;MAE4FA,oBAAG;MAAAA,iBAAS;MAC5HA,mCAAuE;MAAnBA;QAAA,OAAS4C,YAAQ;MAAA,EAAC;MAAC5C,uBAAM;MAAAA,iBAAS;;;MAvDxFA,gBAA0B;MAA1BA,4CAA0B;MAIkCA,eAAiB;MAAjBA,+BAAiB;MASbA,eAAiB;MAAjBA,+BAAiB;MAUtDA,eAAmB;MAAnBA,8CAAmB;MAU0BA,eAAiB;MAAjBA,+BAAiB;MAQyBA,eAAiB;MAAjBA,+BAAiB;MAOlDA,eAAiB;MAAjBA,+BAAiB;MAMhDA,eAAgC;MAAhCA,kDAAgC","names":["FormControl","FormGroup","Validators","Employee","i0","AddEmployeeComponent","constructor","employeeservice","router","dialog","snackBar","dataService","surname","required","firstName","employeeRole","email_Address","physical_Address","phoneNumber","ngOnInit","GetAllEmployeeRoles","cancel","navigate","subscribe","result","employeeRoleList","forEach","element","employeeRoleData","push","onSubmit","employeeForm","invalid","employee","supplierName","supplierForm","value","supplierType","AddSupplier","supplier","open","get","duration","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\add-employee\\add-employee.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\add-employee\\add-employee.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EmailService } from 'src/app/service/email.service';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { EmployeeService } from 'src/app/service/employee.service';\nimport { Employee } from 'src/app/shared/employee';\nimport { NotificationDialogComponent } from '../notification-dialog/notification-dialog.component';\nimport { Employee_Role } from 'src/app/shared/EmployeeRole';\nimport { DataService } from 'src/app/service/data.Service';\n\n\n\n\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.css'],\n//   template: `\n//   <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\" required>\n//   <button (click)=\"checkEmail()\">Check Email</button>\n\n//   <div *ngIf=\"message\" class=\"message\">\n//     {{ message }}\n//   </div>\n// `,\nstyles: [`\n.message {\n  padding: 10px;\n  background-color: lightgray;\n  margin-top: 10px;\n}\n`]\n\n})\nexport class AddEmployeeComponent implements OnInit {\n  employeeRoleData:Employee_Role[]=[]\n  toastContainer: any;\n\n  constructor(private employeeservice: EmployeeService, private router: Router, private dialog: MatDialog, private snackBar: MatSnackBar, dataService: DataService) { }\n\n  employeeForm: FormGroup = new FormGroup({\n    surname: new FormControl('',[Validators.required]),\n    firstName: new FormControl('',[Validators.required]),\n    employeeRole: new FormControl([Validators.required]),\n    email_Address: new FormControl('',[Validators.required]),\n    physical_Address: new FormControl('',[Validators.required]),\n    phoneNumber: new FormControl('',[Validators.required])\n\n  })\n\n  ngOnInit(): void {\n    this.GetAllEmployeeRoles()\n  }\n\n  cancel(){\n    this.router.navigate(['/view-employees'])\n  }\n\n  GetAllEmployeeRoles(){\n    this.employeeservice.GetAllEmployeeRoles().subscribe(result => {\n      let employeeRoleList:any[] = result\n      employeeRoleList.forEach((element) => {\n        this.employeeRoleData.push(element)\n     });\n    });\n  }\n\n  onSubmit() {\n   if (this.employeeForm.invalid) {\n     return;\n   }\n \n   let employee = new Employee();\n   employee.supplierName = this.supplierForm.value.supplierName;\n   employee.supplierType = this.supplierForm.value.supplierType;\n   employee.email_Address = this.supplierForm.value.email_Address;\n   employee.physical_Address = this.supplierForm.value.physical_Address;\n   employee.phoneNumber = this.supplierForm.value.phoneNumber;\n \n   this.employeeservice.AddSupplier(supplier).subscribe(result => {\n     this.router.navigate(['/view-suppliers'])\n});\n \n   this.snackBar.open(\n     this.supplierForm.get('name')!.value + ` created successfully`,\n     'X',\n     { duration: 5000 }\n   );\n }\n}\n","\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n      <div class=\"col-md-2\">\r\n          <app-navbar></app-navbar>\r\n      </div>\r\n  <div class=\"col-md-10 order-md-2\">\r\n<h4 style=\"text-align: center; font-family: 'Times New Roman', Times, serif; font-size: 50px;\">Add Employee </h4>\r\n<hr>\r\n<div class=\"container\">\r\n<div class=\"row\">  \r\n<form [formGroup]=\"employeeForm\" class=\"form-horizontal\"  (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n        <label class=\" col-md-1\" style=\"font-weight: bold;\" for=\"surname\">Surname:</label>\r\n        <div class=\"col-md-6\">\r\n          <input class=\"form-control\" placeholder=\"Enter Surname\" [required]=\"true\" name=\"surname\" formControlName=\"surname\">\r\n        </div>\r\n    </div>\r\n\r\n  \r\n    <div class=\"form-group\">\r\n      <span>\r\n        <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"firstName\">First Name:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input class=\"form-control\"  placeholder=\"Enter First Name\" [required]=\"true\" name=\"firstName\" formControlName=\"firstName\">\r\n        </div>\r\n      </span>\r\n    </div>\r\n\r\n    \r\n    <div class=\"form-group\">\r\n      <label class=\"col-md-1\" style=\"font-weight: bold;\" for=\"employeeRole\">Employee Role</label>\r\n      <div class=\"col-md-6\">\r\n      <select class=\"form-control\" id=\"employeeRole\" formControlName=\"employeeRole\">\r\n        <option *ngFor=\"let item of employeeRoleData\" [value]=\"item.employee_RoleId\">{{ item.name }}</option>\r\n      </select>\r\n    </div>\r\n    </div>\r\n    \r\n   \r\n\r\n    <div class=\"form-group\">\r\n      <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"email_Address\">Email Address:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" placeholder=\"xxxxx@gmail.com\" [required]=\"true\" name=\"email_Address\" formControlName=\"email_Address\">\r\n        <!--button (click)=\"checkEmail()\">Check Email</button-->\r\n      </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label class=\"col-sm-1\" style=\"font-weight: bold;\" for=\"physical_Address\">Physical Address:</label>\r\n    <div class=\"col-sm-6\">\r\n      <input class=\"form-control\" type=\"text\" id=\"physical_Address\" placeholder=\"Enter Address\" name=\"physical_Address\" [required]=\"true\" formControlName=\"physical_Address\">\r\n    </div>\r\n</div>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"col-sm-2\" style=\"font-weight: bold;\" for=\"phoneNumber\">Phone Number:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input class=\"form-control\" type=\"text\"  placeholder=\"Enter 10-digit number\" [required]=\"true\" name=\"phoneNumber\" formControlName=\"phoneNumber\">\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <div class=\"col-sm-offset-1 col-sm-6\">\r\n        <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!employeeForm.valid\" class=\"btn btn-sm btn-success\">Add</button>\r\n        <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  </div>\r\n</div> \r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}