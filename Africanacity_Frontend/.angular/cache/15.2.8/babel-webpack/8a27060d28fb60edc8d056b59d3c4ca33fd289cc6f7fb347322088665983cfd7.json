{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { Employee } from '../../shared/employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class EditEmployeeComponent {\n  constructor(employeeservice, router, route) {\n    this.employeeservice = employeeservice;\n    this.router = router;\n    this.route = route;\n    this.employeeForm = new FormGroup({\n      Surname: new FormControl(''),\n      FirstName: new FormControl(''),\n      Email_Address: new FormControl(''),\n      Physical_Address: new FormControl(''),\n      PhoneNumber: new FormControl('')\n    });\n  }\n  ngOnInit() {\n    //   this.employeeservice.getEmployee(+this.route.snapshot.params['Id']).subscribe(result => {\n    //     this.employee = result\n    //     this.employeeForm.patchValue({\n    //       Surname: this.employee.Surname,\n    //       FirstName: this.employee.FirstName,\n    //       Email_Address: this.employee.Email_Address,\n    //       Physical_Address: this.employee.Physical_Address,\n    //       PhoneNumber: this.employee.PhoneNumber\n    //     });\n    // })\n    this.activated.params.subscribe(params => {\n      this.data.GetEmployee(params['Id']).subscribe(res => {\n        this.employee = res;\n        this.employeeForm.controls['Surname'].setValue(this.employee.surname);\n        this.employeeForm.controls['FirstName'].setValue(this.employee.firstname);\n        this.employeeForm.controls['Email_Address'].setValue(this.employee.email_Address);\n        this.employeeForm.controls['Physical_Address'].setValue(this.employee.physical_Address);\n        this.employeeForm.controls['PhoneNumber'].setValue(this.employee.phoneNumber);\n      });\n    });\n  }\n  cancel() {\n    this.router.navigate(['/view-employees']);\n  }\n  // onSubmit(){\n  //   this.employeeservice.editEmployee(this.employee.employeeId, this.employeeForm.value).subscribe(result => {\n  //         this.router.navigate(['/view-employees'])\n  //   })\n  // }\n  OnUpdate() {\n    let employee = new Employee();\n    employee.surname = this.employeeForm.value.Surname;\n    employee.firstName = this.employeeForm.value.FirstName;\n    employee.email_Address = this.employeeForm.value.Email_Address;\n    employee.physical_Address = this.employeeForm.value.Physical_Address;\n    employee.phoneNumber = this.employeeForm.value.PhoneNumber;\n    this.data.editEmployee(this.employee.employeeId, employee).subscribe(response => {\n      if (response.statusCode == 200) {\n        this.router.navigate(['/']);\n      } else {\n        alert(response.message);\n      }\n    });\n  }\n}\nEditEmployeeComponent.ɵfac = function EditEmployeeComponent_Factory(t) {\n  return new (t || EditEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditEmployeeComponent,\n  selectors: [[\"app-edit-employee\"]],\n  decls: 32,\n  vars: 6,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"Surname\", 1, \"col-sm-1\"], [1, \"col-sm-6\"], [\"id\", \"Surname\", \"placeholder\", \"Enter Surname\", \"formControlName\", \"Surname\", 1, \"form-control\", 3, \"required\"], [\"for\", \"FirstName\", 1, \"col-sm-1\"], [\"id\", \"FistName\", \"placeholder\", \"Enter First Name\", \"formControlName\", \"FirstName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"Physical_Address\", 1, \"col-sm-1\"], [\"type\", \"text\", \"id\", \"Physical_Address\", \"placeholder\", \"Enter Address\", \"formControlName\", \"Physical_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"Email_Address\", 1, \"col-sm-1\"], [\"type\", \"text\", \"id\", \"PhoneNumber\", \"placeholder\", \"Enter 10-digit number\", \"formControlName\", \"PhoneNumber\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n  template: function EditEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h4\");\n      i0.ɵɵtext(1, \"Edit Course\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EditEmployeeComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.OnUpdate();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Surname:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 5);\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"FirstName:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 5);\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 9);\n      i0.ɵɵtext(18, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 5);\n      i0.ɵɵelement(20, \"textarea\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 3)(22, \"label\", 11);\n      i0.ɵɵtext(23, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 5);\n      i0.ɵɵelement(25, \"textarea\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 3)(27, \"div\", 13)(28, \"button\", 14);\n      i0.ɵɵtext(29, \"Confirm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function EditEmployeeComponent_Template_button_click_30_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(31, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"required\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.employeeForm.valid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Employee","EditEmployeeComponent","constructor","employeeservice","router","route","Surname","FirstName","Email_Address","Physical_Address","PhoneNumber","ngOnInit","activated","params","subscribe","data","GetEmployee","res","employee","employeeForm","controls","setValue","surname","firstname","email_Address","physical_Address","phoneNumber","cancel","navigate","OnUpdate","value","firstName","editEmployee","employeeId","response","statusCode","alert","message","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\view-employees\\edit-employee\\edit-employee.component.ts","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Employees\\view-employees\\edit-employee\\edit-employee.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Employee } from '../../shared/employee';\n\n@Component({\n  selector: 'app-edit-employee',\n  templateUrl: './edit-employee.component.html',\n  styleUrls: ['./edit-employee.component.css']\n})\nexport class EditEmployeeComponent {\n\n  employeeForm = new FormGroup(\n    {\n        Surname: new FormControl(''),\n        FirstName: new FormControl(''),\n        Email_Address: new FormControl(''),\n        Physical_Address: new FormControl(''),\n        PhoneNumber: new FormControl('')\n    })\n\n  employee:any\n  data: any;\n  activated: any;\n  constructor(private employeeservice: EmployeeService, private router: Router, private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n  //   this.employeeservice.getEmployee(+this.route.snapshot.params['Id']).subscribe(result => {\n  //     this.employee = result\n  //     this.employeeForm.patchValue({\n  //       Surname: this.employee.Surname,\n  //       FirstName: this.employee.FirstName,\n  //       Email_Address: this.employee.Email_Address,\n  //       Physical_Address: this.employee.Physical_Address,\n  //       PhoneNumber: this.employee.PhoneNumber\n  //     });\n  // })\n\n  this.activated.params.subscribe((params: { [x: string]: any; }) => { \n    this.data.GetEmployee(params['Id']).subscribe((res: Employee) => { \n    this.employee = res as Employee;\n\n    this.employeeForm.controls['Surname'].setValue(this.employee.surname!);\n    this.employeeForm.controls['FirstName'].setValue(this.employee.firstname!);\n    this.employeeForm.controls['Email_Address'].setValue(this.employee.email_Address!);\n    this.employeeForm.controls['Physical_Address'].setValue(this.employee.physical_Address!);\n    this.employeeForm.controls['PhoneNumber'].setValue(this.employee.phoneNumber!);\n    })\n\n   })\n\n  }\n\n\n  cancel(){\n    this.router.navigate(['/view-employees'])\n  }\n\n  // onSubmit(){\n  //   this.employeeservice.editEmployee(this.employee.employeeId, this.employeeForm.value).subscribe(result => {\n  //         this.router.navigate(['/view-employees'])\n  //   })\n  // }\n\n  OnUpdate()\n  {\n    let employee = new Employee();\n    employee.surname = this.employeeForm.value.Surname!;\n    employee.firstName = this.employeeForm.value.FirstName!;\n    employee.email_Address = this.employeeForm.value.Email_Address!;\n    employee.physical_Address = this.employeeForm.value.Physical_Address!;\n    employee.phoneNumber = this.employeeForm.value.PhoneNumber!;\n\n   this.data.editEmployee(this.employee.employeeId,employee).subscribe((response:any) => {\n\n    if(response.statusCode == 200)\n    {\n      this.router.navigate(['/'])\n    }\n    else\n    {\n      alert(response.message);\n    }\n   });\n\n  }\n}\n\n\n\n","<h4>Edit Course</h4>\n<hr>\n<div class=\"container\">\n<div class=\"row\">  \n<form [formGroup]=\"employeeForm\" class=\"form-horizontal\"  (ngSubmit)=\"OnUpdate()\">\n    <div class=\"form-group\">\n        <label class=\" col-sm-1\" for=\"Surname\">Surname:</label>\n        <div class=\"col-sm-6\">\n          <input class=\"form-control\" id=\"Surname\" placeholder=\"Enter Surname\" [required]=\"true\" formControlName=\"Surname\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-1\" for=\"FirstName\">FirstName:</label>\n        <div class=\"col-sm-6\">\n          <input class=\"form-control\" id=\"FistName\" placeholder=\"Enter First Name\" [required]=\"true\" formControlName=\"FirstName\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-1\" for=\"Physical_Address\">Address:</label>\n        <div class=\"col-sm-6\">\n          <textarea class=\"form-control\" type=\"text\" id=\"Physical_Address\" placeholder=\"Enter Address\" [required]=\"true\" formControlName=\"Physical_Address\"></textarea>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"col-sm-1\" for=\"Email_Address\">Email:</label>\n        <div class=\"col-sm-6\">\n          <textarea class=\"form-control\" type=\"text\" id=\"PhoneNumber\" placeholder=\"Enter 10-digit number\" [required]=\"true\" formControlName=\"PhoneNumber\"></textarea>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"col-sm-offset-1 col-sm-6\">\n        <button style=\"margin-right:1em;\" type=\"submit\" [disabled]=\"!employeeForm.valid\" class=\"btn btn-sm btn-success\">Confirm</button>\n        <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancel()\">Cancel</button>\n      </div>\n    </div>\n  </form>\n  </div>\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}