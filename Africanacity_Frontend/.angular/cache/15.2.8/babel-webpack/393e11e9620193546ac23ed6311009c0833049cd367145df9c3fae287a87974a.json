{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inventory.service\";\nimport * as i2 from \"@angular/common\";\nfunction ChecklistComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.inventory_ItemId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.itemName);\n  }\n}\nexport class ChecklistComponent {\n  constructor(inventoryservice) {\n    this.inventoryservice = inventoryservice;\n    this.checklistItems = [];\n    this.predefinedLevel = 3; // Predefined level for the quantity\n  }\n\n  ngOnInit() {\n    // Subscribe to inventory updates or perform any other necessary initialization logic\n    this.checkInventory();\n  }\n  checkInventory() {\n    // Get the inventory items from the inventory service\n    this.inventoryservice.GetAllInventoryItems().subscribe(inventoryItems => {\n      // Iterate through each inventory item\n      for (let item of inventoryItems) {\n        // Check if the quantity is below the predefined level\n        if (item.quantity < this.predefinedLevel) {\n          // Add the item to the checklist\n          this.addToChecklist(item);\n        }\n      }\n    });\n  }\n  addToChecklist(inventoryitem) {\n    this.checklistItems.push(inventoryitem);\n  }\n}\nChecklistComponent.ɵfac = function ChecklistComponent_Factory(t) {\n  return new (t || ChecklistComponent)(i0.ɵɵdirectiveInject(i1.InventoryService));\n};\nChecklistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChecklistComponent,\n  selectors: [[\"app-checklist\"]],\n  decls: 9,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function ChecklistComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\");\n      i0.ɵɵtext(4, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\");\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"tbody\");\n      i0.ɵɵtemplate(8, ChecklistComponent_tr_8_Template, 5, 2, \"tr\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.inventoryservice.getChecklistItems());\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IASMA,0BAA8D;IACxDA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;;;;IADxBA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAmB;IAAnBA,sCAAmB;;;ACF/B,OAAM,MAAOC,kBAAkB;EAI7BC,YAAmBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAHnC,mBAAc,GAAoB,EAAE;IACpC,oBAAe,GAAW,CAAC,CAAC,CAAC;EAE2B;;EAExDC,QAAQ;IACN;IACA,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ;IACA,IAAI,CAACF,gBAAgB,CAACG,oBAAoB,EAAE,CAACC,SAAS,CAAEC,cAA+B,IAAI;MACzF;MACA,KAAK,IAAIC,IAAI,IAAID,cAAc,EAAE;QAC/B;QACA,IAAIC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,eAAe,EAAE;UACxC;UACA,IAAI,CAACC,cAAc,CAACH,IAAI,CAAC;;;IAG/B,CAAC,CAAC;EACJ;EAEAG,cAAc,CAACC,aAA4B;IACzC,IAAI,CAACC,cAAc,CAACC,IAAI,CAACF,aAAa,CAAC;EACzC;;AA3BWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT/BpB,6BAAO;MAGKA,kBAAE;MAAAA,iBAAK;MACXA,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MAIjBA,6BAAO;MACLA,iEAIK;MACPA,iBAAQ;;;MALeA,eAAuC;MAAvCA,kEAAuC","names":["i0","ChecklistComponent","constructor","inventoryservice","ngOnInit","checkInventory","GetAllInventoryItems","subscribe","inventoryItems","item","quantity","predefinedLevel","addToChecklist","inventoryitem","checklistItems","push","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\checklist\\checklist.component.html","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\checklist\\checklist.component.ts"],"sourcesContent":["<table>\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <!-- Add more columns as needed -->\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of inventoryservice.getChecklistItems()\">\n        <td>{{ item.inventory_ItemId }}</td>\n        <td>{{ item.itemName }}</td>\n        <!-- Display more item details as needed -->\n      </tr>\n    </tbody>\n  </table>\n  \n","import { Component } from '@angular/core';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\n\n@Component({\n  selector: 'app-checklist',\n  templateUrl: './checklist.component.html',\n  styleUrls: ['./checklist.component.css']\n})\nexport class ChecklistComponent {\n  checklistItems: InventoryItem[] = [];\n  predefinedLevel: number = 3; // Predefined level for the quantity\n\n  constructor(public inventoryservice: InventoryService) {}\n\n  ngOnInit() {\n    // Subscribe to inventory updates or perform any other necessary initialization logic\n    this.checkInventory();\n  }\n\n  checkInventory() {\n    // Get the inventory items from the inventory service\n    this.inventoryservice.GetAllInventoryItems().subscribe((inventoryItems: InventoryItem[]) => {\n      // Iterate through each inventory item\n      for (let item of inventoryItems) {\n        // Check if the quantity is below the predefined level\n        if (item.quantity < this.predefinedLevel) {\n          // Add the item to the checklist\n          this.addToChecklist(item);\n        }\n      }\n    });\n  }\n\n  addToChecklist(inventoryitem: InventoryItem) {\n    this.checklistItems.push(inventoryitem);\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}