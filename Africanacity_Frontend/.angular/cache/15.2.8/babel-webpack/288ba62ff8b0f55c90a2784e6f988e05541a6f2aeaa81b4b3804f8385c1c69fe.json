{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../../../../shared/employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../service/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../../../navbar/navbar.component\";\nexport let EditEmployeeComponent = /*#__PURE__*/(() => {\n  class EditEmployeeComponent {\n    constructor(employeeservice, router, activated, dialog, snackBar) {\n      this.employeeservice = employeeservice;\n      this.router = router;\n      this.activated = activated;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.editEmployee = new Employee();\n      this.updateEmployeeForm = new FormGroup({\n        surname: new FormControl('', [Validators.required]),\n        firstName: new FormControl('', [Validators.required]),\n        email_Address: new FormControl('', [Validators.required]),\n        physical_Address: new FormControl('', [Validators.required]),\n        phoneNumber: new FormControl('', [Validators.required])\n      });\n    }\n    ngOnInit() {\n      this.activated.params.subscribe(params => {\n        this.employeeservice.getEmployee(params['id']).subscribe(res => {\n          this.editEmployee = res;\n          this.updateEmployeeForm.controls['surname'].setValue(this.editEmployee.surname);\n          this.updateEmployeeForm.controls['firstName'].setValue(this.editEmployee.firstName);\n          this.updateEmployeeForm.controls['email_Address'].setValue(this.editEmployee.email_Address);\n          this.updateEmployeeForm.controls['physical_Address'].setValue(this.editEmployee.physical_Address);\n          this.updateEmployeeForm.controls['phoneNumber'].setValue(this.editEmployee.phoneNumber);\n        });\n      });\n    }\n    cancel() {\n      this.router.navigate(['/view-employees']);\n    }\n    updateEmployee() {\n      let employee = new Employee();\n      employee.surname = this.updateEmployeeForm.value.surname;\n      employee.firstName = this.updateEmployeeForm.value.firstName;\n      employee.email_Address = this.updateEmployeeForm.value.email_Address;\n      employee.physical_Address = this.updateEmployeeForm.value.physical_Address;\n      employee.phoneNumber = this.updateEmployeeForm.value.phoneNumber;\n      this.employeeservice.EditEmployee(this.editEmployee.employeeId, employee).subscribe(response => {\n        if (response.statusCode == 200) {\n          this.router.navigate(['/view-employees']);\n          window.location.reload();\n        } else {}\n      });\n      this.showSuccessMessage('Employee Informartion updated successfully!');\n    }\n    showSuccessMessage(message) {\n      const snackBarRef = this.snackBar.open(message, 'Ok', {\n        duration: 3000,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n  }\n  EditEmployeeComponent.ɵfac = function EditEmployeeComponent_Factory(t) {\n    return new (t || EditEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n  EditEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditEmployeeComponent,\n    selectors: [[\"app-edit-employee\"]],\n    decls: 42,\n    vars: 7,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [2, \"text-align\", \"center\", \"font-family\", \"'Times New Roman', Times, serif\", \"font-size\", \"50px\"], [1, \"container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"surname\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [1, \"col-sm-6\"], [\"id\", \"surname\", \"placeholder\", \"Enter Surname\", \"formControlName\", \"surname\", 1, \"form-control\", 3, \"required\"], [\"for\", \"firstName\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"id\", \"firstName\", \"placeholder\", \"Enter First Name\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"email_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"email_Address\", \"placeholder\", \"Enter Address\", \"formControlName\", \"email_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"physical_Address\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"physical_Address\", \"placeholder\", \"Enter Address\", \"formControlName\", \"physical_Address\", 1, \"form-control\", 3, \"required\"], [\"for\", \"phoneNumber\", 1, \"col-sm-1\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"placeholder\", \"Enter 10-digit number\", \"formControlName\", \"phoneNumber\", 1, \"form-control\", 3, \"required\"], [1, \"col-sm-offset-1\", \"col-sm-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", 2, \"margin-right\", \"1em\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n    template: function EditEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"app-navbar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"h4\", 4);\n        i0.ɵɵtext(6, \"Edit Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function EditEmployeeComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.updateEmployee();\n        });\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Surname:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"FirstName:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 9);\n        i0.ɵɵelement(20, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 7)(22, \"label\", 13);\n        i0.ɵɵtext(23, \"Email Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 9);\n        i0.ɵɵelement(25, \"textarea\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 7)(27, \"label\", 15);\n        i0.ɵɵtext(28, \"Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 9);\n        i0.ɵɵelement(30, \"textarea\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 7)(32, \"label\", 17);\n        i0.ɵɵtext(33, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 9);\n        i0.ɵɵelement(35, \"textarea\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 7)(37, \"div\", 19)(38, \"button\", 20);\n        i0.ɵɵtext(39, \"Confirm\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function EditEmployeeComponent_Template_button_click_40_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(41, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateEmployeeForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"required\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.updateEmployeeForm.valid);\n      }\n    },\n    dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName, i6.NavbarComponent]\n  });\n  return EditEmployeeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}