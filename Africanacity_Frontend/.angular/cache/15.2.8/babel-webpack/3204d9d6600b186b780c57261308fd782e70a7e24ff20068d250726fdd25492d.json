{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/inventory.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../../navbar/navbar.component\";\nfunction StocktakeComponent_div_4_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function StocktakeComponent_div_4_tr_13_Template_input_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r2.quantity = $event);\n    })(\"change\", function StocktakeComponent_div_4_tr_13_Template_input_change_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.updateQuantity(item_r2));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.inventory_ItemId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.itemName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", item_r2.quantity);\n  }\n}\nfunction StocktakeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"table\", 5)(4, \"thead\")(5, \"tr\")(6, \"th\");\n    i0.ɵɵtext(7, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Quantity\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"tbody\");\n    i0.ɵɵtemplate(13, StocktakeComponent_div_4_tr_13_Template, 7, 3, \"tr\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function StocktakeComponent_div_4_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.submitStockTake());\n    });\n    i0.ɵɵtext(15, \"Submit Stock Take\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Inventory Item Listing - \", ctx_r0.selectedType.name, \"\");\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.inventoryItems);\n  }\n}\nexport class StocktakeComponent {\n  constructor(route, inventoryservice) {\n    this.route = route;\n    this.inventoryservice = inventoryservice;\n    this.inventoryItems = [];\n    this.selectedType = null;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.typeId = +params['typeId'];\n      if (this.typeId) {\n        this.getInventoryItemsByType();\n      }\n    });\n  }\n  getInventoryItemsByType() {\n    this.inventoryservice.GetInventoryItemsByType(this.typeId).subscribe(items => {\n      this.inventoryItems = items;\n    });\n  }\n  updateQuantity(item) {\n    // Do any additional logic or validation here if needed\n  }\n  submitStockTake() {\n    const stockTake = {\n      stockTake_Id: 0,\n      date: new Date(),\n      stockQuantity: 0,\n      inventory_Items: this.inventoryItems\n    };\n    this.inventoryservice.submitStockTake(stockTake).subscribe(() => {\n      // Success message or additional logic after successful submission\n    }, error => {\n      // Handle error\n    });\n  }\n}\nStocktakeComponent.ɵfac = function StocktakeComponent_Factory(t) {\n  return new (t || StocktakeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.InventoryService));\n};\nStocktakeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StocktakeComponent,\n  selectors: [[\"app-stocktake\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-10\", \"order-md-1\"], [4, \"ngIf\"], [2, \"text-align\", \"center\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\", \"change\"]],\n  template: function StocktakeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, StocktakeComponent_div_4_Template, 16, 2, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedType);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel, i5.NavbarComponent],\n  styles: [\".heading[_ngcontent-%COMP%]{\\r\\n    \\r\\n    height: 50px;\\r\\n    text-align: center;\\r\\n    padding-top: 7px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\n\\r\\n.edit-form[_ngcontent-%COMP%]{\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.label[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 5px;\\r\\n    padding-bottom: 5px;\\r\\n} */\\r\\n\\r\\ntable[_ngcontent-%COMP%]{\\r\\n    padding-top: 60px;\\r\\n}\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n    \\r\\n    background-color: rgba(250, 246, 246, 0.966);\\r\\n    border-radius: 8px;\\r\\n    border-color: black;\\r\\n}\\r\\n.input-group[_ngcontent-%COMP%]{\\r\\n    width: 400px;\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-child(odd) > td[_ngcontent-%COMP%], .table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-child(odd) > th[_ngcontent-%COMP%] {\\r\\n  background-color: lightgray;\\r\\n  color: rgb(0, 0, 0);\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]{\\r\\n    border-radius: 50px;\\r\\n    border-color: black;\\r\\n}\\r\\n.table-striped[_ngcontent-%COMP%]{\\r\\n    padding-top: 200px;\\r\\n}\\r\\n.tableColor[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(165, 113, 207);\\r\\n}\\r\\n.outlined-table[_ngcontent-%COMP%]{\\r\\n    border: 1px solid #000; \\r\\n    border-collapse: collapse;\\r\\n\\r\\n}\\r\\n.input-group[_ngcontent-%COMP%]{\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.outlined-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .outlined-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\r\\n  border: 1px solid rgb(165, 113, 207);; \\r\\n  padding: 10px; \\r\\n}\\r\\n.table-container[_ngcontent-%COMP%]{\\r\\n    margin-top: 60px\\r\\n}\\r\\n.table-hover[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\r\\n    background-color: grey;\\r\\n  }\\r\\n  .list-group[_ngcontent-%COMP%]{\\r\\n    padding-top: 20px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5pc3RyYXRpb24vSW52ZW50b3J5IE1hbmFnZW1lbnQvSW52ZW50b3J5IEl0ZW1zL3N0b2NrdGFrZS9zdG9ja3Rha2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1DQUFtQztJQUNuQyxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQiw0Q0FBNEM7QUFDaEQ7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCLEVBQUU7OztJQUdFLGlCQUFpQjtBQUNyQjtBQUNBOztJQUVJLDRDQUE0QztJQUM1QyxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxZQUFZOztBQUVoQjs7O0FBR0E7O0VBRUUsMkJBQTJCO0VBQzNCLG1CQUFtQjtBQUNyQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxvQ0FBb0M7QUFDeEM7QUFDQTtJQUNJLHNCQUFzQjtJQUN0Qix5QkFBeUI7O0FBRTdCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7O0VBRUUsb0NBQW9DO0VBQ3BDLGFBQWE7QUFDZjtBQUNBO0lBQ0k7QUFDSjtBQUNBO0lBQ0ksc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxpQkFBaUI7RUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGluZ3tcclxuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IGRhcmttYWdlbnRhOyAqL1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDdweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG59XHJcblxyXG4uZWRpdC1mb3Jte1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmxhYmVse1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcclxufSAqL1xyXG5cclxudGFibGV7XHJcbiAgICBwYWRkaW5nLXRvcDogNjBweDtcclxufVxyXG4uZm9ybS1jb250cm9sIHtcclxuICAgIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTAsIDI0NiwgMjQ2LCAwLjk2Nik7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG59XHJcbi5pbnB1dC1ncm91cHtcclxuICAgIHdpZHRoOiA0MDBweDtcclxuICAgIFxyXG59XHJcblxyXG5cclxuLnRhYmxlLXN0cmlwZWQ+dGJvZHk+dHI6bnRoLWNoaWxkKG9kZCk+dGQsXHJcbi50YWJsZS1zdHJpcGVkPnRib2R5PnRyOm50aC1jaGlsZChvZGQpPnRoIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XHJcbiAgY29sb3I6IHJnYigwLCAwLCAwKTtcclxufVxyXG5idXR0b257XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxufVxyXG4udGFibGUtc3RyaXBlZHtcclxuICAgIHBhZGRpbmctdG9wOiAyMDBweDtcclxufVxyXG4udGFibGVDb2xvcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxNjUsIDExMywgMjA3KTtcclxufVxyXG4ub3V0bGluZWQtdGFibGV7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwOyBcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcblxyXG59XHJcbi5pbnB1dC1ncm91cHtcclxuICAgIG1hcmdpbi10b3A6IDI1cHg7XHJcbn1cclxuXHJcbi5vdXRsaW5lZC10YWJsZSB0aCxcclxuLm91dGxpbmVkLXRhYmxlIHRkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMTY1LCAxMTMsIDIwNyk7OyBcclxuICBwYWRkaW5nOiAxMHB4OyBcclxufVxyXG4udGFibGUtY29udGFpbmVye1xyXG4gICAgbWFyZ2luLXRvcDogNjBweFxyXG59XHJcbi50YWJsZS1ob3ZlciB0cjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xyXG4gIH1cclxuICAubGlzdC1ncm91cHtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAiBUA,0BAAwC;IAClCA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAGAA;MAAA;MAAA;MAAA,OAAaA,yCACvB;IAAA,EADqC;MAAA;MAAA;MAAA;MAAA,OACjBA,6CAAoB;IAAA,EADH;IAF7BA,iBAIE;;;;IAPAA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAmB;IAAnBA,sCAAmB;IAInBA,eAA2B;IAA3BA,0CAA2B;;;;;;IAjBvCA,2BAA0B;IACQA,YAAgD;IAAAA,iBAAK;IACrFA,gCAAqB;IAGXA,kBAAE;IAAAA,iBAAK;IACXA,0BAAI;IAAAA,oBAAI;IAAAA,iBAAK;IACbA,2BAAI;IAAAA,yBAAQ;IAAAA,iBAAK;IAGrBA,8BAAO;IACLA,yEAUK;IACPA,iBAAQ;IAEVA,kCAAoC;IAA5BA;MAAAA;MAAA;MAAA,OAASA,uCAAiB;IAAA,EAAC;IAACA,kCAAiB;IAAAA,iBAAS;;;;IAvB9BA,eAAgD;IAAhDA,gFAAgD;IAUvDA,gBAAiB;IAAjBA,+CAAiB;;;ACHhD,OAAM,MAAOC,kBAAkB;EAK7BC,YACUC,KAAqB,EACrBC,gBAAkC;IADlC,UAAK,GAALD,KAAK;IACL,qBAAgB,GAAhBC,gBAAgB;IAL1B,mBAAc,GAAoB,EAAE;IACpC,iBAAY,GAAyB,IAAI;EAKtC;EAEHC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACrC,IAAI,CAACE,MAAM,GAAG,CAACF,MAAM,CAAC,QAAQ,CAAC;MAC/B,IAAI,IAAI,CAACE,MAAM,EAAE;QACf,IAAI,CAACC,uBAAuB,EAAE;;IAElC,CAAC,CAAC;EACJ;EAEAA,uBAAuB;IACrB,IAAI,CAACL,gBAAgB,CAClBM,uBAAuB,CAAC,IAAI,CAACF,MAAM,CAAC,CACpCD,SAAS,CAAEI,KAAsB,IAAI;MACpC,IAAI,CAACC,cAAc,GAAGD,KAAK;IAC7B,CAAC,CAAC;EACN;EAEAE,cAAc,CAACC,IAAmB;IAChC;EAAA;EAGFC,eAAe;IACb,MAAMC,SAAS,GAAc;MAC3BC,YAAY,EAAE,CAAC;MACfC,IAAI,EAAE,IAAIC,IAAI,EAAE;MAChBC,aAAa,EAAE,CAAC;MAChBC,eAAe,EAAE,IAAI,CAACT;KACvB;IAED,IAAI,CAACR,gBAAgB,CAACW,eAAe,CAACC,SAAS,CAAC,CAACT,SAAS,CACxD,MAAK;MACH;IAAA,CACD,EACAe,KAAU,IAAI;MACb;IAAA,CACD,CACF;EACH;;AA/CWrB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDb/B3B,8BAAiB;MAEbA,6BAAyB;MAC3BA,iBAAM;MACNA,8BAAkC;MAChCA,oEAyBM;MACRA,iBAAM;;;MA1BEA,eAAkB;MAAlBA,uCAAkB","names":["i0","StocktakeComponent","constructor","route","inventoryservice","ngOnInit","params","subscribe","typeId","getInventoryItemsByType","GetInventoryItemsByType","items","inventoryItems","updateQuantity","item","submitStockTake","stockTake","stockTake_Id","date","Date","stockQuantity","inventory_Items","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\stocktake\\stocktake.component.html","C:\\Users\\Lavania Naidoo\\Desktop\\370development-team-24\\Africanacity_Frontend\\src\\app\\administration\\Inventory Management\\Inventory Items\\stocktake\\stocktake.component.ts"],"sourcesContent":["<!-- stocktake.component.html -->\n<div class=\"row\">\n  <div class=\"col-md-2\">\n    <app-navbar></app-navbar>\n  </div>\n  <div class=\"col-md-10 order-md-1\">\n    <div *ngIf=\"selectedType\">\n      <h3 style=\"text-align: center;\">Inventory Item Listing - {{ selectedType.name }}</h3>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Quantity</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of inventoryItems\">\n            <td>{{ item.inventory_ItemId }}</td>\n            <td>{{ item.itemName }}</td>\n            <td>\n              <input\n                type=\"number\"\n                [(ngModel)]=\"item.quantity\"\n                (change)=\"updateQuantity(item)\"\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <button (click)=\"submitStockTake()\">Submit Stock Take</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InventoryService } from 'src/app/service/inventory.service';\nimport { InventoryItem } from 'src/app/shared/inventoryitem';\nimport { InventoryType } from 'src/app/shared/inventorytype';\nimport { StockTake } from 'src/app/shared/stocktake';\n\n\n\n@Component({\n  selector: 'app-stocktake',\n  templateUrl: './stocktake.component.html',\n  styleUrls: ['./stocktake.component.css'],\n})\nexport class StocktakeComponent implements OnInit {\n  typeId?: number;\n  inventoryItems: InventoryItem[] = [];\n  selectedType: InventoryType | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private inventoryservice: InventoryService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.typeId = +params['typeId'];\n      if (this.typeId) {\n        this.getInventoryItemsByType();\n      }\n    });\n  }\n\n  getInventoryItemsByType(): void {\n    this.inventoryservice\n      .GetInventoryItemsByType(this.typeId)\n      .subscribe((items: InventoryItem[]) => {\n        this.inventoryItems = items;\n      });\n  }\n\n  updateQuantity(item: InventoryItem): void {\n    // Do any additional logic or validation here if needed\n  }\n\n  submitStockTake(): void {\n    const stockTake: StockTake = {\n      stockTake_Id: 0, // This will be generated by the server\n      date: new Date(),\n      stockQuantity: 0, // Will be calculated on the server-side\n      inventory_Items: this.inventoryItems,\n    };\n\n    this.inventoryservice.submitStockTake(stockTake).subscribe(\n      () => {\n        // Success message or additional logic after successful submission\n      },\n      (error: any) => {\n        // Handle error\n      }\n    );\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}