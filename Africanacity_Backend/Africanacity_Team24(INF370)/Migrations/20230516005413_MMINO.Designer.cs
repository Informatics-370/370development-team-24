// <auto-generated />
using System;
using Africanacity_Team24_INF370_.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Africanacity_Team24_INF370_.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230516005413_MMINO")]
    partial class MMINO
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.Help", b =>
                {
                    b.Property<int>("HelpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HelpId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HelpId");

                    b.ToTable("Helps");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TitleId");

                    b.HasIndex("UserId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EntertainerId")
                        .HasColumnType("int");

                    b.Property<int?>("PasswordId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("UserId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EntertainerId");

                    b.HasIndex("PasswordId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Access", b =>
                {
                    b.Property<int>("AccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccessId");

                    b.ToTable("Accesses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Access_UserRole", b =>
                {
                    b.Property<int>("AccessesAccessId")
                        .HasColumnType("int");

                    b.Property<int>("User_RolesUser_RoleId")
                        .HasColumnType("int");

                    b.HasKey("AccessesAccessId", "User_RolesUser_RoleId");

                    b.HasIndex("User_RolesUser_RoleId");

                    b.ToTable("Access_UserRoles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Administrator", b =>
                {
                    b.Property<int>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministratorId"), 1L, 1);

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("HelpId")
                        .HasColumnType("int");

                    b.Property<int?>("Inventory_ItemId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdministratorId");

                    b.HasIndex("EventId");

                    b.HasIndex("HelpId");

                    b.HasIndex("Inventory_ItemId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("OrderId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email_Address = "VanessaJames@gmial.com",
                            FirstName = "Vanessa",
                            PhoneNumber = "0847541236",
                            Surname = "James"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee_Role", b =>
                {
                    b.Property<int>("Employee_RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_RoleId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Employee_RoleId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Employee_Roles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Help_Category", b =>
                {
                    b.Property<int>("Help_CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Help_CategoryId"), 1L, 1);

                    b.Property<int?>("HelpId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Help_CategoryId");

                    b.HasIndex("HelpId");

                    b.ToTable("Help_Categories");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Password", b =>
                {
                    b.Property<int>("PasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PasswordId"), 1L, 1);

                    b.Property<string>("Dataset")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PasswordId");

                    b.ToTable("Passwords");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.User_Role", b =>
                {
                    b.Property<int>("User_RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_RoleId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("User_RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Roles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.VAT", b =>
                {
                    b.Property<int>("VatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VatId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VatId");

                    b.ToTable("Vats");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Booking_Status", b =>
                {
                    b.Property<int>("Booking_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_StatusId"), 1L, 1);

                    b.Property<int?>("BookingsBookingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Booking_StatusId");

                    b.HasIndex("BookingsBookingId");

                    b.ToTable("Booking_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Bookings", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BookingId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer", b =>
                {
                    b.Property<int>("EntertainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntertainerId"), 1L, 1);

                    b.Property<int?>("BookingsBookingId")
                        .HasColumnType("int");

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntertainerId");

                    b.HasIndex("BookingsBookingId");

                    b.ToTable("Entertainers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_EntertainmentType", b =>
                {
                    b.Property<int>("EntertainersEntertainerId")
                        .HasColumnType("int");

                    b.Property<int>("Entertainment_TypesEntertainment_TypeId")
                        .HasColumnType("int");

                    b.HasKey("EntertainersEntertainerId", "Entertainment_TypesEntertainment_TypeId");

                    b.HasIndex("Entertainment_TypesEntertainment_TypeId");

                    b.ToTable("Entertainer_Entertainments");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_Schedule", b =>
                {
                    b.Property<int>("EntertainersEntertainerId")
                        .HasColumnType("int");

                    b.Property<int>("SchedulesScheduleId")
                        .HasColumnType("int");

                    b.HasKey("EntertainersEntertainerId", "SchedulesScheduleId");

                    b.HasIndex("SchedulesScheduleId");

                    b.ToTable("Entertainer_Schedules");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", b =>
                {
                    b.Property<int>("Entertainment_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Entertainment_TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Entertainment_TypeId");

                    b.ToTable("Entertainment_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"), 1L, 1);

                    b.Property<int?>("BookingsBookingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EventId");

                    b.HasIndex("BookingsBookingId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("End_Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start_Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule_Status", b =>
                {
                    b.Property<int>("Schedule_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Schedule_StatusId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Schedule_StatusId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Schedule_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", b =>
                {
                    b.Property<int>("Inventory_ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inventory_ItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Inventory_ItemId");

                    b.ToTable("Inventory_Items");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Type", b =>
                {
                    b.Property<int>("Inventory_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inventory_TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Inventory_ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Inventory_TypeId");

                    b.HasIndex("Inventory_ItemId");

                    b.ToTable("Inventory_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_InventoryItem", b =>
                {
                    b.Property<int>("Inventory_ItemsInventory_ItemId")
                        .HasColumnType("int");

                    b.Property<int>("SuppliersSupplierId")
                        .HasColumnType("int");

                    b.HasKey("Inventory_ItemsInventory_ItemId", "SuppliersSupplierId");

                    b.HasIndex("SuppliersSupplierId");

                    b.ToTable("Supplier_InventoryItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_Type", b =>
                {
                    b.Property<int>("Supplier_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Supplier_TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Supplier_TypeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Supplier_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Login.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrinkId"), 1L, 1);

                    b.Property<int?>("Drink_PriceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DrinkId");

                    b.HasIndex("Drink_PriceId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Price", b =>
                {
                    b.Property<int>("Drink_PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Drink_PriceId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("Drink_PriceId");

                    b.ToTable("Drink_Prices");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", b =>
                {
                    b.Property<int>("Drink_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Drink_TypeId"), 1L, 1);

                    b.Property<int?>("DrinkId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Drink_TypeId");

                    b.HasIndex("DrinkId");

                    b.ToTable("Drink_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Food_Type", b =>
                {
                    b.Property<int>("FoodTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FoodTypeId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Food_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Menu_Type", b =>
                {
                    b.Property<int>("Menu_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Menu_TypeId"), 1L, 1);

                    b.Property<int?>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Menu_TypeId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Menu_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MenuItem_PriceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MenuItem_PriceId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", b =>
                {
                    b.Property<int>("Menu_CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Menu_CategoryId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Menu_CategoryId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuItem_Categories");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Price", b =>
                {
                    b.Property<int>("MenuItem_PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItem_PriceId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MenuItem_PriceId");

                    b.ToTable("MenuItem_Prices");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Drink", b =>
                {
                    b.Property<int>("DrinksDrinkId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("DrinksDrinkId", "OrdersOrderId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("Order_Drinks");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_MenuItem", b =>
                {
                    b.Property<int>("MenuItemsMenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersOrderId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemsMenuItemId", "OrdersOrderId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("Order_MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Status", b =>
                {
                    b.Property<int>("Order_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_StatusId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Order_StatusId");

                    b.HasIndex("OrderId");

                    b.ToTable("Order_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", b =>
                {
                    b.Property<int>("Payment_MethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_MethodId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("Payment_MethodId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Payment_Methods");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Table_Number", b =>
                {
                    b.Property<int>("Table_NumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Table_NumberId"), 1L, 1);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Table_NumberId");

                    b.HasIndex("OrderId");

                    b.ToTable("Table_Numbers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.Title", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Admin.User", null)
                        .WithMany("Titles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.User", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Users")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Employee", null)
                        .WithMany("Users")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainer", null)
                        .WithMany("Users")
                        .HasForeignKey("EntertainerId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Password", null)
                        .WithMany("Users")
                        .HasForeignKey("PasswordId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Access_UserRole", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Access", null)
                        .WithMany()
                        .HasForeignKey("AccessesAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.User_Role", null)
                        .WithMany()
                        .HasForeignKey("User_RolesUser_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Administrator", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Event", null)
                        .WithMany("Administrators")
                        .HasForeignKey("EventId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Admin.Help", null)
                        .WithMany("Administrators")
                        .HasForeignKey("HelpId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", null)
                        .WithMany("Administrators")
                        .HasForeignKey("Inventory_ItemId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Schedule", null)
                        .WithMany("Administrators")
                        .HasForeignKey("ScheduleId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Supplier", null)
                        .WithMany("Administrators")
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany("Employees")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee_Role", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Employee", null)
                        .WithMany("Employee_Types")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Help_Category", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Admin.Help", null)
                        .WithMany("Help_Categories")
                        .HasForeignKey("HelpId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.User_Role", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Admin.User", null)
                        .WithMany("User_Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Booking_Status", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Bookings", null)
                        .WithMany("Booking_Statuses")
                        .HasForeignKey("BookingsBookingId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Bookings", null)
                        .WithMany("Entertainers")
                        .HasForeignKey("BookingsBookingId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_EntertainmentType", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainer", null)
                        .WithMany()
                        .HasForeignKey("EntertainersEntertainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", null)
                        .WithMany()
                        .HasForeignKey("Entertainment_TypesEntertainment_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_Schedule", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainer", null)
                        .WithMany()
                        .HasForeignKey("EntertainersEntertainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Schedule", null)
                        .WithMany()
                        .HasForeignKey("SchedulesScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Event", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Bookings", null)
                        .WithMany("Events")
                        .HasForeignKey("BookingsBookingId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule_Status", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Schedule", null)
                        .WithMany("Schedule_Statuses")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Type", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", null)
                        .WithMany("Inventory_Types")
                        .HasForeignKey("Inventory_ItemId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_InventoryItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", null)
                        .WithMany()
                        .HasForeignKey("Inventory_ItemsInventory_ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SuppliersSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_Type", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Supplier", null)
                        .WithMany("Supplier_Types")
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink_Price", null)
                        .WithMany("Drinks")
                        .HasForeignKey("Drink_PriceId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink", null)
                        .WithMany("Drink_Types")
                        .HasForeignKey("DrinkId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Food_Type", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", null)
                        .WithMany("Food_Types")
                        .HasForeignKey("MenuItemId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Menu_Type", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", null)
                        .WithMany("Menu_Types")
                        .HasForeignKey("MenuItemId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Price", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuItem_PriceId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", null)
                        .WithMany("MenuItem_Categories")
                        .HasForeignKey("MenuItemId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Drink", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink", null)
                        .WithMany()
                        .HasForeignKey("DrinksDrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_MenuItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", null)
                        .WithMany()
                        .HasForeignKey("MenuItemsMenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Status", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany("OrderStatuses")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany("PaymentMethods")
                        .HasForeignKey("OrderId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Payment", null)
                        .WithMany("Payment_Methods")
                        .HasForeignKey("PaymentId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Table_Number", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany("Table_Numbers")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.Help", b =>
                {
                    b.Navigation("Administrators");

                    b.Navigation("Help_Categories");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.User", b =>
                {
                    b.Navigation("Titles");

                    b.Navigation("User_Roles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Administrator", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee", b =>
                {
                    b.Navigation("Employee_Types");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Password", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Bookings", b =>
                {
                    b.Navigation("Booking_Statuses");

                    b.Navigation("Entertainers");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Event", b =>
                {
                    b.Navigation("Administrators");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule", b =>
                {
                    b.Navigation("Administrators");

                    b.Navigation("Schedule_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", b =>
                {
                    b.Navigation("Administrators");

                    b.Navigation("Inventory_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier", b =>
                {
                    b.Navigation("Administrators");

                    b.Navigation("Supplier_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink", b =>
                {
                    b.Navigation("Drink_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Price", b =>
                {
                    b.Navigation("Drinks");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", b =>
                {
                    b.Navigation("Food_Types");

                    b.Navigation("MenuItem_Categories");

                    b.Navigation("Menu_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Price", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("OrderStatuses");

                    b.Navigation("PaymentMethods");

                    b.Navigation("Table_Numbers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment", b =>
                {
                    b.Navigation("Payment_Methods");
                });
#pragma warning restore 612, 618
        }
    }
}
