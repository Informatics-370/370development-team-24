// <auto-generated />
using System;
using Africanacity_Team24_INF370_.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Africanacity_Team24_INF370_.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Access", b =>
                {
                    b.Property<int>("AccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccessId");

                    b.ToTable("Accesses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Access_UserRole", b =>
                {
                    b.Property<int>("AccessesAccessId")
                        .HasColumnType("int");

                    b.Property<int>("User_RolesUser_RoleId")
                        .HasColumnType("int");

                    b.HasKey("AccessesAccessId", "User_RolesUser_RoleId");

                    b.HasIndex("User_RolesUser_RoleId");

                    b.ToTable("Access_UserRoles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.AdminInfor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ResetPasswordTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Administrator", b =>
                {
                    b.Property<int>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministratorId"), 1L, 1);

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdministratorId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId");

                    b.HasIndex("AdministratorId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            Amount = 0.10m,
                            Description = "10% Discount",
                            End_Date = new DateTime(2023, 9, 6, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2460),
                            Name = "Month end discount",
                            Start_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2459)
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Employee_RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Employment_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("Employee_RoleId");

                    b.HasIndex("GenderId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email_Address = "VanessaJames@gmail.com",
                            Employee_RoleId = 1,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1236),
                            FirstName = "Vanessa",
                            GenderId = 2,
                            PhoneNumber = "0847541236",
                            Physical_Address = "404 Jacob Street",
                            Surname = "James"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Email_Address = "SerenaWilliams@gmail.com",
                            Employee_RoleId = 2,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1262),
                            FirstName = "Serena",
                            GenderId = 2,
                            PhoneNumber = "0842341236",
                            Physical_Address = "132 Harriet Street",
                            Surname = "Williams"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Email_Address = "EdrisElba@gmail.com",
                            Employee_RoleId = 1,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1272),
                            FirstName = "Edris",
                            GenderId = 1,
                            PhoneNumber = "0212378798",
                            Physical_Address = "245 homelyn Street",
                            Surname = "Elba"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Email_Address = "NyongoLupita@gmail.com",
                            Employee_RoleId = 2,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1281),
                            FirstName = "Lupita",
                            GenderId = 2,
                            PhoneNumber = "0455783475",
                            Physical_Address = "254 Summer Street",
                            Surname = "Nyongo"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Email_Address = "MicheaJackson@gmail.com",
                            Employee_RoleId = 2,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1290),
                            FirstName = "Micheal",
                            GenderId = 3,
                            PhoneNumber = "0874567836",
                            Physical_Address = "567 Winter Street",
                            Surname = "Jackson"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Email_Address = "TaehyungKim@gmial.com",
                            Employee_RoleId = 1,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1301),
                            FirstName = "Taehyung",
                            GenderId = 1,
                            PhoneNumber = "0874562134",
                            Physical_Address = "345 Shallow  Street",
                            Surname = "Kim"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Email_Address = "ZendayaColeman@gmail.com",
                            Employee_RoleId = 1,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1310),
                            FirstName = "Zendaya",
                            GenderId = 2,
                            PhoneNumber = "0212378798",
                            Physical_Address = "243 Super Street ",
                            Surname = "Coleman"
                        },
                        new
                        {
                            EmployeeId = 8,
                            Email_Address = "RogerFederal@gmail.com",
                            Employee_RoleId = 1,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1319),
                            FirstName = "Roger",
                            GenderId = 3,
                            PhoneNumber = "0612346487",
                            Physical_Address = "987 Wall Street",
                            Surname = "Federal"
                        },
                        new
                        {
                            EmployeeId = 9,
                            Email_Address = "JenniferLOpez@gmail.com",
                            Employee_RoleId = 2,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1327),
                            FirstName = "Jennifer",
                            GenderId = 3,
                            PhoneNumber = "0874834576",
                            Physical_Address = "967 Ballard Street",
                            Surname = "Lopez"
                        },
                        new
                        {
                            EmployeeId = 10,
                            Email_Address = "ChadwickBoseman@gmail.com",
                            Employee_RoleId = 2,
                            Employment_Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(1338),
                            FirstName = "Chadwick",
                            GenderId = 1,
                            PhoneNumber = "0923456789",
                            Physical_Address = "483 Alien Street",
                            Surname = "Boseman"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee_Role", b =>
                {
                    b.Property<int>("Employee_RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_RoleId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Employee_RoleId");

                    b.ToTable("Employee_Roles");

                    b.HasData(
                        new
                        {
                            Employee_RoleId = 1,
                            Description = "The waiter serves the customers and takes orders",
                            Name = "Waiter"
                        },
                        new
                        {
                            Employee_RoleId = 2,
                            Description = "The chef prepares the meals and notifies the waiter of ready orders.",
                            Name = "Chef"
                        },
                        new
                        {
                            Employee_RoleId = 3,
                            Description = "The kitchen staff assists the chef prepare meals.",
                            Name = "Kitchen Staff"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"), 1L, 1);

                    b.Property<int?>("GenderId1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.HasIndex("GenderId1");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            Name = "Male"
                        },
                        new
                        {
                            GenderId = 2,
                            Name = "Female"
                        },
                        new
                        {
                            GenderId = 3,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Help", b =>
                {
                    b.Property<int>("HelpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HelpId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Help_CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HelpId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("Help_CategoryId");

                    b.ToTable("Helps");

                    b.HasData(
                        new
                        {
                            HelpId = 1,
                            Description = "MMINO Restaurant serves various types of cuisines",
                            Name = "What food does MMINO Restaurant serve?"
                        },
                        new
                        {
                            HelpId = 2,
                            Description = "MMINO Restaurant is located in Hatfield,Pretoria. 1005 Arcadia Street",
                            Name = "Where is MMINO Restaurant?"
                        },
                        new
                        {
                            HelpId = 3,
                            Description = "You can book for a live entertainment on the website.",
                            Name = "How how do you book for a live entertainment slot?"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Help_Category", b =>
                {
                    b.Property<int>("Help_CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Help_CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Help_CategoryId");

                    b.ToTable("Help_Categories");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Password", b =>
                {
                    b.Property<int>("PasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PasswordId"), 1L, 1);

                    b.Property<string>("Dataset")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PasswordId");

                    b.ToTable("Passwords");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TitleId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.User_Role", b =>
                {
                    b.Property<int>("User_RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_RoleId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("User_RoleId");

                    b.ToTable("User_Roles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.VAT", b =>
                {
                    b.Property<int>("VatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VatId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VatId");

                    b.ToTable("Vats");

                    b.HasData(
                        new
                        {
                            VatId = 1,
                            Amount = 0.10m,
                            Description = "10% VAT on total"
                        },
                        new
                        {
                            VatId = 2,
                            Amount = 0.15m,
                            Description = "15% VAT on total"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Booking_Status", b =>
                {
                    b.Property<int>("Booking_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_StatusId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Booking_StatusId");

                    b.ToTable("Booking_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Bookings", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<string>("Additional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Booking_StatusId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Demo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntertainerId")
                        .HasColumnType("int");

                    b.Property<int>("Entertainment_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Eventname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingId");

                    b.HasIndex("Booking_StatusId");

                    b.HasIndex("EntertainerId");

                    b.HasIndex("Entertainment_TypeId");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer", b =>
                {
                    b.Property<int>("EntertainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntertainerId"), 1L, 1);

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntertainerId");

                    b.ToTable("Entertainers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_EntertainmentType", b =>
                {
                    b.Property<int>("Entertainer_EntertainmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Entertainer_EntertainmentTypeId"), 1L, 1);

                    b.HasKey("Entertainer_EntertainmentTypeId");

                    b.ToTable("Entertainer_Entertainments");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_Schedule", b =>
                {
                    b.Property<int>("Entertainer_ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Entertainer_ScheduleId"), 1L, 1);

                    b.HasKey("Entertainer_ScheduleId");

                    b.ToTable("Entertainer_Schedules");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", b =>
                {
                    b.Property<int>("Entertainment_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Entertainment_TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntertainerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Entertainment_TypeId");

                    b.HasIndex("EntertainerId");

                    b.ToTable("Entertainment_Type");

                    b.HasData(
                        new
                        {
                            Entertainment_TypeId = 1,
                            Description = "Poetry recitations",
                            Name = "Poetry"
                        },
                        new
                        {
                            Entertainment_TypeId = 2,
                            Description = "One-liners for a comedic performance",
                            Name = "StandUp Comedy"
                        },
                        new
                        {
                            Entertainment_TypeId = 3,
                            Description = "Present dance as an art form, ballet, amapiano styles, hipHop dancers",
                            Name = "Dance"
                        },
                        new
                        {
                            Entertainment_TypeId = 4,
                            Description = "Artits who perform own music. All types of music",
                            Name = "Music"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EventId");

                    b.HasIndex("AdministratorId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            Description = "An event filled with spectacular music performances and art display ",
                            Name = "Smooth Sunday"
                        },
                        new
                        {
                            EventId = 2,
                            Description = "An event where various forms of entertainments take place",
                            Name = "Wacky Wednesday"
                        },
                        new
                        {
                            EventId = 3,
                            Description = " poets are invited to recite poems and another kind of artistry ",
                            Name = "Poetry Musings"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Pending_Booking", b =>
                {
                    b.Property<int>("Pending_BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pending_BookingId"), 1L, 1);

                    b.Property<string>("Additional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Demo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Entertainment_TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Eventname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Pending_BookingId");

                    b.HasIndex("Entertainment_TypeId");

                    b.HasIndex("EventId");

                    b.ToTable("Pending_Bookings");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("Schedule_StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Start_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("EventId");

                    b.HasIndex("Schedule_StatusId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            ScheduleId = 1,
                            Date = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Musician can book performance",
                            End_Time = "14:30 PM",
                            EventId = 1,
                            Start_Time = "14;00 PM",
                            Title = "Music slot"
                        },
                        new
                        {
                            ScheduleId = 2,
                            Date = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Contemporary Dance performance",
                            End_Time = "21:30 PM",
                            EventId = 2,
                            Start_Time = "21;00 PM",
                            Title = "Dance slot "
                        },
                        new
                        {
                            ScheduleId = 3,
                            Date = new DateTime(2023, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Poet recital",
                            End_Time = "19:15 PM",
                            EventId = 3,
                            Start_Time = "19;00 PM",
                            Title = "Poetry"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule_Status", b =>
                {
                    b.Property<int>("Schedule_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Schedule_StatusId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Schedule_StatusId");

                    b.ToTable("Schedule_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.DiscrepencyItem", b =>
                {
                    b.Property<int>("DiscrepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscrepId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Inventory_ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityDifference")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WriteOffStockWriteOffId")
                        .HasColumnType("int");

                    b.HasKey("DiscrepId");

                    b.HasIndex("WriteOffStockWriteOffId");

                    b.ToTable("DiscrepencyItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", b =>
                {
                    b.Property<int>("Inventory_ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inventory_ItemId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Inventory_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Inventory_ItemId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("Inventory_TypeId");

                    b.ToTable("Inventory_Items");

                    b.HasData(
                        new
                        {
                            Inventory_ItemId = 1,
                            Description = "Freshly produced",
                            Inventory_TypeId = 1,
                            ItemName = "Lettuce",
                            Quantity = 2
                        },
                        new
                        {
                            Inventory_ItemId = 2,
                            Description = "Used for all chicken dishes",
                            Inventory_TypeId = 1,
                            ItemName = "Chicken",
                            Quantity = 6
                        },
                        new
                        {
                            Inventory_ItemId = 3,
                            Description = "Needs to be cooked well",
                            Inventory_TypeId = 1,
                            ItemName = "Mogodu",
                            Quantity = 5
                        },
                        new
                        {
                            Inventory_ItemId = 4,
                            Description = "Served in all drinks with the gin recipie",
                            Inventory_TypeId = 3,
                            ItemName = "Gin",
                            Quantity = 15
                        },
                        new
                        {
                            Inventory_ItemId = 5,
                            Description = "To Quench your Thirst",
                            Inventory_TypeId = 2,
                            ItemName = "Coke",
                            Quantity = 24
                        },
                        new
                        {
                            Inventory_ItemId = 6,
                            Description = "For those who like no taste",
                            Inventory_TypeId = 2,
                            ItemName = "Sarkling Water",
                            Quantity = 30
                        },
                        new
                        {
                            Inventory_ItemId = 7,
                            Description = "Many different types served",
                            Inventory_TypeId = 3,
                            ItemName = "Beer",
                            Quantity = 12
                        },
                        new
                        {
                            Inventory_ItemId = 8,
                            Description = "One of the starches served with each dish",
                            Inventory_TypeId = 1,
                            ItemName = "Rice",
                            Quantity = 4
                        },
                        new
                        {
                            Inventory_ItemId = 9,
                            Description = "One of the starches served with each dish",
                            Inventory_TypeId = 1,
                            ItemName = "Maize Meal",
                            Quantity = 3
                        },
                        new
                        {
                            Inventory_ItemId = 10,
                            Description = "For those who do not like fizz",
                            Inventory_TypeId = 2,
                            ItemName = "Apple Juice",
                            Quantity = 24
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Price", b =>
                {
                    b.Property<int>("InventoryPrice_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryPrice_Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Inventory_ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InventoryPrice_Id");

                    b.HasIndex("Inventory_ItemId");

                    b.ToTable("Inventory_Prices");

                    b.HasData(
                        new
                        {
                            InventoryPrice_Id = 1,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2627),
                            Inventory_ItemId = 1,
                            Price = 25m
                        },
                        new
                        {
                            InventoryPrice_Id = 2,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2639),
                            Inventory_ItemId = 2,
                            Price = 250m
                        },
                        new
                        {
                            InventoryPrice_Id = 3,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2648),
                            Inventory_ItemId = 3,
                            Price = 200m
                        },
                        new
                        {
                            InventoryPrice_Id = 4,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2657),
                            Inventory_ItemId = 4,
                            Price = 38m
                        },
                        new
                        {
                            InventoryPrice_Id = 5,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2665),
                            Inventory_ItemId = 5,
                            Price = 45m
                        },
                        new
                        {
                            InventoryPrice_Id = 6,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2674),
                            Inventory_ItemId = 6,
                            Price = 75m
                        },
                        new
                        {
                            InventoryPrice_Id = 7,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2682),
                            Inventory_ItemId = 7,
                            Price = 100m
                        },
                        new
                        {
                            InventoryPrice_Id = 8,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2691),
                            Inventory_ItemId = 8,
                            Price = 40m
                        },
                        new
                        {
                            InventoryPrice_Id = 9,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2699),
                            Inventory_ItemId = 9,
                            Price = 28m
                        },
                        new
                        {
                            InventoryPrice_Id = 10,
                            Date = new DateTime(2023, 8, 27, 21, 28, 42, 105, DateTimeKind.Local).AddTicks(2709),
                            Inventory_ItemId = 10,
                            Price = 35m
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Type", b =>
                {
                    b.Property<int>("Inventory_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inventory_TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Inventory_TypeId");

                    b.ToTable("Inventory_Types");

                    b.HasData(
                        new
                        {
                            Inventory_TypeId = 1,
                            Description = "For all food inventory items",
                            Name = "Food"
                        },
                        new
                        {
                            Inventory_TypeId = 2,
                            Description = "For all Non-Alcoholic Drink inventory items",
                            Name = "Non-Alcoholic Drinks"
                        },
                        new
                        {
                            Inventory_TypeId = 3,
                            Description = "For all Alcoholic Drink inventory items",
                            Name = "Alcoholic Drinks"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTake", b =>
                {
                    b.Property<int>("StockTake_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockTake_Id"), 1L, 1);

                    b.Property<int?>("Inventory_ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StockTake_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("StockTake_Id");

                    b.HasIndex("Inventory_ItemId");

                    b.ToTable("StockTakes");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTakeItem", b =>
                {
                    b.Property<int>("StockTakeItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockTakeItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Inventory_ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockTake_Id")
                        .HasColumnType("int");

                    b.Property<int>("StockTake_Id1")
                        .HasColumnType("int");

                    b.HasKey("StockTakeItemId");

                    b.HasIndex("Inventory_ItemId");

                    b.HasIndex("StockTake_Id1");

                    b.ToTable("StockTakeItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Supplier_TypeId")
                        .HasColumnType("int");

                    b.HasKey("SupplierId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("Supplier_TypeId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Email_Address = "checkers@gmail.com",
                            PhoneNumber = "0122345654",
                            Physical_Address = "416 Kirkness St, Arcadia",
                            SupplierName = "Checkers",
                            Supplier_TypeId = 3
                        },
                        new
                        {
                            SupplierId = 2,
                            Email_Address = "pnp@gmail.com",
                            PhoneNumber = "0110456543",
                            Physical_Address = "Hatfield Plaza 1122 Burnett Street",
                            SupplierName = "Pick `n Pay",
                            Supplier_TypeId = 3
                        },
                        new
                        {
                            SupplierId = 3,
                            Email_Address = "liquorRack@gmail.com",
                            PhoneNumber = "0656781230",
                            Physical_Address = "Hatfield Plaza 1145 Burnett Street",
                            SupplierName = "Liquor Rack",
                            Supplier_TypeId = 1
                        },
                        new
                        {
                            SupplierId = 4,
                            Email_Address = "bakerMan@gmail.com",
                            PhoneNumber = "0714567890",
                            Physical_Address = "HillCrest Boulevard 110 Lynnwood",
                            SupplierName = "BakerMan",
                            Supplier_TypeId = 4
                        },
                        new
                        {
                            SupplierId = 5,
                            Email_Address = "MJButcher@gmail.com",
                            PhoneNumber = "0865045674",
                            Physical_Address = "143 Atterbury Street",
                            SupplierName = "Mr Jacks Butcher",
                            Supplier_TypeId = 2
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_Inventory", b =>
                {
                    b.Property<int>("SupplierItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierItemId"), 1L, 1);

                    b.Property<int>("Inventory_ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Ordered_Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("SupplierItemId");

                    b.HasIndex("Inventory_ItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Supplier_Inventorys");

                    b.HasData(
                        new
                        {
                            SupplierItemId = 1,
                            Inventory_ItemId = 1,
                            Ordered_Quantity = 33,
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_InventoryItem", b =>
                {
                    b.Property<int>("Inventory_ItemsInventory_ItemId")
                        .HasColumnType("int");

                    b.Property<int>("SuppliersSupplierId")
                        .HasColumnType("int");

                    b.HasKey("Inventory_ItemsInventory_ItemId", "SuppliersSupplierId");

                    b.HasIndex("SuppliersSupplierId");

                    b.ToTable("Supplier_InventoryItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_Type", b =>
                {
                    b.Property<int>("Supplier_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Supplier_TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Supplier_TypeId");

                    b.ToTable("Supplier_Types");

                    b.HasData(
                        new
                        {
                            Supplier_TypeId = 1,
                            Description = "For Alcohol Suppliers",
                            Name = "Alcohol"
                        },
                        new
                        {
                            Supplier_TypeId = 2,
                            Description = "Suppliers who sell meat and poultry",
                            Name = "Meat and Poultry"
                        },
                        new
                        {
                            Supplier_TypeId = 3,
                            Description = "Stores that sell all types",
                            Name = "General"
                        },
                        new
                        {
                            Supplier_TypeId = 4,
                            Description = "Stores that supplier baking ingrediants",
                            Name = "Bakery"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.WriteOffStock", b =>
                {
                    b.Property<int>("WriteOffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WriteOffId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockTakeItemId")
                        .HasColumnType("int");

                    b.HasKey("WriteOffId");

                    b.HasIndex("StockTakeItemId");

                    b.ToTable("WriteOffs");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Login.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Login.IonicAppUser", b =>
                {
                    b.Property<int>("IonicAppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IonicAppUserId"), 1L, 1);

                    b.Property<string>("Email_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IonicAppUserId");

                    b.ToTable("IonicAppUsers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrinkId"), 1L, 1);

                    b.Property<int>("Drink_TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Drink_TypeId1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DrinkId");

                    b.HasIndex("Drink_TypeId");

                    b.HasIndex("Drink_TypeId1");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            DrinkId = 1,
                            Drink_TypeId = 1,
                            Name = "Margarita"
                        },
                        new
                        {
                            DrinkId = 2,
                            Drink_TypeId = 1,
                            Name = "Strawberry Daiquri"
                        },
                        new
                        {
                            DrinkId = 3,
                            Drink_TypeId = 1,
                            Name = "Blood Mary"
                        },
                        new
                        {
                            DrinkId = 4,
                            Drink_TypeId = 2,
                            Name = "Virgin Mojito"
                        },
                        new
                        {
                            DrinkId = 5,
                            Drink_TypeId = 2,
                            Name = "Cappuccino"
                        },
                        new
                        {
                            DrinkId = 6,
                            Drink_TypeId = 2,
                            Name = "Frozen lemonade"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Price", b =>
                {
                    b.Property<int>("Drink_PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Drink_PriceId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.HasKey("Drink_PriceId");

                    b.ToTable("Drink_Prices");

                    b.HasData(
                        new
                        {
                            Drink_PriceId = 1,
                            Amount = 55m,
                            DrinkId = 1
                        },
                        new
                        {
                            Drink_PriceId = 2,
                            Amount = 75m,
                            DrinkId = 2
                        },
                        new
                        {
                            Drink_PriceId = 3,
                            Amount = 99m,
                            DrinkId = 3
                        },
                        new
                        {
                            Drink_PriceId = 4,
                            Amount = 45m,
                            DrinkId = 4
                        },
                        new
                        {
                            Drink_PriceId = 5,
                            Amount = 65m,
                            DrinkId = 5
                        },
                        new
                        {
                            Drink_PriceId = 6,
                            Amount = 100m,
                            DrinkId = 6
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", b =>
                {
                    b.Property<int>("Drink_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Drink_TypeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Drink_TypeId");

                    b.ToTable("Drink_Types");

                    b.HasData(
                        new
                        {
                            Drink_TypeId = 1,
                            Name = "Alcohol"
                        },
                        new
                        {
                            Drink_TypeId = 2,
                            Name = "Non-Alcohol"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Food_Type", b =>
                {
                    b.Property<int>("FoodTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FoodTypeId");

                    b.ToTable("Food_Types");

                    b.HasData(
                        new
                        {
                            FoodTypeId = 1,
                            Description = "Meals consisting of chicken",
                            Name = "Chicken"
                        },
                        new
                        {
                            FoodTypeId = 2,
                            Description = "Meals consisting of beef",
                            Name = "Beef"
                        },
                        new
                        {
                            FoodTypeId = 3,
                            Description = "Meals suitable for vegetarians",
                            Name = "Vegetarian"
                        },
                        new
                        {
                            FoodTypeId = 4,
                            Description = "Meals suitable for Vegans",
                            Name = "Vegan"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.KitchenOrder", b =>
                {
                    b.Property<int>("KitchenOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KitchenOrderId"), 1L, 1);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KitchenOrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderedDrinks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderedItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("KitchenOrderId");

                    b.ToTable("KitchenOrders");

                    b.HasData(
                        new
                        {
                            KitchenOrderId = 1,
                            Discount = 0m,
                            KitchenOrderNumber = "TAKE-0001",
                            OrderedDrinks = "Frozen lemonade, Margarita",
                            OrderedItems = "Toatsed beef panini sandwich, Mexican salad",
                            Subtotal = 193.59m,
                            TableNumber = "",
                            Total = 225.10m,
                            VAT = 31.51m
                        },
                        new
                        {
                            KitchenOrderId = 2,
                            Discount = 0m,
                            KitchenOrderNumber = "SIT-0201",
                            OrderedDrinks = "Strawberry Daiquri, Frozen lemonade, Margarita, Blood Mary",
                            OrderedItems = "Chicken Feast",
                            Subtotal = 373.54m,
                            TableNumber = "Table 6",
                            Total = 434.35m,
                            VAT = 60.81m
                        },
                        new
                        {
                            KitchenOrderId = 3,
                            Discount = 50m,
                            KitchenOrderNumber = "SIT-0202",
                            OrderedDrinks = "Strawberry Daiquri, Frozen lemonade",
                            OrderedItems = "Chicken Feast, Chilli cheese poppers",
                            Subtotal = 280.23m,
                            TableNumber = "Table 2",
                            Total = 275.85m,
                            VAT = 45.62m
                        },
                        new
                        {
                            KitchenOrderId = 4,
                            Discount = 21.07m,
                            KitchenOrderNumber = "SIT-0203",
                            OrderedDrinks = "Blood Mary,Virgin Mojito",
                            OrderedItems = "Blueberry cheescake slice, Blueberry cheescake slice",
                            Subtotal = 210.70m,
                            TableNumber = "Table 1",
                            Total = 223.93m,
                            VAT = 34.30m
                        },
                        new
                        {
                            KitchenOrderId = 5,
                            Discount = 12.56m,
                            KitchenOrderNumber = "SIT-0204",
                            OrderedDrinks = "Virgin Mojito",
                            OrderedItems = "Blueberry cheescake slice, Blueberry cheescake slice",
                            Subtotal = 125.56m,
                            TableNumber = "Table 4",
                            Total = 133.44m,
                            VAT = 20.44m
                        },
                        new
                        {
                            KitchenOrderId = 6,
                            Discount = 0m,
                            KitchenOrderNumber = "TAKE-0002",
                            OrderedDrinks = "Cappuccino",
                            OrderedItems = "English Breakfast",
                            Subtotal = 135.02m,
                            TableNumber = "",
                            Total = 157m,
                            VAT = 21.98m
                        },
                        new
                        {
                            KitchenOrderId = 7,
                            Discount = 0m,
                            KitchenOrderNumber = "SIT-0205",
                            OrderedDrinks = "Strawberry Daiquri, Strawberry Daiquri, Blood Mary,Magarita,Strawberry Daiquri ",
                            OrderedItems = "",
                            Subtotal = 325.94m,
                            TableNumber = "Table 6",
                            Total = 379m,
                            VAT = 53.06m
                        },
                        new
                        {
                            KitchenOrderId = 8,
                            Discount = 35.05m,
                            KitchenOrderNumber = "TAKE-0003",
                            OrderedDrinks = "Strawberry Daiquri, Strawberry Daiquri",
                            OrderedItems = "The Braai feast",
                            Subtotal = 301.43m,
                            TableNumber = "",
                            Total = 315.45m,
                            VAT = 49.07m
                        },
                        new
                        {
                            KitchenOrderId = 9,
                            Discount = 32.56m,
                            KitchenOrderNumber = "SIT-0206",
                            OrderedDrinks = "Virgin Mojito, Virgin Mojito",
                            OrderedItems = "The Braai feast, Mexican salad",
                            Subtotal = 280.02m,
                            TableNumber = "Table 5",
                            Total = 293.04m,
                            VAT = 45.58m
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Menu_Type", b =>
                {
                    b.Property<int>("Menu_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Menu_TypeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Menu_TypeId");

                    b.ToTable("Menu_Types");

                    b.HasData(
                        new
                        {
                            Menu_TypeId = 1,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Menu_TypeId = 2,
                            Name = "All Day"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FoodTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Food_TypeFoodTypeId1")
                        .HasColumnType("int");

                    b.Property<int>("Menu_CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Menu_TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Menu_TypeId1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MenuItemId");

                    b.HasIndex("FoodTypeId");

                    b.HasIndex("Food_TypeFoodTypeId1");

                    b.HasIndex("Menu_CategoryId");

                    b.HasIndex("Menu_TypeId");

                    b.HasIndex("Menu_TypeId1");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            Description = "Two larger chicken burger, 6 pcs nuggets, two large fries",
                            FoodTypeId = 1,
                            Menu_CategoryId = 3,
                            Menu_TypeId = 2,
                            Name = "Chicken Feast"
                        },
                        new
                        {
                            MenuItemId = 2,
                            Description = "Pap, boerewors an Tbone steak",
                            FoodTypeId = 2,
                            Menu_CategoryId = 3,
                            Menu_TypeId = 2,
                            Name = "The Braai feast"
                        },
                        new
                        {
                            MenuItemId = 3,
                            Description = "Mozarella stuffe cheese balls",
                            FoodTypeId = 3,
                            Menu_CategoryId = 2,
                            Menu_TypeId = 2,
                            Name = "Chilli cheese poppers"
                        },
                        new
                        {
                            MenuItemId = 4,
                            Description = "A green salad with salsa mix",
                            FoodTypeId = 4,
                            Menu_CategoryId = 5,
                            Menu_TypeId = 2,
                            Name = "Mexican salad"
                        },
                        new
                        {
                            MenuItemId = 5,
                            Description = "Delicious cheesecake with blueberry sauce topping",
                            FoodTypeId = 3,
                            Menu_CategoryId = 4,
                            Menu_TypeId = 2,
                            Name = "Blueberry cheescake slice"
                        },
                        new
                        {
                            MenuItemId = 6,
                            Description = "Delicious everyday english breakfast with eggs and bacon",
                            FoodTypeId = 1,
                            Menu_CategoryId = 1,
                            Menu_TypeId = 1,
                            Name = "English Breakfast"
                        },
                        new
                        {
                            MenuItemId = 7,
                            Description = "Smoothy bowl with blueberries, almond milk and honey",
                            FoodTypeId = 4,
                            Menu_CategoryId = 1,
                            Menu_TypeId = 1,
                            Name = "Blueberry smoothy bowl"
                        },
                        new
                        {
                            MenuItemId = 8,
                            Description = "A toasted panini sandwich with beef sausages, tomatos and cheese",
                            FoodTypeId = 2,
                            Menu_CategoryId = 1,
                            Menu_TypeId = 1,
                            Name = "Toatsed beef panini sandwich"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", b =>
                {
                    b.Property<int>("Menu_CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Menu_CategoryId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MenuItem_CategoryMenu_CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Menu_CategoryId");

                    b.HasIndex("MenuItem_CategoryMenu_CategoryId");

                    b.ToTable("MenuItem_Categories");

                    b.HasData(
                        new
                        {
                            Menu_CategoryId = 1,
                            Description = "Meals between 7am to 12pm",
                            Name = "Breakfast"
                        },
                        new
                        {
                            Menu_CategoryId = 2,
                            Description = "Appetisers",
                            Name = "Starter"
                        },
                        new
                        {
                            Menu_CategoryId = 3,
                            Description = "Big and Filling meals",
                            Name = "Main"
                        },
                        new
                        {
                            Menu_CategoryId = 4,
                            Description = "Special things for those with a sweet tooth",
                            Name = "Dessert"
                        },
                        new
                        {
                            Menu_CategoryId = 5,
                            Description = "For those hungry but not hungry",
                            Name = "Light Meals"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Price", b =>
                {
                    b.Property<int>("MenuItem_PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItem_PriceId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.HasKey("MenuItem_PriceId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuItem_Prices");

                    b.HasData(
                        new
                        {
                            MenuItem_PriceId = 1,
                            Amount = 50.50m,
                            MenuItemId = 5
                        },
                        new
                        {
                            MenuItem_PriceId = 2,
                            Amount = 105.35m,
                            MenuItemId = 1
                        },
                        new
                        {
                            MenuItem_PriceId = 3,
                            Amount = 35.10m,
                            MenuItemId = 4
                        },
                        new
                        {
                            MenuItem_PriceId = 5,
                            Amount = 200.50m,
                            MenuItemId = 2
                        },
                        new
                        {
                            MenuItem_PriceId = 6,
                            Amount = 45.50m,
                            MenuItemId = 3
                        },
                        new
                        {
                            MenuItem_PriceId = 10,
                            Amount = 92.00m,
                            MenuItemId = 6
                        },
                        new
                        {
                            MenuItem_PriceId = 11,
                            Amount = 52.00m,
                            MenuItemId = 7
                        },
                        new
                        {
                            MenuItem_PriceId = 12,
                            Amount = 35.00m,
                            MenuItemId = 8
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Order_StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("Payment_MethodId")
                        .HasColumnType("int");

                    b.Property<int?>("Table_NumberId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("Order_StatusId");

                    b.HasIndex("Payment_MethodId");

                    b.HasIndex("Table_NumberId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_MenuItem", b =>
                {
                    b.Property<int>("MenuItemsMenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersOrderId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemsMenuItemId", "OrdersOrderId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("Order_MenuItem");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Status", b =>
                {
                    b.Property<int>("Order_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_StatusId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Order_StatusId");

                    b.ToTable("Order_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.OrderType", b =>
                {
                    b.Property<int>("OrderType_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderType_ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OrderType_ID");

                    b.ToTable("OrderTypes");

                    b.HasData(
                        new
                        {
                            OrderType_ID = 1,
                            Name = "Sit-In"
                        },
                        new
                        {
                            OrderType_ID = 2,
                            Name = "Takeaway"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.OtherDrink", b =>
                {
                    b.Property<int>("OtherDrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtherDrinkId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Drink_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OtherDrinkId");

                    b.HasIndex("Drink_TypeId");

                    b.ToTable("OtherDrinks");

                    b.HasData(
                        new
                        {
                            OtherDrinkId = 1,
                            Description = "Vodka, pineapple juice and lemon syrup",
                            Drink_TypeId = 1,
                            Name = "Margarita"
                        },
                        new
                        {
                            OtherDrinkId = 2,
                            Description = "Crushed ice lemonade juice ",
                            Drink_TypeId = 2,
                            Name = "Frozen Lemonade"
                        },
                        new
                        {
                            OtherDrinkId = 3,
                            Description = "Crushed ice, strawberry lemonade, vodka, strawberry syrup",
                            Drink_TypeId = 1,
                            Name = "Strawberry Diaquri "
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.OtherDrinkPrice", b =>
                {
                    b.Property<int>("OtherDrinkPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtherDrinkPriceId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OtherDrinkId")
                        .HasColumnType("int");

                    b.HasKey("OtherDrinkPriceId");

                    b.HasIndex("OtherDrinkId");

                    b.ToTable("OtherDrinkPrices");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Payment_MethodId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("Payment_MethodId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", b =>
                {
                    b.Property<int>("Payment_MethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_MethodId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Payment_MethodId");

                    b.ToTable("Payment_Methods");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Table_Number", b =>
                {
                    b.Property<int>("Table_NumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Table_NumberId"), 1L, 1);

                    b.Property<string>("TableID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Table_NumberId");

                    b.ToTable("Table_Numbers");

                    b.HasData(
                        new
                        {
                            Table_NumberId = 1,
                            TableID = "Table 1"
                        },
                        new
                        {
                            Table_NumberId = 2,
                            TableID = "Table 2"
                        },
                        new
                        {
                            Table_NumberId = 3,
                            TableID = "Table 3"
                        },
                        new
                        {
                            Table_NumberId = 4,
                            TableID = "Table 4"
                        },
                        new
                        {
                            Table_NumberId = 5,
                            TableID = "Table 5"
                        },
                        new
                        {
                            Table_NumberId = 6,
                            TableID = "Table 6"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntertainmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Entertainment_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ResetPasswordTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("User_RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Entertainment_TypeId");

                    b.HasIndex("TitleId");

                    b.HasIndex("User_RoleId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DrinkOrder", b =>
                {
                    b.Property<int>("DrinksDrinkId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersOrderId")
                        .HasColumnType("int");

                    b.HasKey("DrinksDrinkId", "OrdersOrderId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("DrinkOrder");
                });

            modelBuilder.Entity("EntertainerSchedule", b =>
                {
                    b.Property<int>("EntertainersEntertainerId")
                        .HasColumnType("int");

                    b.Property<int>("SchedulesScheduleId")
                        .HasColumnType("int");

                    b.HasKey("EntertainersEntertainerId", "SchedulesScheduleId");

                    b.HasIndex("SchedulesScheduleId");

                    b.ToTable("EntertainerSchedule");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Access_UserRole", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Access", null)
                        .WithMany()
                        .HasForeignKey("AccessesAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.User_Role", null)
                        .WithMany()
                        .HasForeignKey("User_RolesUser_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Discount", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Discounts")
                        .HasForeignKey("AdministratorId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Employee_Role", "Employee_Role")
                        .WithMany("Employees")
                        .HasForeignKey("Employee_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee_Role");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Gender", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Gender", null)
                        .WithMany("Genders")
                        .HasForeignKey("GenderId1");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Help", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Helps")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Help_Category", null)
                        .WithMany("Helps")
                        .HasForeignKey("Help_CategoryId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Bookings", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Booking_Status", null)
                        .WithMany("Booking")
                        .HasForeignKey("Booking_StatusId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainer", null)
                        .WithMany("Booking")
                        .HasForeignKey("EntertainerId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", "EntertainmentType")
                        .WithMany()
                        .HasForeignKey("Entertainment_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntertainmentType");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainer", null)
                        .WithMany("Entertainment_Types")
                        .HasForeignKey("EntertainerId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Event", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Events")
                        .HasForeignKey("AdministratorId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Pending_Booking", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", "EntertainmentType")
                        .WithMany("Pending_Bookings")
                        .HasForeignKey("Entertainment_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Event", null)
                        .WithMany("Pending_Bookings")
                        .HasForeignKey("EventId");

                    b.Navigation("EntertainmentType");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Schedules")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Event", "Event")
                        .WithMany("Schedules")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Schedule_Status", null)
                        .WithMany("Schedules")
                        .HasForeignKey("Schedule_StatusId");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.DiscrepencyItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.WriteOffStock", null)
                        .WithMany("DiscrepencyItems")
                        .HasForeignKey("WriteOffStockWriteOffId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Inventorys")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Type", "Inventory_Type")
                        .WithMany("Inventory_Items")
                        .HasForeignKey("Inventory_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Price", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", null)
                        .WithMany("Inventory_Prices")
                        .HasForeignKey("Inventory_ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTake", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", null)
                        .WithMany("StockTakes")
                        .HasForeignKey("Inventory_ItemId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTakeItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", "Inventory_Item")
                        .WithMany("StockTakeItems")
                        .HasForeignKey("Inventory_ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.StockTake", "StockTake")
                        .WithMany("StockTakeItems")
                        .HasForeignKey("StockTake_Id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory_Item");

                    b.Navigation("StockTake");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Suppliers")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Supplier_Type", "Supplier_Type")
                        .WithMany("Suppliers")
                        .HasForeignKey("Supplier_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_Inventory", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", "Inventory_Item")
                        .WithMany("Supplier_Inventorys")
                        .HasForeignKey("Inventory_ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Supplier", "Supplier")
                        .WithMany("Supplier_Inventorys")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory_Item");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_InventoryItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", null)
                        .WithMany()
                        .HasForeignKey("Inventory_ItemsInventory_ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SuppliersSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.WriteOffStock", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.StockTakeItem", "StockTakeItem")
                        .WithMany("WriteOffs")
                        .HasForeignKey("StockTakeItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockTakeItem");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", "Drink_Type")
                        .WithMany()
                        .HasForeignKey("Drink_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", null)
                        .WithMany("Drinks")
                        .HasForeignKey("Drink_TypeId1");

                    b.Navigation("Drink_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Food_Type", "Food_Type")
                        .WithMany()
                        .HasForeignKey("FoodTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Food_Type", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("Food_TypeFoodTypeId1");

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", "MenuItem_Category")
                        .WithMany()
                        .HasForeignKey("Menu_CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Menu_Type", "Menu_Type")
                        .WithMany()
                        .HasForeignKey("Menu_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Menu_Type", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("Menu_TypeId1");

                    b.Navigation("Food_Type");

                    b.Navigation("MenuItem_Category");

                    b.Navigation("Menu_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuItem_CategoryMenu_CategoryId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Price", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", null)
                        .WithMany("MenuItem_Prices")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Employee", null)
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order_Status", null)
                        .WithMany("Orders")
                        .HasForeignKey("Order_StatusId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", null)
                        .WithMany("Orders")
                        .HasForeignKey("Payment_MethodId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Table_Number", null)
                        .WithMany("Orders")
                        .HasForeignKey("Table_NumberId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_MenuItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", null)
                        .WithMany()
                        .HasForeignKey("MenuItemsMenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.OtherDrink", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", "Drink_Type")
                        .WithMany()
                        .HasForeignKey("Drink_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.OtherDrinkPrice", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.OtherDrink", null)
                        .WithMany("OtherDrinkPrices")
                        .HasForeignKey("OtherDrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", null)
                        .WithMany("Payment_Methods")
                        .HasForeignKey("Payment_MethodId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.User", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", "Entertainment_Type")
                        .WithMany("Users")
                        .HasForeignKey("Entertainment_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Title", null)
                        .WithMany("Users")
                        .HasForeignKey("TitleId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.User_Role", null)
                        .WithMany("Users")
                        .HasForeignKey("User_RoleId");

                    b.Navigation("Entertainment_Type");
                });

            modelBuilder.Entity("DrinkOrder", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink", null)
                        .WithMany()
                        .HasForeignKey("DrinksDrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntertainerSchedule", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainer", null)
                        .WithMany()
                        .HasForeignKey("EntertainersEntertainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Schedule", null)
                        .WithMany()
                        .HasForeignKey("SchedulesScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Administrator", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Events");

                    b.Navigation("Helps");

                    b.Navigation("Inventorys");

                    b.Navigation("Schedules");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee_Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Gender", b =>
                {
                    b.Navigation("Genders");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Help_Category", b =>
                {
                    b.Navigation("Helps");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Title", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.User_Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Booking_Status", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer", b =>
                {
                    b.Navigation("Booking");

                    b.Navigation("Entertainment_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", b =>
                {
                    b.Navigation("Pending_Bookings");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Event", b =>
                {
                    b.Navigation("Pending_Bookings");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule_Status", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", b =>
                {
                    b.Navigation("Inventory_Prices");

                    b.Navigation("StockTakeItems");

                    b.Navigation("StockTakes");

                    b.Navigation("Supplier_Inventorys");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Type", b =>
                {
                    b.Navigation("Inventory_Items");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTake", b =>
                {
                    b.Navigation("StockTakeItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTakeItem", b =>
                {
                    b.Navigation("WriteOffs");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier", b =>
                {
                    b.Navigation("Supplier_Inventorys");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_Type", b =>
                {
                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.WriteOffStock", b =>
                {
                    b.Navigation("DiscrepencyItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", b =>
                {
                    b.Navigation("Drinks");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Food_Type", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Menu_Type", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", b =>
                {
                    b.Navigation("MenuItem_Prices");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Status", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.OtherDrink", b =>
                {
                    b.Navigation("OtherDrinkPrices");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Payment_Methods");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Table_Number", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
