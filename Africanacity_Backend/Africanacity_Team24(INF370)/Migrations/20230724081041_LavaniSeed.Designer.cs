// <auto-generated />
using System;
using Africanacity_Team24_INF370_.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Africanacity_Team24_INF370_.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230724081041_LavaniSeed")]
    partial class LavaniSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.Help", b =>
                {
                    b.Property<int>("HelpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HelpId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Help_CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HelpId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("Help_CategoryId");

                    b.ToTable("Helps");

                    b.HasData(
                        new
                        {
                            HelpId = 1,
                            Description = "MMINO Restaurant serves various types of cuisines",
                            Name = "What food does MMINO Restaurant serve?"
                        },
                        new
                        {
                            HelpId = 2,
                            Description = "MMINO Restaurant is located in Hatfield,Pretoria. 1005 Arcadia Street",
                            Name = "Where is MMINO Restaurant?"
                        },
                        new
                        {
                            HelpId = 3,
                            Description = "You can book for a live entertainment on the website.",
                            Name = "How how do you book for a live entertainment slot?"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TitleId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.Property<int?>("User_RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("UserId");

                    b.HasIndex("TitleId");

                    b.HasIndex("User_RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Access", b =>
                {
                    b.Property<int>("AccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccessId");

                    b.ToTable("Accesses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Access_UserRole", b =>
                {
                    b.Property<int>("AccessesAccessId")
                        .HasColumnType("int");

                    b.Property<int>("User_RolesUser_RoleId")
                        .HasColumnType("int");

                    b.HasKey("AccessesAccessId", "User_RolesUser_RoleId");

                    b.HasIndex("User_RolesUser_RoleId");

                    b.ToTable("Access_UserRoles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Administrator", b =>
                {
                    b.Property<int>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministratorId"), 1L, 1);

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AdministratorId");

                    b.HasIndex("UserId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId");

                    b.HasIndex("AdministratorId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Employee_RoleId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("Employee_RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email_Address = "VanessaJames@gmail.com",
                            Employee_RoleId = 1,
                            FirstName = "Vanessa",
                            PhoneNumber = "0847541236",
                            Physical_Address = "404 Jacob Street",
                            Surname = "James"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Email_Address = "SerenaWilliams@gmail.com",
                            Employee_RoleId = 2,
                            FirstName = "Serena",
                            PhoneNumber = "0842341236",
                            Physical_Address = "132 Harriet Street",
                            Surname = "Williams"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Email_Address = "EdrisElba@gmail.com",
                            Employee_RoleId = 1,
                            FirstName = "Edris",
                            PhoneNumber = "0212378798",
                            Physical_Address = "245 homelyn Street",
                            Surname = "Elba"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Email_Address = "NyongoLupita@gmail.com",
                            Employee_RoleId = 2,
                            FirstName = "Lupita",
                            PhoneNumber = "0455783475",
                            Physical_Address = "254 Summer Street",
                            Surname = "Nyongo"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Email_Address = "MicheaJackson@gmail.com",
                            Employee_RoleId = 2,
                            FirstName = "Micheal",
                            PhoneNumber = "0874567836",
                            Physical_Address = "567 Winter Street",
                            Surname = "Jackson"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Email_Address = "TaehyungKim@gmial.com",
                            Employee_RoleId = 1,
                            FirstName = "Taehyung",
                            PhoneNumber = "0874562134",
                            Physical_Address = "345 Shallow  Street",
                            Surname = "Kim"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Email_Address = "ZendayaColeman@gmail.com",
                            Employee_RoleId = 1,
                            FirstName = "Zendaya",
                            PhoneNumber = "0212378798",
                            Physical_Address = "243 Super Street ",
                            Surname = "Coleman"
                        },
                        new
                        {
                            EmployeeId = 8,
                            Email_Address = "RogerFederal@gmail.com",
                            Employee_RoleId = 1,
                            FirstName = "Roger",
                            PhoneNumber = "0612346487",
                            Physical_Address = "987 Wall Street",
                            Surname = "Federal"
                        },
                        new
                        {
                            EmployeeId = 9,
                            Email_Address = "JenniferLOpez@gmail.com",
                            Employee_RoleId = 2,
                            FirstName = "Jennifer",
                            PhoneNumber = "0874834576",
                            Physical_Address = "967 Ballard Street",
                            Surname = "Lopez"
                        },
                        new
                        {
                            EmployeeId = 10,
                            Email_Address = "ChadwickBoseman@gmail.com",
                            Employee_RoleId = 2,
                            FirstName = "Chadwick",
                            PhoneNumber = "0923456789",
                            Physical_Address = "483 Alien Street",
                            Surname = "Boseman"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee_Role", b =>
                {
                    b.Property<int>("Employee_RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_RoleId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Employee_RoleId");

                    b.ToTable("Employee_Roles");

                    b.HasData(
                        new
                        {
                            Employee_RoleId = 1,
                            Description = "The waiter serves the customers and takes orders",
                            Name = "Waiter"
                        },
                        new
                        {
                            Employee_RoleId = 2,
                            Description = "The chef prepares the meals and notifies the waiter of ready orders.",
                            Name = "Chef"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Help_Category", b =>
                {
                    b.Property<int>("Help_CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Help_CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Help_CategoryId");

                    b.ToTable("Help_Categories");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Password", b =>
                {
                    b.Property<int>("PasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PasswordId"), 1L, 1);

                    b.Property<string>("Dataset")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PasswordId");

                    b.HasIndex("UserId");

                    b.ToTable("Passwords");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.User_Role", b =>
                {
                    b.Property<int>("User_RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_RoleId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("User_RoleId");

                    b.ToTable("User_Roles");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.VAT", b =>
                {
                    b.Property<int>("VatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VatId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VatId");

                    b.ToTable("Vats");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Booking_Status", b =>
                {
                    b.Property<int>("Booking_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_StatusId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Booking_StatusId");

                    b.ToTable("Booking_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Bookings", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<int?>("Booking_StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EntertainerId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("Booking_StatusId");

                    b.HasIndex("EntertainerId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer", b =>
                {
                    b.Property<int>("EntertainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntertainerId"), 1L, 1);

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EntertainerId");

                    b.HasIndex("UserId");

                    b.ToTable("Entertainers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_EntertainmentType", b =>
                {
                    b.Property<int>("EntertainersEntertainerId")
                        .HasColumnType("int");

                    b.Property<int>("Entertainment_TypesEntertainment_TypeId")
                        .HasColumnType("int");

                    b.HasKey("EntertainersEntertainerId", "Entertainment_TypesEntertainment_TypeId");

                    b.HasIndex("Entertainment_TypesEntertainment_TypeId");

                    b.ToTable("Entertainer_Entertainments");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_Schedule", b =>
                {
                    b.Property<int>("EntertainersEntertainerId")
                        .HasColumnType("int");

                    b.Property<int>("SchedulesScheduleId")
                        .HasColumnType("int");

                    b.HasKey("EntertainersEntertainerId", "SchedulesScheduleId");

                    b.HasIndex("SchedulesScheduleId");

                    b.ToTable("Entertainer_Schedules");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", b =>
                {
                    b.Property<int>("Entertainment_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Entertainment_TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Entertainment_TypeId");

                    b.ToTable("Entertainment_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EventId");

                    b.HasIndex("AdministratorId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("End_Time")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Schedule_StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ScheduleId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("Schedule_StatusId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule_Status", b =>
                {
                    b.Property<int>("Schedule_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Schedule_StatusId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Schedule_StatusId");

                    b.ToTable("Schedule_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", b =>
                {
                    b.Property<int>("Inventory_ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inventory_ItemId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Inventory_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StockTake_Id")
                        .HasColumnType("int");

                    b.HasKey("Inventory_ItemId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("Inventory_TypeId");

                    b.HasIndex("StockTake_Id");

                    b.ToTable("Inventory_Items");

                    b.HasData(
                        new
                        {
                            Inventory_ItemId = 1,
                            Description = "Freshly produced",
                            Inventory_TypeId = 1,
                            ItemName = "Lettuce",
                            Quantity = 2
                        },
                        new
                        {
                            Inventory_ItemId = 2,
                            Description = "Used for all chicken dishes",
                            Inventory_TypeId = 1,
                            ItemName = "Chicken",
                            Quantity = 6
                        },
                        new
                        {
                            Inventory_ItemId = 3,
                            Description = "Needs to be cooked well",
                            Inventory_TypeId = 1,
                            ItemName = "Mogodu",
                            Quantity = 5
                        },
                        new
                        {
                            Inventory_ItemId = 4,
                            Description = "Served in all drinks with the gin recipie",
                            Inventory_TypeId = 3,
                            ItemName = "Gin",
                            Quantity = 15
                        },
                        new
                        {
                            Inventory_ItemId = 5,
                            Description = "To Quench your Thirst",
                            Inventory_TypeId = 2,
                            ItemName = "Coke",
                            Quantity = 24
                        },
                        new
                        {
                            Inventory_ItemId = 6,
                            Description = "For those who like no taste",
                            Inventory_TypeId = 2,
                            ItemName = "Sarkling Water",
                            Quantity = 30
                        },
                        new
                        {
                            Inventory_ItemId = 7,
                            Description = "Many different types served",
                            Inventory_TypeId = 3,
                            ItemName = "Beer",
                            Quantity = 12
                        },
                        new
                        {
                            Inventory_ItemId = 8,
                            Description = "One of the starches served with each dish",
                            Inventory_TypeId = 1,
                            ItemName = "Rice",
                            Quantity = 4
                        },
                        new
                        {
                            Inventory_ItemId = 9,
                            Description = "One of the starches served with each dish",
                            Inventory_TypeId = 1,
                            ItemName = "Maize Meal",
                            Quantity = 3
                        },
                        new
                        {
                            Inventory_ItemId = 10,
                            Description = "For those who do not like fizz",
                            Inventory_TypeId = 2,
                            ItemName = "Apple Juice",
                            Quantity = 24
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Type", b =>
                {
                    b.Property<int>("Inventory_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inventory_TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Inventory_TypeId");

                    b.ToTable("Inventory_Types");

                    b.HasData(
                        new
                        {
                            Inventory_TypeId = 1,
                            Description = "For all food inventory items",
                            Name = "Food"
                        },
                        new
                        {
                            Inventory_TypeId = 2,
                            Description = "For all Non-Alcoholic Drink inventory items",
                            Name = "Non-Alcoholic Drinks"
                        },
                        new
                        {
                            Inventory_TypeId = 3,
                            Description = "For all Alcoholic Drink inventory items",
                            Name = "Alcoholic Drinks"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTake", b =>
                {
                    b.Property<int>("StockTake_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockTake_Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("StockTake_Id");

                    b.ToTable("StockTakes");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTakeItem", b =>
                {
                    b.Property<int>("StockTakeItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockTakeItemId"), 1L, 1);

                    b.Property<string>("DifferenceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("int");

                    b.Property<int>("StockTakeId")
                        .HasColumnType("int");

                    b.Property<int>("StockTakeQuantity")
                        .HasColumnType("int");

                    b.HasKey("StockTakeItemId");

                    b.HasIndex("StockTakeId");

                    b.ToTable("StockTakeItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Email_Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Physical_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Supplier_TypeId")
                        .HasColumnType("int");

                    b.HasKey("SupplierId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("Supplier_TypeId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Email_Address = "checkers@gmail.com",
                            PhoneNumber = "0122345654",
                            Physical_Address = "416 Kirkness St, Arcadia",
                            SupplierName = "Checkers",
                            Supplier_TypeId = 3
                        },
                        new
                        {
                            SupplierId = 2,
                            Email_Address = "pnp@gmail.com",
                            PhoneNumber = "0110456543",
                            Physical_Address = "Hatfield Plaza 1122 Burnett Street",
                            SupplierName = "Pick `n Pay",
                            Supplier_TypeId = 3
                        },
                        new
                        {
                            SupplierId = 3,
                            Email_Address = "liquorRack@gmail.com",
                            PhoneNumber = "0656781230",
                            Physical_Address = "Hatfield Plaza 1145 Burnett Street",
                            SupplierName = "Liquor Rack",
                            Supplier_TypeId = 1
                        },
                        new
                        {
                            SupplierId = 4,
                            Email_Address = "bakerMan@gmail.com",
                            PhoneNumber = "0714567890",
                            Physical_Address = "HillCrest Boulevard 110 Lynnwood",
                            SupplierName = "BakerMan",
                            Supplier_TypeId = 4
                        },
                        new
                        {
                            SupplierId = 5,
                            Email_Address = "MJButcher@gmail.com",
                            PhoneNumber = "0865045674",
                            Physical_Address = "143 Atterbury Street",
                            SupplierName = "Mr Jacks Butcher",
                            Supplier_TypeId = 2
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_InventoryItem", b =>
                {
                    b.Property<int>("Inventory_ItemsInventory_ItemId")
                        .HasColumnType("int");

                    b.Property<int>("SuppliersSupplierId")
                        .HasColumnType("int");

                    b.HasKey("Inventory_ItemsInventory_ItemId", "SuppliersSupplierId");

                    b.HasIndex("SuppliersSupplierId");

                    b.ToTable("Supplier_InventoryItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_Type", b =>
                {
                    b.Property<int>("Supplier_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Supplier_TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Supplier_TypeId");

                    b.ToTable("Supplier_Types");

                    b.HasData(
                        new
                        {
                            Supplier_TypeId = 1,
                            Description = "For Alcohol Suppliers",
                            Name = "Alcohol"
                        },
                        new
                        {
                            Supplier_TypeId = 2,
                            Description = "Suppliers who sell meat and poultry",
                            Name = "Meat and Poultry"
                        },
                        new
                        {
                            Supplier_TypeId = 3,
                            Description = "Stores that sell all types",
                            Name = "General"
                        },
                        new
                        {
                            Supplier_TypeId = 4,
                            Description = "Stores that supplier baking ingrediants",
                            Name = "Bakery"
                        });
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Login.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrinkId"), 1L, 1);

                    b.Property<int?>("Drink_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DrinkId");

                    b.HasIndex("Drink_TypeId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Price", b =>
                {
                    b.Property<int>("Drink_PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Drink_PriceId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("DrinkId")
                        .HasColumnType("int");

                    b.HasKey("Drink_PriceId");

                    b.HasIndex("DrinkId");

                    b.ToTable("Drink_Prices");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", b =>
                {
                    b.Property<int>("Drink_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Drink_TypeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Drink_TypeId");

                    b.ToTable("Drink_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Food_Type", b =>
                {
                    b.Property<int>("FoodTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FoodTypeId");

                    b.ToTable("Food_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Menu_Type", b =>
                {
                    b.Property<int>("Menu_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Menu_TypeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Menu_TypeId");

                    b.ToTable("Menu_Types");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FoodTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Food_TypeFoodTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MenuItem_CategoryMenu_CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Menu_CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Menu_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MenuItemId");

                    b.HasIndex("Food_TypeFoodTypeId");

                    b.HasIndex("MenuItem_CategoryMenu_CategoryId");

                    b.HasIndex("Menu_TypeId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", b =>
                {
                    b.Property<int>("Menu_CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Menu_CategoryId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Menu_CategoryId");

                    b.ToTable("MenuItem_Categories");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Price", b =>
                {
                    b.Property<int>("MenuItem_PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItem_PriceId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MenuItem_PriceId");

                    b.ToTable("MenuItem_Prices");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Order_StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("Payment_MethodId")
                        .HasColumnType("int");

                    b.Property<int?>("Table_NumberId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("Order_StatusId");

                    b.HasIndex("Payment_MethodId");

                    b.HasIndex("Table_NumberId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Drink", b =>
                {
                    b.Property<int>("DrinksDrinkId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("DrinksDrinkId", "OrdersOrderId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("Order_Drinks");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_MenuItem", b =>
                {
                    b.Property<int>("MenuItemsMenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersOrderId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemsMenuItemId", "OrdersOrderId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("Order_MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Status", b =>
                {
                    b.Property<int>("Order_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_StatusId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Order_StatusId");

                    b.ToTable("Order_Statuses");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Payment_MethodId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("Payment_MethodId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", b =>
                {
                    b.Property<int>("Payment_MethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_MethodId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Payment_MethodId");

                    b.ToTable("Payment_Methods");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Table_Number", b =>
                {
                    b.Property<int>("Table_NumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Table_NumberId"), 1L, 1);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Table_NumberId");

                    b.ToTable("Table_Numbers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.Help", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Helps")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Help_Category", null)
                        .WithMany("Helps")
                        .HasForeignKey("Help_CategoryId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.User", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Admin.Title", null)
                        .WithMany("Users")
                        .HasForeignKey("TitleId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.User_Role", null)
                        .WithMany("Users")
                        .HasForeignKey("User_RoleId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Access_UserRole", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Access", null)
                        .WithMany()
                        .HasForeignKey("AccessesAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.User_Role", null)
                        .WithMany()
                        .HasForeignKey("User_RolesUser_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Administrator", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Admin.User", null)
                        .WithMany("Administrators")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Discount", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Discounts")
                        .HasForeignKey("AdministratorId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Employee_Role", "Employee_Role")
                        .WithMany("Employees")
                        .HasForeignKey("Employee_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Admin.User", null)
                        .WithMany("Employees")
                        .HasForeignKey("UserId");

                    b.Navigation("Employee_Role");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Password", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Admin.User", null)
                        .WithMany("Passwords")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Bookings", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Booking_Status", null)
                        .WithMany("Booking")
                        .HasForeignKey("Booking_StatusId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainer", null)
                        .WithMany("Booking")
                        .HasForeignKey("EntertainerId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Admin.User", null)
                        .WithMany("Entertainers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_EntertainmentType", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainer", null)
                        .WithMany()
                        .HasForeignKey("EntertainersEntertainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainment_Type", null)
                        .WithMany()
                        .HasForeignKey("Entertainment_TypesEntertainment_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer_Schedule", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Entertainer", null)
                        .WithMany()
                        .HasForeignKey("EntertainersEntertainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Schedule", null)
                        .WithMany()
                        .HasForeignKey("SchedulesScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Event", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Events")
                        .HasForeignKey("AdministratorId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Schedules")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Booking.Schedule_Status", null)
                        .WithMany("Schedules")
                        .HasForeignKey("Schedule_StatusId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Inventorys")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Type", "Inventory_Type")
                        .WithMany("Inventory_Items")
                        .HasForeignKey("Inventory_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.StockTake", null)
                        .WithMany("Inventory_Items")
                        .HasForeignKey("StockTake_Id");

                    b.Navigation("Inventory_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTakeItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.StockTake", "StockTake")
                        .WithMany("StockTakeItems")
                        .HasForeignKey("StockTakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockTake");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Administrator", null)
                        .WithMany("Suppliers")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Supplier_Type", "Supplier_Type")
                        .WithMany("Suppliers")
                        .HasForeignKey("Supplier_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_InventoryItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Inventory_Item", null)
                        .WithMany()
                        .HasForeignKey("Inventory_ItemsInventory_ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Inventory.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SuppliersSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", null)
                        .WithMany("Drinks")
                        .HasForeignKey("Drink_TypeId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Price", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink", null)
                        .WithMany("DrinkPrices")
                        .HasForeignKey("DrinkId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Food_Type", "Food_Type")
                        .WithMany("MenuItems")
                        .HasForeignKey("Food_TypeFoodTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", "MenuItem_Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuItem_CategoryMenu_CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Menu_Type", "Menu_Type")
                        .WithMany("MenuItems")
                        .HasForeignKey("Menu_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food_Type");

                    b.Navigation("MenuItem_Category");

                    b.Navigation("Menu_Type");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Administration.Employee", null)
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order_Status", null)
                        .WithMany("Orders")
                        .HasForeignKey("Order_StatusId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", null)
                        .WithMany("Orders")
                        .HasForeignKey("Payment_MethodId");

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Table_Number", null)
                        .WithMany("Orders")
                        .HasForeignKey("Table_NumberId");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Drink", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Drink", null)
                        .WithMany()
                        .HasForeignKey("DrinksDrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_MenuItem", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.MenuItem", null)
                        .WithMany()
                        .HasForeignKey("MenuItemsMenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", null)
                        .WithMany("Payment_Methods")
                        .HasForeignKey("Payment_MethodId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Africanacity_Team24_INF370_.models.Login.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.Title", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Admin.User", b =>
                {
                    b.Navigation("Administrators");

                    b.Navigation("Employees");

                    b.Navigation("Entertainers");

                    b.Navigation("Passwords");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Administrator", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Events");

                    b.Navigation("Helps");

                    b.Navigation("Inventorys");

                    b.Navigation("Schedules");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Employee_Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.Help_Category", b =>
                {
                    b.Navigation("Helps");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Administration.User_Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Booking_Status", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Entertainer", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Booking.Schedule_Status", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Inventory_Type", b =>
                {
                    b.Navigation("Inventory_Items");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.StockTake", b =>
                {
                    b.Navigation("Inventory_Items");

                    b.Navigation("StockTakeItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Inventory.Supplier_Type", b =>
                {
                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink", b =>
                {
                    b.Navigation("DrinkPrices");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Drink_Type", b =>
                {
                    b.Navigation("Drinks");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Food_Type", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Menu_Type", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.MenuItem_Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Order_Status", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Payment_Method", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Payment_Methods");
                });

            modelBuilder.Entity("Africanacity_Team24_INF370_.models.Restraurant.Table_Number", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
